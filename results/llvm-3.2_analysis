../llvm-3.2.src/runtime/libprofile/Profiling.h
../llvm-3.2.src/projects/sample/include/sample.h
../llvm-3.2.src/examples/Fibonacci/fibonacci.cpp
../llvm-3.2.src/examples/ParallelJIT/ParallelJIT.cpp
../llvm-3.2.src/examples/Kaleidoscope/Chapter3/toy.cpp
Comment from lines 183-185:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 183-185 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 310-311:
  success.
  eat ')'.

Lines 310-311 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/Kaleidoscope/Chapter5/toy.cpp
Comment from lines 219-221:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 219-221 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 418-419:
  success.
  eat ')'.

Lines 418-419 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/Kaleidoscope/Chapter7/toy.cpp
Comment from lines 265-267:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 265-267 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 404-404:
  eat the '='.

Lines 404-404 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 414-414:
  eat the ','.

Lines 414-414 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 431-437:
 / primary
 /   ::= identifierexpr
 /   ::= numberexpr
 /   ::= parenexpr
 /   ::= ifexpr
 /   ::= forexpr
 /   ::= varexpr

Lines 431-437 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 564-565:
  success.
  eat ')'.

Lines 564-565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 567-567:
  Verify right number of names for operator.

Lines 567-567 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/Kaleidoscope/Chapter4/toy.cpp
Comment from lines 190-192:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 190-192 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 317-318:
  success.
  eat ')'.

Lines 317-318 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/Kaleidoscope/Chapter2/toy.cpp
Comment from lines 171-173:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 171-173 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 298-299:
  success.
  eat ')'.

Lines 298-299 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/Kaleidoscope/Chapter6/toy.cpp
Comment from lines 247-249:
 / identifierexpr
 /   ::= identifier
 /   ::= identifier '(' expression* ')'

Lines 247-249 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 499-500:
  success.
  eat ')'.

Lines 499-500 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 502-502:
  Verify right number of names for operator.

Lines 502-502 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/ExceptionDemo/ExceptionDemo.cpp
../llvm-3.2.src/examples/BrainF/BrainFDriver.cpp
../llvm-3.2.src/examples/BrainF/BrainF.cpp
Comment from lines 54-56:
 Function prototypes

 declare void @llvm.memset.p0i8.i32(i8 *, i8, i32, i32, i1)

Lines 54-56 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 147-147:
 declare i32 @puts(i8 *)

Lines 147-147 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/examples/BrainF/BrainF.h
../llvm-3.2.src/examples/HowToUseJIT/HowToUseJIT.cpp
../llvm-3.2.src/examples/ModuleMaker/ModuleMaker.cpp
Comment from lines 51-51:
  explicitly insert it into the basic block...

Lines 51-51 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/PerfectShuffle/PerfectShuffle.cpp
Comment from lines 331-331:
  Evaluate op(LHS,RHS)

Lines 331-331 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 377-381:
  " << CostArray[9] << " entries have higher cost!\n";


  Build up the table to emit.
  This table is 6561*4 = 26244 bytes in size.\n";

Lines 377-381 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/yaml2obj/yaml2obj.cpp
Comment from lines 860-860:
  Call llvm_shutdown() on exit.


Lines 860-860 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/FileUpdate/FileUpdate.cpp
../llvm-3.2.src/utils/obj2yaml/obj2yaml.h
../llvm-3.2.src/utils/obj2yaml/coff2yaml.cpp
../llvm-3.2.src/utils/obj2yaml/obj2yaml.cpp
../llvm-3.2.src/utils/unittest/UnitTestMain/TestMain.cpp
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-internal-inl.h
Comment from lines 51-52:
  For strtoll/_strtoul64/malloc/free.
  For memmove.


Lines 51-52 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 310-311:
  Fisher-Yates shuffle, from
  http://en.wikipedia.org/wiki/Fisher-Yates_shuffle

Lines 310-311 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-linked_ptr.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-param-util-generated.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-internal.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-tuple.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-param-util.h
Comment from lines 339-341:
  class ValuesInIteratorRangeGenerator::Iterator

  No implementation - assignment is unsupported.

Lines 339-341 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-string.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-type-util.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-port.h
Comment from lines 874-879:
  For FullMatch().
  For PartialMatch().

  GTEST_USES_SIMPLE_RE

  For FullMatch();


Lines 874-879 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1608-1608:
  Temporarily disable warning 4996 (deprecated function).

Lines 1608-1608 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-filepath.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/internal/gtest-death-test-internal.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-typed-test.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-printers.h
Comment from lines 631-631:
  This overload prints a (const) char array compactly.

Lines 631-631 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest_pred_impl.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-spi.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest_prod.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-death-test.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-param-test.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-test-part.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest-message.h
../llvm-3.2.src/utils/unittest/googletest/include/gtest/gtest.h
../llvm-3.2.src/utils/TableGen/CodeGenSchedule.h
../llvm-3.2.src/utils/TableGen/CodeGenInstruction.h
Comment from lines 175-176:
 / getSubOperandNumber - Unflatten a operand number into an
 / operand/suboperand pair.

Lines 175-176 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/SetTheory.h
../llvm-3.2.src/utils/TableGen/CodeGenMapTable.cpp
Comment from lines 478-478:
  "<< InstrMapDesc.getName() << "\n";

Lines 478-478 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/CodeGenSchedule.cpp
Comment from lines 1274-1275:
  For each PredTransition, create a new CodeGenSchedTransition, which usually
  requires creating a new SchedClass.

Lines 1274-1275 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/CodeGenTarget.cpp
Comment from lines 445-446:
  If TargetPrefix is specified, make sure that Name starts with
  "llvm.<targetprefix>.".

Lines 445-446 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/InstrInfoEmitter.cpp
Comment from lines 392-392:
  We must emit the PHI opcode first...

Lines 392-392 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 411-413:
  End llvm namespace \n";

  GET_INSTRINFO_ENUM\n\n";

Lines 411-413 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/CodeGenTarget.h
../llvm-3.2.src/utils/TableGen/CodeGenDAGPatterns.cpp
Comment from lines 756-756:
  Matches a ConstantSDNode (+3) and a specific value (+2).

Lines 756-756 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 958-960:
 ===----------------------------------------------------------------------===//
  SDNodeInfo implementation
 

Lines 958-960 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3286-3287:
 / CombineChildVariants - A helper function for binary operators.
 /

Lines 3286-3287 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/IntrinsicEmitter.cpp
Comment from lines 122-122:
  Enum values for Intrinsics.h\n";

Lines 122-122 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 128-128:
  " << Ints[i].Name << "\n";

Lines 128-128 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 143-144:
  Skip over 'llvm.'\n";
  Dispatch on first letter.\n";

Lines 143-144 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 168-168:
  Require "bswap." instead of bswap.

Lines 168-168 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 187-187:
  Note that entry #0 is the invalid intrinsic!\n";

Lines 187-187 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 430-430:
  Global intrinsic function declaration type table.\n";

Lines 430-430 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 626-626:
  GET_INTRINSIC_ATTRIBUTES\n\n";

Lines 626-626 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 640-640:
  " << TargetPrefix << Ints[i].EnumName << " 
Lines 640-640 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 661-661:
  GET_INTRINSIC_MODREF_BEHAVIOR\n\n";

Lines 661-661 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/DAGISelMatcherOpt.cpp
../llvm-3.2.src/utils/TableGen/CallingConvEmitter.cpp
Comment from lines 73-73:
  CC didn't match.\n";

Lines 73-73 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/CodeGenIntrinsics.h
../llvm-3.2.src/utils/TableGen/RegisterInfoEmitter.cpp
Comment from lines 99-99:
  " << Registers.size()+1 << "\n";

Lines 99-99 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 134-134:
  " << i << "\n";

Lines 134-134 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 150-150:
  " << i+1 << "\n";

Lines 150-150 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 156-157:
  End llvm namespace \n";
  GET_REGINFO_ENUM\n\n";

Lines 156-157 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 181-181:
  " << RC.getName() << "\n";

Lines 181-181 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 211-211:
  " << i << ": " << RegUnits.Name << "\n";

Lines 211-211 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 232-232:
  " << RegBank.getRegClasses()[i]->getName() << "\n    ";

Lines 232-232 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 277-279:
  " << Namespace << " Dwarf<->LLVM register mappings.\n";

  Emit reverse information about the dwarf register numbers.

Lines 277-279 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 778-781:
  Loop over all of the register classes... emitting each one.
  Register classes...\n";

  Emit the register enum value arrays for each RegisterClass

Lines 778-781 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 789-790:
  Emit the register list now.
  " << Name << " Register Class...\n"

Lines 789-790 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 799-799:
  " << Name << " Bit set.\n"

Lines 799-799 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 929-929:
  end of namespace " << TargetName << "\n\n";

Lines 929-929 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 931-932:
  End llvm namespace \n";
  GET_REGINFO_HEADER\n\n";

Lines 931-932 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 989-989:
  ", SubRegIndices[i]->LaneMask)

Lines 989-989 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1174-1174:
  " << RC.getName() << "\n";

Lines 1174-1174 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1181-1181:
  " << Idx->getName() << "\n";

Lines 1181-1181 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1269-1269:
  End llvm namespace

Lines 1269-1269 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/AsmWriterInst.h
../llvm-3.2.src/utils/TableGen/DFAPacketizerEmitter.cpp
Comment from lines 335-335:
  End llvm namespace \n";

Lines 335-335 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/EDEmitter.cpp
../llvm-3.2.src/utils/TableGen/FixedLenDecoderEmitter.cpp
Comment from lines 129-132:
  '1'
  '0'
  '?'
  unfiltered

Lines 129-132 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 739-739:
  " << Pos << " 
Lines 739-739 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 846-846:
  0x" << utohexstr(Value) << " 
Lines 846-846 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 856-856:
  0x" << utohexstr(Value) << " 
Lines 856-856 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1263-1263:
  The bit is not set; this must be an error!

Lines 1263-1263 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2076-2076:
  End llvm namespace\n";

Lines 2076-2076 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/TableGenBackends.h
../llvm-3.2.src/utils/TableGen/AsmMatcherEmitter.cpp
Comment from lines 822-822:
  If this isn't "${", treat like a normal token.

Lines 822-822 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1015-1015:
  No custom match class. Just use the register class.

Lines 1015-1015 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1624-1624:
  Handle all the suboperands for this operand.

Lines 1624-1624 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1951-1951:
  " << InstructionConversionKinds[Row] << "\n";

Lines 1951-1951 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2027-2027:
  '" << CI.ClassName << "' class\n";

Lines 2027-2027 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2194-2195:
  User-level names for subtarget features that participate in\n"
  instruction matching.\n"

Lines 2194-2195 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2328-2329:
  If this unconditionally matches, remember it for later and diagnose
  duplicates.

Lines 2328-2329 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2419-2419:
  end anonymous namespace.\n\n";


Lines 2419-2419 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2445-2445:
  " << II.Mnemonic << " 
Lines 2445-2445 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2450-2459:
  ";
     bool printComma = false;
     for (int i = 0, e = 31; i !=e; ++i)
       if (OMI.OperandMask & (1 << i)) {
         if (printComma)
           OS << ", ";
         OS << i;
         printComma = true;
       }
     OS << " 
Lines 2450-2459 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2540-2540:
  Okay, we had no match.\n";

Lines 2540-2540 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2618-2620:
  operand matched successfully\n";
  operand did not match\n";
  operand matched but had errors\n";

Lines 2618-2620 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2631-2633:
  GET_ASSEMBLER_HEADER_INFO\n\n";

  Emit the operand match diagnostic enum names.

Lines 2631-2633 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2637-2637:
  GET_OPERAND_DIAGNOSTIC_TYPES\n\n";



Lines 2637-2637 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2651-2651:
  GET_REGISTER_MATCHER\n\n";


Lines 2651-2651 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2659-2659:
  GET_SUBTARGET_FEATURE_NAME\n\n";


Lines 2659-2659 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2844-2844:
  Return a more specific error code if no mnemonics match.\n";

Lines 2844-2844 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2942-2942:
  GET_MATCHER_IMPLEMENTATION\n\n";

Lines 2942-2942 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/AsmWriterInst.cpp
Comment from lines 134-134:
  "$$" -> $

Lines 134-134 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/DAGISelMatcher.h
../llvm-3.2.src/utils/TableGen/CodeGenDAGPatterns.h
../llvm-3.2.src/utils/TableGen/CodeGenInstruction.cpp
../llvm-3.2.src/utils/TableGen/DisassemblerEmitter.cpp
../llvm-3.2.src/utils/TableGen/CodeEmitterGen.cpp
Comment from lines 114-114:
  Scan for a bit that this contributed to.

Lines 114-114 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 156-156:
  op: " + VarName + "\n" +

Lines 156-156 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 163-163:
  op: " + VarName + "\n" +

Lines 163-163 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 277-277:
  " << R->getName() << "\n";

Lines 277-277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/X86DisassemblerShared.h
../llvm-3.2.src/utils/TableGen/StringToOffsetTable.h
../llvm-3.2.src/utils/TableGen/PseudoLoweringEmitter.cpp
Comment from lines 296-296:
  End llvm namespace

Lines 296-296 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/X86ModRMFilters.h
../llvm-3.2.src/utils/TableGen/X86ModRMFilters.cpp
../llvm-3.2.src/utils/TableGen/DAGISelMatcher.cpp
../llvm-3.2.src/utils/TableGen/SequenceToOffsetTable.h
Comment from lines 114-114:
  " << I->second << " 
Lines 114-114 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/FastISelEmitter.cpp
Comment from lines 216-218:
  Handle unmatched immediate sizes here.
 if (Op->getType(0) != VT)
   return false;

Lines 216-218 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 570-570:
  FastEmit Immediate Predicate functions.\n";

Lines 570-570 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 593-593:
  FastEmit functions for " << Opcode << ".\n";

Lines 593-593 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/X86DisassemblerTables.cpp
Comment from lines 319-319:
  Table" << sTableNumber << " 
Lines 319-319 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 356-356:
  Table" << sTableNumber << " 
Lines 356-356 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 425-427:
  ";
     o2 << stringForContext((InstructionContext)index);
     o2 << " 
Lines 425-427 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 471-471:
  " << (OperandSetNum - 1) << " 
Lines 471-471 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 510-510:
  " << InstructionSpecifiers[index].name << " 
Lines 510-510 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 603-603:
  " << index << " 
Lines 603-603 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/X86RecognizableInstr.h
../llvm-3.2.src/utils/TableGen/CodeGenRegisters.h
Comment from lines 80-80:
  Update the composite maps of components specified in 'ComposedOf'.

Lines 80-80 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 377-377:
  Lexicographical order of (Members, SpillSize, SpillAlignment).

Lines 377-377 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/AsmWriterEmitter.cpp
Comment from lines 151-151:
  PHI, INLINEASM, PROLOG_LABEL, etc.


Lines 151-151 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 244-244:
  " + Instrs + "\n" +

Lines 244-244 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 410-410:
  Remember the handlers for this set of operands.

Lines 410-410 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 467-468:
  Compute the number of bits we need to represent these cases, this is
  ceil(log2(numentries)).

Lines 467-468 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 472-473:
  Emit code to extract this field from Bits.
  Fragment " << i << " encoded into " << NumBits

Lines 472-473 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 682-682:
  " << Result << "\n";

Lines 682-682 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/DAGISelEmitter.cpp
Comment from lines 174-174:
  End llvm namespace

Lines 174-174 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/X86RecognizableInstr.cpp
Comment from lines 830-830:
  switch (Form)

Lines 830-830 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 832-832:
  switch (Opcode)

Lines 832-832 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 873-873:
  switch (Form)

Lines 873-873 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 875-875:
  switch (Opcode)

Lines 875-875 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 954-954:
  switch (Form)

Lines 954-954 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 972-972:
  switch (Opcode)

Lines 972-972 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 974-974:
  switch (Prefix)


Lines 974-974 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/DAGISelMatcherGen.cpp
Comment from lines 723-723:
  Determine what to emit for this operand.

Lines 723-723 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/DAGISelMatcherEmitter.cpp
Comment from lines 129-129:
 " << InVal << "
Lines 129-129 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 155-155:
 " << CurrentIdx << "
Lines 155-155 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 183-183:
 ->" << CurrentIdx+ChildSize << "
Lines 183-183 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 196-196:
 " << CurrentIdx << "
Lines 196-196 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 256-256:
  " << Pred.getFnName();

Lines 256-256 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 280-280:
 " << NumCases << " cases 
Lines 280-280 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 335-335:
  ->" << CurrentIdx+ChildSize;

Lines 335-335 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 345-345:
  EndSwitchOpcode" : "// EndSwitchType");


Lines 345-345 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 388-388:
  " << Pattern.getSelectFunc();

Lines 388-388 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 490-490:
  "<<XF->getNodeXForm()->getName();

Lines 490-490 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 585-585:
 " << CurrentIdx << "
Lines 585-585 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 627-627:
  " << NodePredicates[i].getFnName() <<'\n';

Lines 627-627 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 693-693:
  " << NodeXForms[i]->getName();

Lines 693-693 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 796-797:
  Some target values are emitted as 2 bytes, TARGET_VAL handles\n";
  this.\n";

Lines 796-797 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 801-801:
  Total Array size is " << (TotalSize+1) << " bytes\n\n";


Lines 801-801 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/SubtargetEmitter.cpp
Comment from lines 255-255:
  Emit as { "cpu", "description", f1 | f2 | ... fn },

Lines 255-255 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 394-394:
  Functional units for \"" << Name << "\"\n"

Lines 394-394 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 538-538:
  End bypass tables\n";

Lines 538-538 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 615-615:
  " << Name;

Lines 615-615 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 625-625:
  {Name, NumUnits, SuperIdx, IsBuffered}\n";

Lines 625-625 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 999-1000:
  Emit global WriteProcResTable.
  {ProcResourceIdx, Cycles}\n"

Lines 999-1000 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1011-1011:
  #" << WPRIdx << '\n';

Lines 1011-1011 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1013-1016:
  " << Target << "WriteProcResTable\n";

  Emit global WriteLatencyTable.
  {Cycles, WriteResourceID}\n"

Lines 1013-1016 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1027-1027:
  #" << WLIdx << " " << SchedTables.WriterNames[WLIdx] << '\n';

Lines 1027-1027 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1029-1032:
  " << Target << "WriteLatencyTable\n";

  Emit global ReadAdvanceTable.
  {UseIdx, WriteResourceID, Cycles}\n"

Lines 1029-1032 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1044-1044:
  #" << RAIdx << '\n';

Lines 1044-1044 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1046-1048:
  " << Target << "ReadAdvanceTable\n";

  Emit a SchedClass table for each processor.

Lines 1046-1048 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1057-1057:
  {Name, NumMicroOps, BeginGroup, EndGroup,"

Lines 1057-1057 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1138-1138:
  Sorted (by key) array of itineraries for CPU subtype.\n"

Lines 1138-1138 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1151-1151:
  Emit as { "cpu", procinit },

Lines 1151-1151 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1225-1225:
  " << SC.Name << '\n';

Lines 1225-1225 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1241-1241:
  " << (SchedModels.procModelBegin() + *PI)->ModelName

Lines 1241-1241 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1277-1277:
  " << ClassName << "::resolveSchedClass\n";

Lines 1277-1277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1339-1340:
  End llvm namespace \n";
  GET_SUBTARGETINFO_ENUM\n\n";


Lines 1339-1340 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1468-1470:
  End llvm namespace \n";

  GET_SUBTARGETINFO_CTOR\n\n";

Lines 1468-1470 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/TGValueTypes.cpp
../llvm-3.2.src/utils/TableGen/SetTheory.cpp
Comment from lines 34-34:
  (sub Add, Sub, ...) Set difference.

Lines 34-34 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 84-84:
  (shl S, N) Shift left, remove the first N elements.

Lines 84-84 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 97-97:
  (trunc S, N) Truncate after the first N elements.

Lines 97-97 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 134-134:
  (decimate S, N) Pick every N'th element of S.

Lines 134-134 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 147-147:
  (interleave S1, S2, ...) Interleave elements of the arguments.

Lines 147-147 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 165-165:
  (sequence "Format", From, To) Generate a sequence of records by name.

Lines 165-165 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/TableGen/TableGen.cpp
../llvm-3.2.src/utils/TableGen/X86DisassemblerTables.h
../llvm-3.2.src/utils/TableGen/CodeGenRegisters.cpp
Comment from lines 83-83:
  Recursion guard, shouldn't be required.

Lines 83-83 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 434-434:
  Sub-register doesn't exist.

Lines 434-434 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1168-1168:
  OK Reg1:IdxPair == Reg3. Find the index with Reg:Idx == Reg3.

Lines 1168-1168 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1686-1691:
 
  Synthesize missing sub-classes of RC for getMatchingSuperRegClass().
 
  Create sub-classes of RC such that getMatchingSuperRegClass(RC, SubIdx, X)
  has a maximal result for any SubIdx and any X >= FirstSubRegRC.
 


Lines 1686-1691 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1708-1708:
  Build list of (Super, Sub) pairs for this SubIdx.

Lines 1708-1708 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1763-1763:
  Synthesize answers for getSubClassWithSubReg().

Lines 1763-1763 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1766-1766:
  Synthesize answers for getCommonSubClass().

Lines 1766-1766 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/not/not.cpp
../llvm-3.2.src/utils/yaml-bench/YAMLBench.cpp
../llvm-3.2.src/utils/fpcmp/fpcmp.cpp
../llvm-3.2.src/utils/KillTheDoctor/KillTheDoctor.cpp
Comment from lines 223-223:
  Check for the program without an extension (in case it already has one).

Lines 223-223 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 292-292:
  Call llvm_shutdown() on exit.


Lines 292-292 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 404-406:
  We check with > instead of using Timeleft because if
  TotalTimeMiliseconds is greater than Timeout * 1000, TimeLeft would
  underflow.

Lines 404-406 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 410-410:
  Otherwise other stuff starts failing...

Lines 410-410 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/utils/FileCheck/FileCheck.cpp
Comment from lines 185-185:
  Get the regex name (e.g. "foo").

Lines 185-185 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 210-210:
  Handle [[foo]].

Lines 210-210 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 311-311:
  If the variable is undefined, return an error.

Lines 311-311 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 736-737:
  If this match had "not strings", verify that they don't exist in the
  skipped region.

Lines 736-737 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/EarlyIfConversion.cpp
Comment from lines 448-450:
 / replacePHIInstrs - Completely replace PHI instructions with selects.
 / This is possible when the only Tail predecessors are the if-converted
 / blocks.

Lines 448-450 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/LiveRegMatrix.h
../llvm-3.2.src/lib/CodeGen/InterferenceCache.cpp
../llvm-3.2.src/lib/CodeGen/MachinePostDominators.cpp
../llvm-3.2.src/lib/CodeGen/MachineBlockFrequencyInfo.cpp
../llvm-3.2.src/lib/CodeGen/LiveIntervalUnion.h
../llvm-3.2.src/lib/CodeGen/RegisterCoalescer.h
../llvm-3.2.src/lib/CodeGen/MachineSink.cpp
../llvm-3.2.src/lib/CodeGen/MachineModuleInfo.cpp
Comment from lines 437-438:
 / addFilterTypeInfo - Provide the filter typeinfo for a landing pad.
 /

Lines 437-438 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/TargetInstrInfoImpl.cpp
../llvm-3.2.src/lib/CodeGen/EdgeBundles.cpp
../llvm-3.2.src/lib/CodeGen/MachineTraceMetrics.h
../llvm-3.2.src/lib/CodeGen/StackColoring.cpp
../llvm-3.2.src/lib/CodeGen/MachineTraceMetrics.cpp
../llvm-3.2.src/lib/CodeGen/AggressiveAntiDepBreaker.h
../llvm-3.2.src/lib/CodeGen/CallingConvLower.cpp
Comment from lines 63-64:
 / AnalyzeFormalArguments - Analyze an array of argument values,
 / incorporating info about the formals into this state.

Lines 63-64 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachinePassRegistry.cpp
../llvm-3.2.src/lib/CodeGen/RegisterScavenging.cpp
../llvm-3.2.src/lib/CodeGen/Passes.cpp
Comment from lines 246-246:
 / Insert InsertedPassID pass after TargetPassID.

Lines 246-246 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/RegAllocBase.h
../llvm-3.2.src/lib/CodeGen/JITCodeEmitter.cpp
../llvm-3.2.src/lib/CodeGen/LocalStackSlotAllocation.cpp
Comment from lines 324-326:
  Tell the target to insert the instruction to initialize
  the base register.
             MachineBasicBlock::iterator InsertionPt = Entry->begin();

Lines 324-326 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineLoopInfo.cpp
../llvm-3.2.src/lib/CodeGen/IfConversion.cpp
Comment from lines 69-76:
  BB data valid, but not classified.
  Same as ICSimple, but on the false path.
  BB is entry of an one split, no rejoin sub-CFG.
  Same as ICTriangleFalse, but false path rev condition.
  Same as ICTriangle, but true path rev condition.
  Same as ICTriangle, but on the false path.
  BB is entry of a triangle sub-CFG.
  BB is entry of a diamond sub-CFG.

Lines 69-76 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 229-229:
  IfcvtTokenCmp - Used to sort if-conversion candidates.

Lines 229-229 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/ExpandISelPseudos.cpp
../llvm-3.2.src/lib/CodeGen/LiveIntervalAnalysis.cpp
../llvm-3.2.src/lib/CodeGen/MachineModuleInfoImpls.cpp
../llvm-3.2.src/lib/CodeGen/LatencyPriorityQueue.cpp
../llvm-3.2.src/lib/CodeGen/RegAllocPBQP.cpp
../llvm-3.2.src/lib/CodeGen/OcamlGC.cpp
../llvm-3.2.src/lib/CodeGen/MachineCSE.cpp
../llvm-3.2.src/lib/CodeGen/InlineSpiller.cpp
../llvm-3.2.src/lib/CodeGen/Spiller.cpp
../llvm-3.2.src/lib/CodeGen/StackSlotColoring.cpp
../llvm-3.2.src/lib/CodeGen/MachineFunction.cpp
../llvm-3.2.src/lib/CodeGen/MachineFunctionPrinterPass.cpp
Comment from lines 23-25:
 / MachineFunctionPrinterPass - This is a pass to dump the IR of a
 / MachineFunction.
 /

Lines 23-25 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/GCMetadata.cpp
../llvm-3.2.src/lib/CodeGen/MachineInstrBundle.cpp
../llvm-3.2.src/lib/CodeGen/Spiller.h
../llvm-3.2.src/lib/CodeGen/VirtRegMap.h
../llvm-3.2.src/lib/CodeGen/PrologEpilogInserter.cpp
Comment from lines 753-753:
  Visit the instructions created by eliminateCallFramePseudoInstr().

Lines 753-753 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AntiDepBreaker.h
../llvm-3.2.src/lib/CodeGen/TargetLoweringObjectFileImpl.cpp
Comment from lines 421-421:
  Ignore flags with 'Require' behavior.

Lines 421-421 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SplitKit.cpp
Comment from lines 916-917:
  This block needs a live-in value.  The last block covered may not
  be live-out.

Lines 916-917 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1104-1104:
  Don't use iterators, they are invalidated by create() below.

Lines 1104-1104 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1196-1200:
 
         <<<<<<<<<    Possible LeaveBefore interference.
     |-----------|    Live through.
     -____________    Spill on entry.
 

Lines 1196-1200 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/InterferenceCache.h
../llvm-3.2.src/lib/CodeGen/ScheduleDAG.cpp
Comment from lines 483-483:
  Is Ord(X) < Ord(Y) ?

Lines 483-483 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 498-498:
  InitDAGTopologicalSorting();

Lines 498-498 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 578-578:
  Is Ord(TargetSU) < Ord(SU) ?

Lines 578-578 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/TargetOptionsImpl.cpp
../llvm-3.2.src/lib/CodeGen/LiveRangeEdit.cpp
../llvm-3.2.src/lib/CodeGen/TargetSchedule.cpp
Comment from lines 118-118:
  ...operand lookup required

Lines 118-118 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineBlockPlacement.cpp
../llvm-3.2.src/lib/CodeGen/MachineCodeEmitter.cpp
../llvm-3.2.src/lib/CodeGen/DeadMachineInstructionElim.cpp
../llvm-3.2.src/lib/CodeGen/LiveInterval.cpp
../llvm-3.2.src/lib/CodeGen/SjLjEHPrepare.cpp
../llvm-3.2.src/lib/CodeGen/VirtRegMap.cpp
../llvm-3.2.src/lib/CodeGen/PHIElimination.cpp
../llvm-3.2.src/lib/CodeGen/LexicalScopes.cpp
../llvm-3.2.src/lib/CodeGen/LLVMTargetMachine.cpp
../llvm-3.2.src/lib/CodeGen/RegAllocBasic.cpp
../llvm-3.2.src/lib/CodeGen/MachineSSAUpdater.cpp
../llvm-3.2.src/lib/CodeGen/MachineVerifier.cpp
Comment from lines 709-710:
  Allowed flags are Extra_HasSideEffects = 1, Extra_IsAlignStack = 2,
  Extra_AsmDialect = 4, Extra_MayLoad = 8, and Extra_MayStore = 16.

Lines 709-710 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 799-800:
  Don't check if it's the last operand in a variadic instruction. See,
  e.g., LDM_RET in the arm back end.

Lines 799-800 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SlotIndexes.cpp
../llvm-3.2.src/lib/CodeGen/RegisterClassInfo.cpp
Comment from lines 54-54:
  0 means no CSR, 1 means CalleeSaved[0], ...

Lines 54-54 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineBasicBlock.cpp
../llvm-3.2.src/lib/CodeGen/PHIEliminationUtils.h
../llvm-3.2.src/lib/CodeGen/MachineDominators.cpp
../llvm-3.2.src/lib/CodeGen/DwarfEHPrepare.cpp
../llvm-3.2.src/lib/CodeGen/RegAllocBase.cpp
../llvm-3.2.src/lib/CodeGen/LiveRangeCalc.cpp
../llvm-3.2.src/lib/CodeGen/MachineLoopRanges.cpp
../llvm-3.2.src/lib/CodeGen/ScheduleDAGInstrs.cpp
Comment from lines 851-851:
  Add dependence on alias chain, if needed.

Lines 851-851 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/ProcessImplicitDefs.cpp
../llvm-3.2.src/lib/CodeGen/PseudoSourceValue.cpp
../llvm-3.2.src/lib/CodeGen/LiveRangeCalc.h
../llvm-3.2.src/lib/CodeGen/GCMetadataPrinter.cpp
../llvm-3.2.src/lib/CodeGen/ScoreboardHazardRecognizer.cpp
../llvm-3.2.src/lib/CodeGen/SplitKit.h
../llvm-3.2.src/lib/CodeGen/TargetFrameLoweringImpl.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfCompileUnit.h
../llvm-3.2.src/lib/CodeGen/AsmPrinter/OcamlGCPrinter.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfException.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/Win64Exception.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfCFIException.cpp
Comment from lines 117-117:
  Indicate personality routine, if any.

Lines 117-117 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfAccelTable.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfDebug.cpp
Comment from lines 451-453:
  .debug_range section has not been laid out yet. Emit offset in
  .debug_range as a uint, size 4, for now. emitDIE will handle
  DW_AT_ranges appropriately.

Lines 451-453 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1451-1451:
   Vars.push_back(Var);

Lines 1451-1451 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1484-1485:
  Check that DbgVariable for DV wasn't created earlier, when
  findAbstractVariable() was called for inlined instance of DV.

Lines 1484-1485 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfAccelTable.h
../llvm-3.2.src/lib/CodeGen/AsmPrinter/AsmPrinter.cpp
Comment from lines 170-170:
  .file "foo.c"

Lines 170-170 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 300-300:
  .comm _foo, 42, 4

Lines 300-300 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 309-309:
  .zerofill __DATA, __bss, _foo, 400, 5

Lines 309-309 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 326-326:
  .comm _foo, 42, 4

Lines 326-326 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1253-1253:
  Should be an array of 'i8*'.

Lines 1253-1253 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1353-1353:
  Otherwise, emit with .set (aka assignment).

Lines 1353-1353 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1382-1382:
  Otherwise, emit with .set (aka assignment).

Lines 1382-1382 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfException.h
../llvm-3.2.src/lib/CodeGen/AsmPrinter/ARMException.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DIE.h
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DIE.cpp
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfDebug.h
../llvm-3.2.src/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp
Comment from lines 1416-1416:
  .. else use frame index.

Lines 1416-1416 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp
Comment from lines 174-174:
  Consume second '$' character.

Lines 174-174 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 265-265:
  Consume '$' character.

Lines 265-265 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 301-302:
  ${variable}
  Consume '{' character.

Lines 301-302 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/LiveVariables.cpp
../llvm-3.2.src/lib/CodeGen/MachineBranchProbabilityInfo.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAG.cpp
Comment from lines 495-497:
  end switch (N->getOpcode())

  Target specific memory nodes could also have address spaces to check.

Lines 495-497 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2240-2242:
  Early out.

  Special case decrementing a value (ADD X, -1):

Lines 2240-2242 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2296-2296:
  Handle LOADX separately here. EXTLOAD case will fallthrough.

Lines 2296-2296 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2568-2568:
  (zext (zext x)) -> (zext x)

Lines 2568-2568 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2593-2593:
  (ext (trunx x)) -> x

Lines 2593-2593 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2629-2630:
  noop conversion.
  bitconv(bitconv(x)) -> bitconv(x)

Lines 2629-2630 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2758-2759:
  (X & 0) -> 0.  This commonly occurs when legalizing i64 values, so it's
  worth handling here.

Lines 2758-2759 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2822-2822:
  1*x --> x

Lines 2822-2822 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/TargetSelectionDAGInfo.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeTypes.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/DAGCombiner.cpp
Comment from lines 475-475:
  fold (fneg (fadd A, B)) -> (fsub (fneg A), B)

Lines 475-475 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 492-492:
  fold (fneg (fsub 0, B)) -> B

Lines 492-492 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 497-497:
  fold (fneg (fsub A, B)) -> (fsub B, A)

Lines 497-497 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1395-1395:
  fold (add Sym, c) -> Sym+c

Lines 1395-1395 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1520-1520:
  add (sext i1), X -> sub X, (zext i1)

Lines 1520-1520 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1628-1628:
  fold (sub c1, c2) -> c1-c2

Lines 1628-1628 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1631-1631:
  fold (sub x, c) -> (add x, -c)

Lines 1631-1631 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1683-1683:
  fold (sub Sym, c) -> Sym-c

Lines 1683-1683 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1853-1853:
  fold (sdiv X, 1) -> X

Lines 1853-1853 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1957-1957:
  fold (udiv x, c) -> alternate

Lines 1957-1957 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2078-2078:
  fold (mulhs x, 1) -> (sra x, size(x)-1)

Lines 2078-2078 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2113-2113:
  fold (mulhu x, 0) -> 0

Lines 2113-2113 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2116-2116:
  fold (mulhu x, 1) -> 0

Lines 2116-2116 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2119-2119:
  fold (mulhu x, undef) -> 0

Lines 2119-2119 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2259-2259:
  (smulo x, 2) -> (saddo x, x)

Lines 2259-2259 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2269-2269:
  (umulo x, 2) -> (uaddo x, x)

Lines 2269-2269 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2626-2626:
  fold (zext_inreg (extload x)) -> (zextload x)

Lines 2626-2626 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2647-2647:
  fold (zext_inreg (sextload x)) -> (zextload x) iff load has one use

Lines 2647-2647 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2671-2673:
  fold (and (load x), 255) -> (zextload x, i8)
  fold (and (extload x, i16), 255) -> (zextload x, i8)
  fold (and (any_ext (extload x, i16)), 255) -> (zextload x, i8)

Lines 2671-2673 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2922-2924:
  Opc == ISD::SRL
  (x & 0xff00) >> 8
  (x & 0xff000000) >> 8

Lines 2922-2924 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3356-3356:
  fold !(x cc y) -> (x !cc y)

Lines 3356-3356 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3522-3522:
  fold (shl 0, x) -> 0

Lines 3522-3522 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3525-3525:
  fold (shl x, c >= size(x)) -> undef

Lines 3525-3525 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3528-3528:
  fold (shl x, 0) -> x

Lines 3528-3528 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3531-3531:
  fold (shl undef, x) -> 0

Lines 3531-3531 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3534-3534:
  if (shl x, c) is known to be zero, return 0

Lines 3534-3534 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3649-3649:
  fold (sra c1, c2) -> (sra c1, c2)

Lines 3649-3649 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3652-3652:
  fold (sra 0, x) -> 0

Lines 3652-3652 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3678-3678:
  fold (sra (sra x, c1), c2) -> (sra x, (add c1, c2))

Lines 3678-3678 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3688-3692:
  fold (sra (shl X, m), (sub result_size, n))
  -> (sign_extend (trunc (shl X, (sub (sub result_size, n), m)))) for
  result_size - n != m.
  If truncate is free for the target sext(shl) is likely to result in better
  code.

Lines 3688-3692 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3797-3797:
  fold (srl 0, x) -> 0

Lines 3797-3797 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3800-3800:
  fold (srl x, c >= size(x)) -> undef

Lines 3800-3800 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3803-3803:
  fold (srl x, 0) -> x

Lines 3803-3803 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3806-3806:
  if (srl x, c) is known to be zero, return 0

Lines 3806-3806 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3852-3852:
  fold (srl (anyextend x), c) -> (anyextend (srl x, c))

Lines 3852-3852 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3983-3983:
  fold (ctlz c1) -> c2

Lines 3983-3983 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4122-4122:
  fold select_cc lhs, rhs, x, x, cc -> x

Lines 4122-4122 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4252-4253:
  fold (sext (sext x)) -> (sext x)
  fold (sext (aext x)) -> (sext x)

Lines 4252-4253 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4297-4297:
  fold (sext (truncate x)) -> (sextinreg x).

Lines 4297-4297 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4338-4339:
  fold (sext (sextload x)) -> (sext (truncate (sextload x)))
  fold (sext ( extload x)) -> (sext (truncate (sextload x)))

Lines 4338-4339 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4456-4456:
  fold (sext x) -> (zext x) if the sign bit is known zero.

Lines 4456-4456 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4672-4673:
  fold (zext (zextload x)) -> (zext (truncate (zextload x)))
  fold (zext ( extload x)) -> (zext (truncate (zextload x)))

Lines 4672-4673 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4735-4735:
  zext(setcc x,y,cc) -> select_cc x, y, 1, 0, cc

Lines 4735-4735 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4743-4743:
  (zext (shl (zext x), cst)) -> (shl (zext x), cst)

Lines 4743-4743 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4778-4778:
  fold (aext c1) -> c1

Lines 4778-4778 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4781-4783:
  fold (aext (aext x)) -> (aext x)
  fold (aext (zext x)) -> (zext x)
  fold (aext (sext x)) -> (sext x)

Lines 4781-4783 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4804-4804:
  fold (aext (truncate x))

Lines 4804-4804 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4862-4864:
  fold (aext (zextload x)) -> (aext (truncate (zextload x)))
  fold (aext (sextload x)) -> (aext (truncate (sextload x)))
  fold (aext ( extload x)) -> (aext (truncate (extload  x)))

Lines 4862-4864 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4915-4915:
  aext(setcc x,y,cc) -> select_cc x, y, 1, 0, cc

Lines 4915-4915 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5127-5127:
  fold (sext_in_reg (sext_in_reg x, VT2), VT1) -> (sext_in_reg x, minVT) pt2

Lines 5127-5127 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5134-5136:
  fold (sext_in_reg (sext x)) -> (sext x)
  fold (sext_in_reg (aext x)) -> (sext x)
  if x is small enough.

Lines 5134-5136 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5144-5144:
  fold (sext_in_reg x) -> (zext_in_reg x) if the sign bit is known zero.

Lines 5144-5144 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5174-5174:
  fold (sext_inreg (extload x)) -> (sextload x)

Lines 5174-5174 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5191-5191:
  fold (sext_inreg (zextload x)) -> (sextload x) iff load has one use

Lines 5191-5191 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5232-5232:
  fold (truncate (truncate x)) -> (truncate x)

Lines 5232-5232 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5712-5712:
  fold (fadd A, (fneg B)) -> (fsub A, B)

Lines 5712-5712 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5717-5717:
  fold (fadd (fneg A), B) -> (fsub B, A)

Lines 5717-5717 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5723-5723:
  If allowed, fold (fadd (fadd x, c1), c2) -> (fadd x, (fadd c1, c2))

Lines 5723-5723 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5731-5731:
  If allow, fold (fadd (fneg x), x) -> 0.0

Lines 5731-5731 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5771-5771:
  (fadd (fadd x, x), x) -> (fmul 3.0, x)

Lines 5771-5771 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5823-5823:
  (fadd x, (fadd x, x)) -> (fmul 3.0, x)

Lines 5823-5823 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5853-5853:
  (fadd (fadd x, x), (fadd x, x)) -> (fmul 4.0, x)

Lines 5853-5853 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5916-5916:
  fold (fsub A, (fneg B)) -> (fadd A, B)

Lines 5916-5916 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5999-5999:
  fold (fmul A, 0) -> 0

Lines 5999-5999 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6003-6003:
  fold (fmul A, 0) -> 0, vector edition.

Lines 6003-6003 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6007-6007:
  fold (fmul A, 1.0) -> A

Lines 6007-6007 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6010-6010:
  fold (fmul X, 2.0) -> (fadd X, X)

Lines 6010-6010 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6013-6013:
  fold (fmul X, -1.0) -> (fneg X)

Lines 6013-6013 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6018-6018:
  fold (fmul (fneg X), (fneg Y)) -> (fmul X, Y)

Lines 6018-6018 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6032-6032:
  If allowed, fold (fmul (fmul x, c1), c2) -> (fmul x, (fmul c1, c2))

Lines 6032-6032 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6063-6063:
  Canonicalize (fma c, x, y) -> (fma x, c, y)

Lines 6063-6063 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6087-6088:
  (fma x, 1, y) -> (fadd x, y)
  (fma x, -1, y) -> (fadd (fneg x), y)

Lines 6087-6088 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6159-6159:
  (fdiv (fneg X), (fneg Y)) -> (fdiv X, Y)

Lines 6159-6159 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6183-6183:
  fold (frem c1, c2) -> fmod(c1,c2)

Lines 6183-6183 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6202-6203:
  copysign(x, c1) -> fabs(x)       iff ispos(c1)
  copysign(x, c1) -> fneg(fabs(x)) iff isneg(c1)

Lines 6202-6203 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6214-6216:
  copysign(fabs(x), y) -> copysign(x, y)
  copysign(fneg(x), y) -> copysign(x, y)
  copysign(copysign(x,z), y) -> copysign(x, y)

Lines 6214-6216 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6222-6222:
  copysign(x, abs(y)) -> abs(x)

Lines 6222-6222 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6226-6226:
  copysign(x, copysign(y,z)) -> copysign(x, z)

Lines 6226-6226 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6246-6246:
  fold (sint_to_fp c1) -> c1fp

Lines 6246-6246 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6280-6281:
  fold (sint_to_fp (zext (setcc x, y, cc))) ->
       (select_cc x, y, 1.0, 0.0,, cc)

Lines 6280-6281 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6303-6303:
  fold (uint_to_fp c1) -> c1fp

Lines 6303-6303 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6346-6346:
  fold (fp_to_sint c1fp) -> c1

Lines 6346-6346 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6358-6358:
  fold (fp_to_uint c1fp) -> c1

Lines 6358-6358 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6375-6375:
  fold (fp_round (fp_extend x)) -> x

Lines 6375-6375 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6379-6379:
  fold (fp_round (fp_round x)) -> (fp_round x)

Lines 6379-6379 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6388-6388:
  fold (fp_round (copysign X, Y)) -> (copysign (fp_round X), Y)

Lines 6388-6388 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6441-6441:
  fold (fpext (load x)) -> (fpext (fptrunc (extload x)))

Lines 6441-6441 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6512-6512:
  fold (fceil c1) -> fceil(c1)

Lines 6512-6512 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6524-6524:
  fold (ftrunc c1) -> ftrunc(c1)

Lines 6524-6524 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6536-6536:
  fold (ffloor c1) -> ffloor(c1)

Lines 6536-6536 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6553-6553:
  fold (fabs c1) -> fabs(c1)

Lines 6553-6553 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6556-6556:
  fold (fabs (fabs x)) -> (fabs x)

Lines 6556-6556 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6559-6560:
  fold (fabs (fneg x)) -> (fabs x)
  fold (fabs (fcopysign x, y)) -> (fabs x)

Lines 6559-6560 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6564-6565:
  Transform fabs(bitconvert(x)) -> bitconvert(x&~sign) to avoid loading
  constant pool values.

Lines 6564-6565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6868-6868:
  Now check for #3 and #4.

Lines 6868-6868 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8177-8177:
  (vextract (scalar_to_vector val, 0) -> val

Lines 8177-8177 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8430-8430:
  Multiple income types. Abort.

Lines 8430-8430 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8724-8728:
  Combine:
     (extract_subvec (insert_subvec V1, V2, InsIdx), ExtIdx)
  Into:
     indices are equal => V1
     otherwise => (extract_subvec V1, ExtIdx)

Lines 8724-8728 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8737-8741:
  Combine:
     (extract_subvec (concat V1, V2, ...), i)
  Into:
     Vi if possible
  Only operand 0 is checked as 'concat' assumes all inputs of the same type.

Lines 8737-8741 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8781-8781:
  Canonicalize shuffle undef, v -> v, undef.  Commute the shuffle mask.

Lines 8781-8781 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9267-9267:
  fold select_cc false, x, y -> y

Lines 9267-9267 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9414-9414:
  fold select C, 16, 0 -> shl C, 4

Lines 9414-9414 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9472-9472:
  fold (seteq X, 0) -> (srl (ctlz X, log2(size(X))))

Lines 9472-9472 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp
Comment from lines 871-872:
  The chain (Op#0), CC (#1) and basic block destination (Op#4) are always
  legal types.

Lines 871-872 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1000-1000:
  The CC (#4) and the possible return values (#2 and #3) have legal types.

Lines 1000-1000 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2010-2020:
  Compute the overflow.
 
    LHSSign -> LHS >= 0
    RHSSign -> RHS >= 0
    SumSign -> Sum >= 0
 
    Add:
    Overflow -> (LHSSign == RHSSign) && (LHSSign != SumSign)
    Sub:
    Overflow -> (LHSSign != RHSSign) && (LHSSign != SumSign)
 

Lines 2010-2020 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp
Comment from lines 412-414:
 / ScalarizeVecOp_EXTRACT_VECTOR_ELT - If the input is a vector that needs to
 / be scalarized, it must be <1 x ty>, so just return the element, ignoring the
 / index.

Lines 412-414 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp
Comment from lines 27-27:
 / PerformExpensiveChecks - Do extensive, expensive, sanity checking.

Lines 27-27 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/FastISel.cpp
Comment from lines 71-73:
 / startNewBlock - Set the current block to which generated machine
 / instructions will be appended, and clear the local CSE map.
 /

Lines 71-73 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 576-576:
  The donothing intrinsic does, well, nothing.

Lines 576-576 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp
Comment from lines 1663-1663:
  Otherwise, the pattern is (LHS CC1 LHS) Opc (RHS CC2 RHS)

Lines 1663-1663 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3014-3014:
  Expand Y = FNEG(X) ->  Y = SUB -0.0, X

Lines 3014-3014 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3278-3286:
    LHSSign -> LHS >= 0
    RHSSign -> RHS >= 0
    SumSign -> Sum >= 0
 
    Add:
    Overflow -> (LHSSign == RHSSign) && (LHSSign != SumSign)
    Sub:
    Overflow -> (LHSSign != RHSSign) && (LHSSign != SumSign)
 

Lines 3278-3286 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3606-3606:
  Tmp1 = Tmp1 - (sizeinbits(NVT) - sizeinbits(Old VT))

Lines 3606-3606 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp
Comment from lines 51-52:
 / Run - perform scheduling.
 /

Lines 51-52 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 338-338:
  Leaf node, e.g. a TargetImmediate.

Lines 338-338 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAGPrinter.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/InstrEmitter.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp
Comment from lines 1800-1801:
 / CalcNodeSethiUllmanNumber - Compute Sethi Ullman number.
 / Smaller number is the higher priority.

Lines 1800-1801 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2130-2131:
  Check for isMachineOpcode() as PrescheduleNodesWithMultipleUses()
  may transfer data dependencies to CopyToReg.

Lines 2130-2131 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp
Comment from lines 143-143:
  Assemble the trailing non-power-of-2 part.

Lines 143-143 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 496-499:
  FIXME: Use CONCAT for 2x -> 4x.

 SDValue UndefElts = DAG.getUNDEF(VectorTy);
 Val = DAG.getNode(ISD::CONCAT_VECTORS, DL, PartVT, Val, UndefElts);

Lines 496-499 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 966-966:
  Build the switch statement using the Instruction.def file.

Lines 966-966 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4397-4397:
  powi(x, 0) -> 1.0

Lines 4397-4397 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5172-5172:
  Just replace __builtin_expect(exp, c) with EXP.

Lines 5172-5172 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5563-5568:
     case 16:
       LoadVT = MVT::v4i32;
       LoadTy = Type::getInt32Ty(Size->getContext());
       LoadTy = VectorType::get(LoadTy, 4);
       break;
          

Lines 5563-5568 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6248-6248:
  Add (OpFlag&0xffff)>>3 registers to MatchedRegs.

Lines 6248-6248 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/InstrEmitter.cpp
../llvm-3.2.src/lib/CodeGen/SelectionDAG/TargetLowering.cpp
Comment from lines 912-912:
  return the default value

Lines 912-912 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1112-1112:
  FIXME: ISD::SELECT, ISD::SELECT_CC

Lines 1112-1112 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2205-2205:
  (xor (setcc), (setcc)) == / != 1 -> (setcc) != / == (setcc)

Lines 2205-2205 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2331-2331:
  (X & -256) == 256 -> (X >> 8) == 1

Lines 2331-2331 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2351-2354:
  X <  0x100000000 -> (X >> 32) <  1
  X >= 0x100000000 -> (X >> 32) >= 1
  X <= 0x0ffffffff -> (X >> 32) <  1
  X >  0x0ffffffff -> (X >> 32) >= 1

Lines 2351-2354 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SDNodeOrdering.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAGDumper.cpp
Comment from lines 549-549:
  If we've been here before, return now.

Lines 549-549 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SDNodeDbgValue.h
../llvm-3.2.src/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp
Comment from lines 1315-1315:
  "default" BB. We can go there only from header BB.

Lines 1315-1315 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1513-1513:
  Otherwise, this is a memory operand.  Ask the target to select it.

Lines 1513-1513 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1533-1535:
 / findGlueUse - Return use of MVT::Glue value produced by the specified
 / SDNode.
 /

Lines 1533-1535 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1751-1751:
  If this node was already deleted, don't look at it.

Lines 1751-1751 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2213-2214:
 case ISD::VALUETYPE:
 case ISD::CONDCODE:

Lines 2213-2214 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp
Comment from lines 142-142:
  Mask = ~(1 << (Size-1))

Lines 142-142 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 342-342:
  Expand Y = FNEG(X) -> Y = SUB -0.0, X

Lines 342-342 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineLICM.cpp
../llvm-3.2.src/lib/CodeGen/LiveIntervalUnion.cpp
../llvm-3.2.src/lib/CodeGen/BranchFolding.cpp
../llvm-3.2.src/lib/CodeGen/BranchFolding.h
../llvm-3.2.src/lib/CodeGen/ExpandPostRAPseudos.cpp
../llvm-3.2.src/lib/CodeGen/StrongPHIElimination.cpp
../llvm-3.2.src/lib/CodeGen/PostRASchedulerList.cpp
Comment from lines 452-452:
  Setting kill flag...

Lines 452-452 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 713-713:
  ... schedule the node...

Lines 713-713 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/IntrinsicLowering.cpp
../llvm-3.2.src/lib/CodeGen/LiveDebugVariables.h
../llvm-3.2.src/lib/CodeGen/CriticalAntiDepBreaker.cpp
Comment from lines 59-59:
  Determine the live-out physregs for this block.

Lines 59-59 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 453-493:
  Consider this pattern:
    A = ...
    ... = A
    A = ...
    ... = A
    A = ...
    ... = A
    A = ...
    ... = A
  There are three anti-dependencies here, and without special care,
  we'd break all of them using the same register:
    A = ...
    ... = A
    B = ...
    ... = B
    B = ...
    ... = B
    B = ...
    ... = B
  because at each anti-dependence, B is the first register that
  isn't A which is free.  This re-introduces anti-dependencies
  at all but one of the original anti-dependencies that we were
  trying to break.  To avoid this, keep track of the most recent
  register that each register was replaced with, avoid
  using it to repair an anti-dependence on the same register.
  This lets us produce this:
    A = ...
    ... = A
    B = ...
    ... = B
    C = ...
    ... = C
    B = ...
    ... = B
  This still has an anti-dependence on B, but at least it isn't on the
  original critical path.
 
  TODO: If we tracked more than one register here, we could potentially
  fix that remaining critical edge too. This is a little more involved,
  because unlike the most recent register, less recent registers should
  still be considered, though only if no other registers are available.

Lines 453-493 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/GCStrategy.cpp
Comment from lines 361-362:
  Find the return address (next instruction), too, so as to bracket the call
  instruction.

Lines 361-362 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/PHIEliminationUtils.cpp
../llvm-3.2.src/lib/CodeGen/CalcSpillWeights.cpp
../llvm-3.2.src/lib/CodeGen/RegisterPressure.cpp
../llvm-3.2.src/lib/CodeGen/ExecutionDepsFix.cpp
Comment from lines 248-248:
 / Set LiveRegs[rx] = dv, updating reference counts.

Lines 248-248 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 303-303:
  If there are multiple users, give them new, unique DomainValues.

Lines 303-303 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 667-668:
  Given a PhysReg, AliasMap[PhysReg] is either the relevant index into RC,
  or -1.

Lines 667-668 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AllocationOrder.h
../llvm-3.2.src/lib/CodeGen/OptimizePHIs.cpp
Comment from lines 133-133:
  See if we already saw this register.

Lines 133-133 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/DFAPacketizer.cpp
Comment from lines 208-210:
  !isLegalToPruneDependencies.
  !isLegalToPacketizeTogether.
  For all instructions in CurrentPacketMIs.

Lines 208-210 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/RegAllocFast.cpp
Comment from lines 70-74:
  Last instr to use reg.
  Virtual register number.
  Currently held here.
  OpNum on LastUse.
  Register needs spill.


Lines 70-74 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 187-187:
  Find the location Reg would belong...

Lines 187-187 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/SpillPlacement.cpp
../llvm-3.2.src/lib/CodeGen/SpillPlacement.h
../llvm-3.2.src/lib/CodeGen/CodeGen.cpp
../llvm-3.2.src/lib/CodeGen/MachineRegisterInfo.cpp
../llvm-3.2.src/lib/CodeGen/ShrinkWrapping.cpp
../llvm-3.2.src/lib/CodeGen/PrologEpilogInserter.h
../llvm-3.2.src/lib/CodeGen/ScheduleDAGPrinter.cpp
../llvm-3.2.src/lib/CodeGen/TwoAddressInstructionPass.cpp
Comment from lines 1427-1428:
  From %reg = INSERT_SUBREG %reg, %subreg, subidx
  To   %reg:subidx = COPY %subreg

Lines 1427-1428 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/StackProtector.cpp
../llvm-3.2.src/lib/CodeGen/LiveRegMatrix.cpp
../llvm-3.2.src/lib/CodeGen/CriticalAntiDepBreaker.h
../llvm-3.2.src/lib/CodeGen/MachineScheduler.cpp
../llvm-3.2.src/lib/CodeGen/CodePlacementOpt.cpp
../llvm-3.2.src/lib/CodeGen/MachineFunctionAnalysis.cpp
../llvm-3.2.src/lib/CodeGen/MachineCopyPropagation.cpp
../llvm-3.2.src/lib/CodeGen/LiveDebugVariables.cpp
Comment from lines 788-788:
  Now LII->end > LocMapI.start(). Do we have an overlap?

Lines 788-788 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineFunctionPass.cpp
../llvm-3.2.src/lib/CodeGen/AllocationOrder.cpp
Comment from lines 23-23:
  Compare VirtRegMap::getRegAllocPref().

Lines 23-23 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/AggressiveAntiDepBreaker.cpp
Comment from lines 417-417:
  Ignore KILLs and passthru registers for liveness...

Lines 417-417 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 732-732:
  ...need a map from MI to SUnit.

Lines 732-732 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/TailDuplication.cpp
../llvm-3.2.src/lib/CodeGen/Analysis.cpp
../llvm-3.2.src/lib/CodeGen/LiveStackAnalysis.cpp
../llvm-3.2.src/lib/CodeGen/PeepholeOptimizer.cpp
../llvm-3.2.src/lib/CodeGen/UnreachableBlockElim.cpp
../llvm-3.2.src/lib/CodeGen/ShadowStackGC.cpp
Comment from lines 406-406:
  For each root, find the corresponding slot in the aggregate...

Lines 406-406 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/MachineInstr.cpp
Comment from lines 155-155:
  Ensure isOnRegUseList() returns false.

Lines 155-155 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 605-607:
 / getRegInfo - If this instruction is embedded into a MachineFunction,
 / return the MachineRegisterInfo object for the current function, otherwise
 / return null.

Lines 605-607 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1223-1224:
 / clearKillInfo - Clears kill flags on all operands.
 /

Lines 1223-1224 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/RegAllocGreedy.cpp
Comment from lines 157-158:
 /< Total number of broken hints.
 /< Maximum spill weight evicted.


Lines 157-158 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1455-1455:
  Look for Uses[i] <= RMS <= Uses[i+1].

Lines 1455-1455 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/CodeGen/RegisterCoalescer.cpp
Comment from lines 374-374:
  Callback from eliminateDeadDefs().

Lines 374-374 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1685-1685:
  Now look at the instructions from VNI->def to TaintExtent (inclusive).

Lines 1685-1685 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Archive/ArchiveInternals.h
../llvm-3.2.src/lib/Archive/ArchiveWriter.cpp
../llvm-3.2.src/lib/Archive/ArchiveReader.cpp
Comment from lines 23-23:
 / Read a variable-bit-rate encoded unsigned integer

Lines 23-23 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Archive/Archive.cpp
../llvm-3.2.src/lib/VMCore/DIBuilder.cpp
../llvm-3.2.src/lib/VMCore/Verifier.cpp
Comment from lines 237-237:
  Verification methods...

Lines 237-237 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 844-845:
  Check to make sure that the return value has necessary properties for
  terminators...

Lines 844-845 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Constants.cpp
Comment from lines 1225-1229:
 ---- ConstantStruct::get() implementation...
 

  destroyConstant - Remove the constant from the constant table...
 

Lines 1225-1229 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1254-1255:
 ---- ConstantPointerNull::get() implementation.
 


Lines 1254-1255 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1293-1294:
 ---- BlockAddress::get() implementation.
 


Lines 1293-1294 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/LLVMContextImpl.cpp
../llvm-3.2.src/lib/VMCore/ValueSymbolTable.cpp
../llvm-3.2.src/lib/VMCore/TypeFinder.cpp
../llvm-3.2.src/lib/VMCore/User.cpp
../llvm-3.2.src/lib/VMCore/LLVMContext.cpp
../llvm-3.2.src/lib/VMCore/Use.cpp
../llvm-3.2.src/lib/VMCore/ValueTypes.cpp
../llvm-3.2.src/lib/VMCore/AsmWriter.cpp
Comment from lines 592-592:
 / CreateModuleSlot - Insert the specified GlobalValue* into the slot table.

Lines 592-592 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 603-603:
  G = Global, F = Function, A = Alias, o = other

Lines 603-603 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 616-616:
  G = Global, F = Function, o = other

Lines 616-616 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1567-1567:
  Loop over the arguments, printing them...


Lines 1567-1567 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1585-1585:
  Output type...

Lines 1585-1585 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1633-1633:
  Output type...

Lines 1633-1633 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1640-1640:
  Output name, if available...

Lines 1640-1640 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1650-1650:
  Print out the label if it exists...

Lines 1650-1650 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1714-1714:
  Print out name if it exists...

Lines 1714-1714 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/ConstantFold.h
Comment from lines 28-28:
  Constant fold various types of instruction...

Lines 28-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 30-32:
 /< The opcode of the cast
 /< The source constant
 /< The destination type

Lines 30-32 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Instruction.cpp
Comment from lines 28-28:
  If requested, insert this instruction into a basic block...

Lines 28-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/LLVMContextImpl.h
../llvm-3.2.src/lib/VMCore/PassRegistry.cpp
Comment from lines 100-102:
 ===----------------------------------------------------------------------===//
  Pass Registration mechanism
 


Lines 100-102 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 150-150:
  First reference to Interface, register it now.

Lines 150-150 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Attributes.cpp
../llvm-3.2.src/lib/VMCore/Instructions.cpp
Comment from lines 375-378:
  malloc(type) becomes: 
        bitcast (i8* malloc(typeSize)) to type*
  malloc(type, arraySize) becomes:
        bitcast (i8 *malloc(typeSize*arraySize)) to type*

Lines 375-378 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/DebugInfo.cpp
../llvm-3.2.src/lib/VMCore/GVMaterializer.cpp
../llvm-3.2.src/lib/VMCore/Module.cpp
Comment from lines 204-204:
  Build the list of argument types...

Lines 204-204 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 222-222:
  Build the list of argument types...

Lines 222-222 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Pass.cpp
../llvm-3.2.src/lib/VMCore/Metadata.cpp
Comment from lines 28-30:
 ===----------------------------------------------------------------------===//
  MDString implementation.
 


Lines 28-30 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 129-129:
 / ~MDNode - Destroy MDNode.

Lines 129-129 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/ConstantFold.cpp
Comment from lines 741-741:
  ee(undef, x) -> undef

Lines 741-741 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 743-743:
  ee(zero, x) -> zero

Lines 743-743 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 745-745:
  ee({w,x,y,z}, undef) -> undef

Lines 745-745 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 969-969:
  (zext i32 to i64) & 4294967295 -> (zext i32 to i64)

Lines 969-969 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1974-1978:
  Implement folding of:
     i32* getelementptr ([2 x i32]* bitcast ([3 x i32]* %X to [2 x i32]*),
                         i64 0, i64 0)
  To: i32* getelementptr ([3 x i32]* %X, i64 0, i64 0)
 

Lines 1974-1978 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/AutoUpgrade.cpp
Comment from lines 235-235:
  strip off "llvm.x86.xop.vpcom"

Lines 235-235 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Core.cpp
Comment from lines 1410-1411:
  This function is strictly redundant to
    LLVMCountParamTypes(LLVMGetElementType(LLVMTypeOf(FnRef)))

Lines 1410-1411 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/DebugLoc.cpp
Comment from lines 77-77:
  If no scope is available, this is an unknown location.

Lines 77-77 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 185-185:
  If we already have an entry, return it.

Lines 185-185 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Value.cpp
../llvm-3.2.src/lib/VMCore/IRBuilder.cpp
../llvm-3.2.src/lib/VMCore/Type.cpp
Comment from lines 734-734:
  Since AddressSpace #0 is the common case, we special case it.

Lines 734-734 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/TargetTransformInfo.cpp
../llvm-3.2.src/lib/VMCore/InlineAsm.cpp
../llvm-3.2.src/lib/VMCore/GCOV.cpp
../llvm-3.2.src/lib/VMCore/ConstantsContext.h
Comment from lines 538-538:
  Asserts that use_empty().

Lines 538-538 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/Dominators.cpp
../llvm-3.2.src/lib/VMCore/DataLayout.cpp
Comment from lines 324-327:
 / Default ctor.
 /
 / @note This has to exist, because this is a pass, but it should never be
 / used.

Lines 324-327 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/IntrinsicInst.cpp
../llvm-3.2.src/lib/VMCore/Globals.cpp
../llvm-3.2.src/lib/VMCore/PassManager.cpp
Comment from lines 1081-1081:
  Check if AvailableAnalysis map has one entry.

Lines 1081-1081 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/LeaksContext.h
../llvm-3.2.src/lib/VMCore/AttributesImpl.h
../llvm-3.2.src/lib/VMCore/BasicBlock.cpp
../llvm-3.2.src/lib/VMCore/LeakDetector.cpp
../llvm-3.2.src/lib/VMCore/SymbolTableListTraitsImpl.h
../llvm-3.2.src/lib/VMCore/Function.cpp
Comment from lines 177-177:
  Set the "has lazy arguments" bit.

Lines 177-177 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 618-618:
  This defines the "Intrinsic::getIntrinsicForGCCBuiltin()" method.

Lines 618-618 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/VMCore/PrintModulePass.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFDebugAranges.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFDebugArangeSet.h
../llvm-3.2.src/lib/DebugInfo/DWARFAttribute.h
../llvm-3.2.src/lib/DebugInfo/DIContext.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFCompileUnit.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFDebugRangeList.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFDebugArangeSet.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFContext.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugInfoEntry.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugAbbrev.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFAbbreviationDeclaration.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugAbbrev.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugAranges.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugInfoEntry.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFFormValue.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugLine.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugLine.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFAbbreviationDeclaration.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFContext.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFFormValue.cpp
../llvm-3.2.src/lib/DebugInfo/DWARFCompileUnit.h
../llvm-3.2.src/lib/DebugInfo/DWARFDebugRangeList.h
../llvm-3.2.src/lib/TableGen/TableGenBackend.cpp
../llvm-3.2.src/lib/TableGen/Record.cpp
../llvm-3.2.src/lib/TableGen/StringMatcher.cpp
Comment from lines 57-57:
  \"" << Matches[0]->first << "\"\n";


Lines 57-57 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/TableGen/Error.cpp
../llvm-3.2.src/lib/TableGen/TGLexer.cpp
Comment from lines 367-370:
 / LexNumber - Lex:
 /    [-+]?[0-9]+
 /    0x[0-9a-fA-F]+
 /    0b[01]+

Lines 367-370 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/TableGen/TGParser.cpp
Comment from lines 165-165:
  If a value is specified for this template arg, set it now.

Lines 165-165 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 643-643:
  eat the '>'.

Lines 643-643 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 665-665:
  eat the '}'.

Lines 665-665 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 722-722:
  Eat '>'

Lines 722-722 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 915-915:
  eat the ')'

Lines 915-915 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1039-1039:
  eat the ')'


Lines 1039-1039 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1190-1193:
  consume the Id.
  Value ::= IDValue

  Value ::= ID '<' ValueListNE '>'

Lines 1190-1193 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1215-1217:
  eat the '>'

  Create the new record, set it as CurRec temporarily.

Lines 1215-1217 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1263-1264:
  Value ::= '[' ValueList ']'
  eat the '['

Lines 1263-1264 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1308-1308:
  eat the '>'

Lines 1308-1308 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1393-1393:
  eat the ')'


Lines 1393-1393 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1451-1451:
  Eat the '}'.

Lines 1451-1451 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1471-1471:
  Eat the ']'.

Lines 1471-1471 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1715-1715:
  '[' ValueList ']'

Lines 1715-1715 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1738-1739:
  '{' RangeList '}'
  eat the '{'

Lines 1738-1739 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1797-1797:
  eat the '>'.

Lines 1797-1797 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1817-1817:
  LET ID OptionalRangeList '=' Value ';'

Lines 1817-1817 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1832-1832:
  eat the '='.


Lines 1832-1832 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1866-1866:
  Eat the '{'.

Lines 1866-1866 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1873-1873:
  Eat the '}'.

Lines 1873-1873 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1994-1997:
  Eat the 'for' token.

  Make a temporary object to record items associated with the for
  loop.

Lines 1994-1997 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2017-2020:
  Otherwise, this is a group foreach.
  eat the '{'.

  Parse the object list.

Lines 2017-2020 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2100-2100:
  eat the '='.


Lines 2100-2100 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2114-2119:
 / ParseTopLevelLet - Parse a 'let' at top level.  This can be a couple of
 / different related productions. This works inside multiclasses too.
 /
 /   Object ::= LET LetList IN '{' ObjectList '}'
 /   Object ::= LET LetList IN Object
 /

Lines 2114-2119 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2138-2138:
  Object ::= LETCommand '{' ObjectList '}'

Lines 2138-2138 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2140-2143:
  Otherwise, this is a group let.
  eat the '{'.

  Parse the object list.

Lines 2140-2143 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2204-2204:
  eat ','.

Lines 2204-2204 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2523-2529:
 / ParseObject
 /   Object ::= ClassInst
 /   Object ::= DefInst
 /   Object ::= MultiClassInst
 /   Object ::= DefMInst
 /   Object ::= LETCommand '{' ObjectList '}'
 /   Object ::= LETCommand Object

Lines 2523-2529 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/TableGen/TGLexer.h
../llvm-3.2.src/lib/TableGen/Main.cpp
../llvm-3.2.src/lib/TableGen/TGParser.h
../llvm-3.2.src/lib/AsmParser/LLLexer.h
../llvm-3.2.src/lib/AsmParser/LLParser.cpp
Comment from lines 241-243:
 / toplevelentity
 /   ::= 'target' 'triple' '=' STRINGCONSTANT
 /   ::= 'target' 'datalayout' '=' STRINGCONSTANT

Lines 241-243 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 369-371:
 / ParseGlobalType
 /   ::= 'constant'
 /   ::= 'global'

Lines 369-371 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 438-439:
  MDString:
    ::= '!' STRINGCONSTANT

Lines 438-439 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 465-465:
  !{ ..., !42, ... }

Lines 465-465 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 483-484:
 / ParseNamedMetadata:
 /   !foo = !{ !1, !2 }

Lines 483-484 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 555-563:
 / ParseAlias:
 /   ::= GlobalVar '=' OptionalVisibility 'alias' OptionalLinkage Aliasee
 / Aliasee
 /   ::= TypeAndValue
 /   ::= 'bitcast' '(' TypeAndValue 'to' Type ')'
 /   ::= 'getelementptr' 'inbounds'? '(' ... ')'
 /
 / Everything through visibility has already been parsed.
 /

Lines 555-563 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 635-642:
 / ParseGlobal
 /   ::= GlobalVar '=' OptionalLinkage OptionalVisibility OptionalThreadLocal
 /       OptionalAddrSpace OptionalUnNammedAddr GlobalType Type Const
 /   ::= OptionalLinkage OptionalVisibility OptionalThreadLocal
 /       OptionalAddrSpace OptionalUnNammedAddr GlobalType Type Const
 /
 / Everything through visibility has been parsed already.
 /

Lines 635-642 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 841-842:
 / ParseStringConstant
 /   ::= StringConstant

Lines 841-842 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 864-867:
 / ParseTLSModel
 /   := 'localdynamic'
 /   := 'initialexec'
 /   := 'localexec'

Lines 864-867 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1094-1112:
 / ParseOptionalCallingConv
 /   ::= /*empty*/
 /   ::= 'ccc'
 /   ::= 'fastcc'
 /   ::= 'kw_intel_ocl_bicc'
 /   ::= 'coldcc'
 /   ::= 'x86_stdcallcc'
 /   ::= 'x86_fastcallcc'
 /   ::= 'x86_thiscallcc'
 /   ::= 'arm_apcscc'
 /   ::= 'arm_aapcscc'
 /   ::= 'arm_aapcs_vfpcc'
 /   ::= 'msp430_intrcc'
 /   ::= 'ptx_kernel'
 /   ::= 'ptx_device'
 /   ::= 'spir_func'
 /   ::= 'spir_kernel'
 /   ::= 'cc' UINT
 /

Lines 1094-1112 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1208-1213:
 / ParseOptionalCommaAlign
 /   ::= 
 /   ::= ',' align 4
 /
 / This returns with AteExtraComma set to true if it ate an excess comma at the
 / end.

Lines 1208-1213 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1386-1386:
  Type ::= Type '*'

Lines 1386-1386 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1424-1428:
 / ParseParameterList
 /    ::= '(' ')'
 /    ::= '(' Arg (',' Arg)* ')'
 /  Arg
 /    ::= Type OptionalAttributes Value OptionalAttributes

Lines 1424-1428 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1506-1506:
  Handle ... at end of arg list.

Lines 1506-1506 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1643-1645:
  Consume the '{'

  Handle the empty struct.

Lines 1643-1645 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2022-2022:
  ValID ::= '{' ConstVector '}'

Lines 2022-2022 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2879-2881:
 / ParseFunctionBody
 /   ::= '{' BasicBlock+ '}'
 /

Lines 2879-2881 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3150-3152:
 / ParseBr
 /   ::= 'br' TypeAndValue
 /   ::= 'br' TypeAndValue ',' TypeAndValue ',' TypeAndValue

Lines 3150-3152 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3177-3181:
 / ParseSwitch
 /  Instruction
 /    ::= 'switch' TypeAndValue ',' TypeAndValue '[' JumpTable ']'
 /  JumpTable
 /    ::= (TypeAndValue ',' TypeAndValue)*

Lines 3177-3181 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3224-3226:
 / ParseIndirectBr
 /  Instruction
 /    ::= 'indirectbr' TypeAndValue ',' '[' LabelList ']'

Lines 3224-3226 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3265-3267:
 / ParseInvoke
 /   ::= 'invoke' OptionalCallingConv OptionalAttrs Type Value ParamList
 /       OptionalAttrs 'to' TypeAndValue 'unwind' TypeAndValue

Lines 3265-3267 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3409-3410:
 / ParseLogical
 /  ::= ArithmeticOps TypeAndValue ',' Value {

Lines 3409-3410 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3427-3429:
 / ParseCompare
 /  ::= 'icmp' IPredicates TypeAndValue ',' Value
 /  ::= 'fcmp' FPredicates TypeAndValue ',' Value

Lines 3427-3429 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3483-3484:
 / ParseSelect
 /   ::= 'select' TypeAndValue ',' TypeAndValue ',' TypeAndValue

Lines 3483-3484 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3520-3521:
 / ParseExtractElement
 /   ::= 'extractelement' TypeAndValue ',' TypeAndValue

Lines 3520-3521 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3537-3538:
 / ParseInsertElement
 /   ::= 'insertelement' TypeAndValue ',' TypeAndValue ',' TypeAndValue

Lines 3537-3538 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3620-3625:
 / ParseLandingPad
 /   ::= 'landingpad' Type 'personality' TypeAndValue 'cleanup'? Clause+
 / Clause
 /   ::= 'catch' TypeAndValue
 /   ::= 'filter'
 /   ::= 'filter' TypeAndValue ( ',' TypeAndValue )*

Lines 3620-3625 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3670-3672:
 / ParseCall
 /   ::= 'tail'? 'call' OptionalCallingConv OptionalAttrs Type Value
 /       ParameterList OptionalAttrs

Lines 3670-3672 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3884-3886:
 / ParseCmpXchg
 /   ::= 'cmpxchg' 'volatile'? TypeAndValue ',' TypeAndValue ',' TypeAndValue
 /       'singlethread'? AtomicOrdering

Lines 3884-3886 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3927-3929:
 / ParseAtomicRMW
 /   ::= 'atomicrmw' 'volatile'? BinOp TypeAndValue ',' TypeAndValue
 /       'singlethread'? AtomicOrdering

Lines 3927-3929 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3983-3984:
 / ParseFence
 /   ::= 'fence' 'singlethread'? AtomicOrdering

Lines 3983-3984 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/AsmParser/LLParser.h
Comment from lines 45-55:
  ID in UIntVal.
  Name in StrVal.
  Value in APSIntVal/APFloatVal.
  No value.
  No value:  []
  Value in ConstantVal.
  Value in StrVal/StrVal2/UIntVal.
  Value in MDNodeVal.
  Value in MDStringVal.
  Value in ConstantStructElts.
  Value in ConstantStructElts.

Lines 45-55 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/AsmParser/LLLexer.cpp
Comment from lines 49-49:
  Uh, oh, overflow detected!!!

Lines 49-49 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 74-74:
  Uh, oh, overflow detected!!!

Lines 74-74 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/AsmParser/LLToken.h
../llvm-3.2.src/lib/AsmParser/Parser.cpp
../llvm-3.2.src/lib/Object/MachOObject.cpp
Comment from lines 57-57:
  *** 


Lines 57-57 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Object/ObjectFile.cpp
../llvm-3.2.src/lib/Object/Object.cpp
../llvm-3.2.src/lib/Object/COFFObjectFile.cpp
Comment from lines 450-450:
  Check the PE header. ("PE\0\0")

Lines 450-450 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 628-628:
  Null terminated, let ::strlen figure out the length.

Lines 628-628 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 836-836:
  end namespace llvm

Lines 836-836 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Object/Error.cpp
../llvm-3.2.src/lib/Object/Archive.cpp
../llvm-3.2.src/lib/Object/Binary.cpp
../llvm-3.2.src/lib/Object/ELFObjectFile.cpp
../llvm-3.2.src/lib/Object/MachOObjectFile.cpp
Comment from lines 1076-1076:
  Generic relocation types...

Lines 1076-1076 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Linker/LinkModules.cpp
Comment from lines 1094-1094:
  Get the destination's module flags ready for new operands.

Lines 1094-1094 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Linker/LinkArchives.cpp
../llvm-3.2.src/lib/Linker/LinkItems.cpp
Comment from lines 33-33:
  For each linkage item ...

Lines 33-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 89-89:
  LLVM ".so" file.

Lines 89-89 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Linker/Linker.cpp
../llvm-3.2.src/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h
Comment from lines 71-72:
  UNICODE || _UNICODE 
  ITT_PLATFORM==ITT_PLATFORM_WIN 


Lines 71-72 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 82-84:
  _M_X64 || _M_AMD64 || __x86_64__ 
  ITT_PLATFORM==ITT_PLATFORM_WIN 
  CDECL 


Lines 82-84 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 89-89:
  ITT_PLATFORM==ITT_PLATFORM_WIN 

Lines 89-89 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 94-96:
  _M_X64 || _M_AMD64 || __x86_64__ 
  ITT_PLATFORM==ITT_PLATFORM_WIN 
  STDCALL 


Lines 94-96 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 303-303:
  UNICODE || _UNICODE 

Lines 303-303 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h
../llvm-3.2.src/lib/ExecutionEngine/IntelJITEvents/jitprofiling.h
Comment from lines 226-226:
  defined WIN32 || defined _WIN32 

Lines 226-226 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 231-233:
  _M_X64 || _M_AMD64 || __x86_64__ 
  defined WIN32 || defined _WIN32 
  CDECL 


Lines 231-233 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp
../llvm-3.2.src/lib/ExecutionEngine/IntelJITEvents/ittnotify_types.h
../llvm-3.2.src/lib/ExecutionEngine/ExecutionEngine.cpp
Comment from lines 284-284:
  Endian safe: Array[i] = (PointerTy)Dest;

Lines 284-284 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 533-533:
  If its undefined, return the garbage.

Lines 533-533 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 551-551:
  Otherwise, if the value is a ConstantExpr...

Lines 551-551 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/OProfileJIT/OProfileWrapper.cpp
../llvm-3.2.src/lib/ExecutionEngine/OProfileJIT/OProfileJITEventListener.cpp
../llvm-3.2.src/lib/ExecutionEngine/Interpreter/Interpreter.h
../llvm-3.2.src/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp
Comment from lines 102-102:
  Try calling a generic function... if it exists...

Lines 102-102 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 424-424:
  int sscanf(const char *format, ...);

Lines 424-424 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 440-440:
  int scanf(const char *format, ...);

Lines 440-440 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/Interpreter/Interpreter.cpp
../llvm-3.2.src/lib/ExecutionEngine/Interpreter/Execution.cpp
Comment from lines 720-720:
  Search for the value corresponding to this previous bb...

Lines 720-720 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 725-725:
  Save the incoming value for this PHI node...

Lines 725-725 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1336-1336:
  Dispatch to one of the visit* methods...

Lines 1336-1336 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/MCJIT/MCJIT.h
Comment from lines 96-96:
  @}


Lines 96-96 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/MCJIT/MCJIT.cpp
../llvm-3.2.src/lib/ExecutionEngine/EventListenerCommon.h
../llvm-3.2.src/lib/ExecutionEngine/TargetSelect.cpp
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/ObjectImageCommon.h
Comment from lines 23-24:
  = delete
  = delete


Lines 23-24 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp
Comment from lines 350-353:
  0:   3c190000        lui     t9,%hi(addr).
  4:   27390000        addiu   t9,t9,%lo(addr).
  8:   03200008        jr      t9.
  c:   00000000        nop.

Lines 350-353 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/GDBRegistrar.cpp
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/JITRegistrar.h
../llvm-3.2.src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.h
../llvm-3.2.src/lib/ExecutionEngine/JIT/JITDwarfEmitter.cpp
Comment from lines 403-405:
  Asm->EOL("Call-site table length");

  Emit the landing pad site information.

Lines 403-405 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 448-448:
 Asm->EOL("Next action");

Lines 448-448 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/JIT/JITEmitter.cpp
../llvm-3.2.src/lib/ExecutionEngine/JIT/JIT.h
../llvm-3.2.src/lib/ExecutionEngine/JIT/JITMemoryManager.cpp
Comment from lines 836-836:
  Run atexit handlers...

Lines 836-836 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/ExecutionEngine/JIT/JIT.cpp
../llvm-3.2.src/lib/ExecutionEngine/JIT/JITDwarfEmitter.h
../llvm-3.2.src/lib/ExecutionEngine/ExecutionEngineBindings.cpp
../llvm-3.2.src/lib/MC/MCCodeGenInfo.cpp
../llvm-3.2.src/lib/MC/MCSectionCOFF.cpp
Comment from lines 68-69:
   OS << "\t.linkonce largest\n";
   break;

Lines 68-69 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCModule.cpp
../llvm-3.2.src/lib/MC/MCDisassembler.cpp
../llvm-3.2.src/lib/MC/MCRegisterInfo.cpp
../llvm-3.2.src/lib/MC/MCCodeEmitter.cpp
../llvm-3.2.src/lib/MC/MCStreamer.cpp
../llvm-3.2.src/lib/MC/MCSection.cpp
../llvm-3.2.src/lib/MC/MCDisassembler/Disassembler.h
../llvm-3.2.src/lib/MC/MCDisassembler/EDInst.h
../llvm-3.2.src/lib/MC/MCDisassembler/EDOperand.h
../llvm-3.2.src/lib/MC/MCDisassembler/Disassembler.cpp
Comment from lines 187-190:
 
  LLVMSetDisasmOptions() sets the disassembler's options.  It returns 1 if it
  can set all the Options and 0 otherwise.
 

Lines 187-190 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCDisassembler/EDOperand.cpp
Comment from lines 205-205:
  switch (operandType)

Lines 205-205 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCDisassembler/EDInfo.h
../llvm-3.2.src/lib/MC/MCDisassembler/EDInst.cpp
../llvm-3.2.src/lib/MC/MCDisassembler/EDMain.cpp
../llvm-3.2.src/lib/MC/MCDisassembler/EDDisassembler.cpp
../llvm-3.2.src/lib/MC/MCDisassembler/EDDisassembler.h
../llvm-3.2.src/lib/MC/MCDisassembler/EDToken.cpp
../llvm-3.2.src/lib/MC/MCDisassembler/EDToken.h
../llvm-3.2.src/lib/MC/MachObjectWriter.cpp
Comment from lines 758-758:
  Write the symbol table load command, if used.

Lines 758-758 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 817-817:
  Write out the data-in-code region payload, if there is one.

Lines 817-817 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCAsmBackend.cpp
../llvm-3.2.src/lib/MC/MCObjectFileInfo.cpp
../llvm-3.2.src/lib/MC/MCMachObjectTargetWriter.cpp
../llvm-3.2.src/lib/MC/MCInst.cpp
../llvm-3.2.src/lib/MC/MCExpr.cpp
Comment from lines 146-146:
  *** 


Lines 146-146 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 162-162:
  *** 


Lines 162-162 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 273-273:
  *** 


Lines 273-273 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 277-277:
  *** 


Lines 277-277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/ELFObjectWriter.cpp
Comment from lines 1218-1218:
  Create the .note.GNU-stack section if needed.

Lines 1218-1218 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1537-1538:
  ... then the regular sections ...
  + because of .shstrtab

Lines 1537-1538 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1545-1545:
  ... then the section header table ...

Lines 1545-1545 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCELF.h
../llvm-3.2.src/lib/MC/MCWin64EH.cpp
../llvm-3.2.src/lib/MC/MCAsmInfoCOFF.cpp
../llvm-3.2.src/lib/MC/MCParser/MCAsmParser.cpp
../llvm-3.2.src/lib/MC/MCParser/AsmParser.cpp
Comment from lines 88-88:
 struct AsmRewrite;

Lines 88-88 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 329-334:
  ".rept"
  ".irp"
  ".irpc"
  ".endr"

  "_emit"

Lines 329-334 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1080-1083:
 / ParseStatement:
 /   ::= EndOfStatement
 /   ::= Label* Directive ...Operands... EndOfStatement
 /   ::= Label* Identifier OperandList* EndOfStatement

Lines 1080-1083 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1897-1897:
  Error on assignment to '.'.

Lines 1897-1897 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1983-1986:
 / ParseDirectiveSet:
 /   ::= .equ identifier ',' expression
 /   ::= .equiv identifier ',' expression
 /   ::= .set identifier ',' expression

Lines 1983-1986 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2533-2534:
 / ParseDirectiveInclude
 /  ::= .include "filename"

Lines 2533-2534 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2559-2560:
 / ParseDirectiveIncbin
 /  ::= .incbin "filename"

Lines 2559-2560 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2584-2585:
 / ParseDirectiveIf
 / ::= .if expression

Lines 2584-2585 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2688-2689:
 / ParseDirectiveElseIf
 / ::= .elseif expression

Lines 2688-2689 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2720-2721:
 / ParseDirectiveElse
 / ::= .else

Lines 2720-2721 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2744-2745:
 / ParseDirectiveEndIf
 / ::= .endif

Lines 2744-2745 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2764-2766:
 / ParseDirectiveFile
 / ::= .file [number] filename
 / ::= .file number directory filename

Lines 2764-2766 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2817-2818:
 / ParseDirectiveLine
 / ::= .line [number]

Lines 2817-2818 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3248-3250:
 / ParseDirectiveMacrosOnOff
 / ::= .macros_on
 / ::= .macros_off

Lines 3248-3250 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3333-3335:
 / ParseDirectiveEndMacro
 / ::= .endm
 / ::= .endmacro

Lines 3333-3335 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3354-3355:
 / ParseDirectivePurgeMacro
 / ::= .purgem

Lines 3354-3355 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCParser/MCAsmLexer.cpp
../llvm-3.2.src/lib/MC/MCParser/MCTargetAsmParser.cpp
../llvm-3.2.src/lib/MC/MCParser/MCAsmParserExtension.cpp
../llvm-3.2.src/lib/MC/MCParser/DarwinAsmParser.cpp
Comment from lines 365-366:
 / ParseDirectiveDumpOrLoad
 /  ::= ( .dump | .load ) "filename"

Lines 365-366 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 496-497:
 / ParseDirectiveSecureLogUnique
 /  ::= .secure_log_unique ... message ...

Lines 496-497 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 536-537:
 / ParseDirectiveSecureLogReset
 /  ::= .secure_log_reset

Lines 536-537 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 549-550:
 / ParseDirectiveSubsectionsViaSymbols
 /  ::= .subsections_via_symbols

Lines 549-550 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 729-730:
 / ParseDirectiveDataRegionEnd
 /  ::= .end_data_region

Lines 729-730 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCParser/COFFAsmParser.cpp
Comment from lines 461-464:
  FIXME: TargetAsmInfo::getCalleeSavedRegs() commits a serious layering
  violation so this validation code is disabled.

  Check that this is a non-volatile register.

Lines 461-464 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCParser/AsmLexer.cpp
Comment from lines 117-118:
 / LexSlash: Slash: /
 /           C-Style Comment: /* ... */

Lines 117-118 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 137-137:
  End the */.

Lines 137-137 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCParser/ELFAsmParser.cpp
Comment from lines 496-497:
 / ParseDirectiveIdent
 /  ::= .ident string

Lines 496-497 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 552-553:
 / ParseDirectiveVersion
 /  ::= .version string

Lines 552-553 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCELF.cpp
../llvm-3.2.src/lib/MC/MCContext.cpp
Comment from lines 189-189:
  Otherwise, return a new section.

Lines 189-189 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 207-207:
  Do the lookup, if we have a hit, return it.

Lines 207-207 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 241-241:
  Do the lookup, if we have a hit, return it.

Lines 241-241 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCTargetAsmLexer.cpp
../llvm-3.2.src/lib/MC/MCSubtargetInfo.cpp
../llvm-3.2.src/lib/MC/MCAtom.cpp
../llvm-3.2.src/lib/MC/MCInstPrinter.cpp
../llvm-3.2.src/lib/MC/MCObjectWriter.cpp
../llvm-3.2.src/lib/MC/MCSymbol.cpp
../llvm-3.2.src/lib/MC/MCMachOStreamer.cpp
Comment from lines 79-82:
  FIXME: Just ignore the .file; it isn't important enough to fail the
  entire assembly.

 report_fatal_error("unsupported directive: '.file'");

Lines 79-82 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCAsmStreamer.cpp
Comment from lines 414-420:
 / .type _foo, STT_FUNC  # aka @function
 / .type _foo, STT_GNU_IFUNC
 / .type _foo, STT_OBJECT  # aka @object
 / .type _foo, STT_TLS     # aka @tls_object
 / .type _foo, STT_COMMON  # aka @common
 / .type _foo, STT_NOTYPE  # aka @notype
 / .type _foo, @gnu_unique_object

Lines 414-420 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCNullStreamer.cpp
Comment from lines 24-25:
 / @name MCStreamer Interface
 / @{


Lines 24-25 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/WinCOFFObjectWriter.cpp
Comment from lines 827-827:
  Write it all to disk...

Lines 827-827 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCLabel.cpp
../llvm-3.2.src/lib/MC/MCInstrAnalysis.cpp
../llvm-3.2.src/lib/MC/MCDwarf.cpp
Comment from lines 1038-1041:
  Throw out move if the label is invalid.
  Not emitted, in dead code.

  Advance row if new location.

Lines 1038-1041 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCAsmInfo.cpp
../llvm-3.2.src/lib/MC/MCSectionMachO.cpp
Comment from lines 193-193:
  Capture segment, remove leading and trailing whitespace.

Lines 193-193 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 205-205:
  Capture section, remove leading and trailing whitespace.

Lines 205-205 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCSectionELF.cpp
../llvm-3.2.src/lib/MC/WinCOFFStreamer.cpp
../llvm-3.2.src/lib/MC/MCValue.cpp
../llvm-3.2.src/lib/MC/MCObjectStreamer.cpp
../llvm-3.2.src/lib/MC/SubtargetFeature.cpp
Comment from lines 37-38:
 / StripFlag - Return string stripped of flag.
 /

Lines 37-38 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 146-147:
 / Display help for feature choices.
 /

Lines 146-147 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 244-244:
  For each feature that this implies, set it.

Lines 244-244 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 291-291:
  Set the feature implied by this CPU feature, if any.

Lines 291-291 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCPureStreamer.cpp
../llvm-3.2.src/lib/MC/MCAssembler.cpp
Comment from lines 166-166:
  *** 


Lines 166-166 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 180-180:
  *** 


Lines 180-180 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCELFStreamer.cpp
Comment from lines 255-255:
  Ignore for now.

Lines 255-255 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/MC/MCELFObjectTargetWriter.cpp
../llvm-3.2.src/lib/MC/MCAsmInfoDarwin.cpp
../llvm-3.2.src/lib/Target/TargetLoweringObjectFile.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPC.h
../llvm-3.2.src/lib/Target/PowerPC/PPCMachineFunctionInfo.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCELFObjectWriter.cpp
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.cpp
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCBaseInfo.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCAsmBackend.cpp
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCFixupKinds.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp
../llvm-3.2.src/lib/Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCSubtarget.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/PowerPC/PPCHazardRecognizers.cpp
Comment from lines 28-28:
  This is a PPC pseudo-instruction.

Lines 28-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCRegisterInfo.cpp
Comment from lines 61-61:
  FIXME (64-bit): Should be inlined.

Lines 61-61 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 427-427:
  rlwinm rA, rA, ShiftBits, 0, 31.

Lines 427-427 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 471-471:
  rlwinm r11, r11, 32-ShiftBits, 0, 31.

Lines 471-471 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCInstrInfo.h
../llvm-3.2.src/lib/Target/PowerPC/PPCTargetMachine.h
../llvm-3.2.src/lib/Target/PowerPC/PPCMachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCInstrInfo.cpp
Comment from lines 50-51:
 / CreateTargetHazardRecognizer - Return the hazard recognizer to use for
 / this target when scheduling the DAG.

Lines 50-51 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 519-519:
  rlwinm scratch, scratch, ShiftBits, 0, 31.

Lines 519-519 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 665-665:
  rlwinm r11, r11, 32-ShiftBits, 0, 31.

Lines 665-665 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCISelDAGToDAG.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCAsmPrinter.cpp
Comment from lines 412-412:
  In Book E sync is called msync, handle this special case here...

Lines 412-412 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCISelLowering.h
../llvm-3.2.src/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCRelocations.h
../llvm-3.2.src/lib/Target/PowerPC/PPCHazardRecognizers.h
../llvm-3.2.src/lib/Target/PowerPC/PPCJITInfo.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCJITInfo.h
../llvm-3.2.src/lib/Target/PowerPC/PPCRegisterInfo.h
../llvm-3.2.src/lib/Target/PowerPC/InstPrinter/PPCInstPrinter.cpp
../llvm-3.2.src/lib/Target/PowerPC/InstPrinter/PPCInstPrinter.h
../llvm-3.2.src/lib/Target/PowerPC/PPCSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCPerfectShuffle.h
../llvm-3.2.src/lib/Target/PowerPC/PPCCodeEmitter.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCMCInstLower.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCFrameLowering.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCCTRLoops.cpp
Comment from lines 709-709:
  Conditional branch; just delete it.

Lines 709-709 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCInstrBuilder.h
../llvm-3.2.src/lib/Target/PowerPC/PPCTargetMachine.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCFrameLowering.h
../llvm-3.2.src/lib/Target/PowerPC/PPCISelLowering.cpp
Comment from lines 809-809:
  0,0,0,4 -> vspltisw(4)

Lines 809-809 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 813-813:
  -1,-1,-1,undef

Lines 813-813 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 815-815:
  -1,-1,-1,-2 -> vspltisw(-2)

Lines 815-815 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 961-961:
  Match LOAD (ADD (X, Lo(G))).

Lines 961-961 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1075-1075:
  Match LOAD (ADD (X, Lo(G))).

Lines 1075-1075 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1534-1534:
  TrampSize == (isPPC64 ? 48 : 40);

Lines 1534-1534 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1542-1542:
  Lower to a call to __trampoline_setup(Trmp, TrampSize, FPtr, ctx_reg)

Lines 1542-1542 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2733-2733:
  Remember only if the new adjustement is bigger.

Lines 2733-2733 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3575-3575:
  The MEMCPY must go outside the CALLSEQ_START..END.

Lines 3575-3575 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4841-4841:
  Force vspltis[hw] -1 to vspltisb -1 to canonicalize.

Lines 4841-4841 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4903-4903:
  Check if this is a splat of a constant value.

Lines 4903-4903 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5058-5059:
 / GeneratePerfectShuffle - Given an entry in the perfect-shuffle table, emit
 / the specified operations to build the shuffle.

Lines 5058-5059 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6199-6201:
  Turn (sint_to_fp (fp_to_sint X)) -> fctidz/fcfid without load/stores.
  We allow the src/dst to be either f32/f64, but the intermediate
  type must be i64.

Lines 6199-6201 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6228-6228:
  Turn STORE (FP_TO_SINT F) -> STFIWX(FCTIWZ(F)).

Lines 6228-6228 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6271-6271:
  Turn BSWAP (LOAD) -> lhbrx/lwbrx.

Lines 6271-6271 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6378-6378:
  Always !=, turn it into an unconditional branch.

Lines 6378-6378 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/PowerPC/PPCBranchSelector.cpp
../llvm-3.2.src/lib/Target/PowerPC/PPCSubtarget.h
../llvm-3.2.src/lib/Target/TargetRegisterInfo.cpp
../llvm-3.2.src/lib/Target/XCore/MCTargetDesc/XCoreMCAsmInfo.h
../llvm-3.2.src/lib/Target/XCore/MCTargetDesc/XCoreMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/XCore/MCTargetDesc/XCoreMCTargetDesc.h
../llvm-3.2.src/lib/Target/XCore/MCTargetDesc/XCoreMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreInstrInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreISelLowering.cpp
Comment from lines 537-537:
  Lower to a call to __misaligned_store(BasePtr, Value).

Lines 537-537 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 892-892:
  For now, only CallingConv::C implemented

Lines 892-892 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 998-1001:
  XCoreBranchLink = #chain, #target_address, #opt_in_flags...
              = Chain, Callee, Reg#1, Reg#2, ...
 
  Returns a chain & a flag for retval copy to use.

Lines 998-1001 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1354-1354:
  fold (ladd 0, 0, x) -> 0, x & 1

Lines 1354-1354 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1433-1433:
  lmul(x, 0, a, b)

Lines 1433-1433 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1441-1441:
  Otherwise fold to ladd(a, b, 0)

Lines 1441-1441 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/XCore/XCoreRegisterInfo.h
../llvm-3.2.src/lib/Target/XCore/XCoreTargetMachine.h
../llvm-3.2.src/lib/Target/XCore/XCoreISelLowering.h
../llvm-3.2.src/lib/Target/XCore/XCoreTargetObjectFile.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/XCore/TargetInfo/XCoreTargetInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreFrameLowering.h
../llvm-3.2.src/lib/Target/XCore/XCoreSubtarget.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreInstrInfo.h
../llvm-3.2.src/lib/Target/XCore/XCoreTargetObjectFile.h
Comment from lines 22-22:
  end namespace llvm


Lines 22-22 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/XCore/XCoreISelDAGToDAG.cpp
Comment from lines 261-261:
  (brind (int_xcore_checkevent (addr)))

Lines 261-261 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/XCore/XCoreTargetMachine.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreMachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreFrameLowering.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreAsmPrinter.cpp
../llvm-3.2.src/lib/Target/XCore/XCoreSubtarget.h
../llvm-3.2.src/lib/Target/XCore/XCoreMachineFunctionInfo.h
../llvm-3.2.src/lib/Target/XCore/XCoreRegisterInfo.cpp
../llvm-3.2.src/lib/Target/XCore/XCore.h
../llvm-3.2.src/lib/Target/TargetJITInfo.cpp
../llvm-3.2.src/lib/Target/CppBackend/TargetInfo/CppBackendTargetInfo.cpp
../llvm-3.2.src/lib/Target/CppBackend/CPPTargetMachine.h
../llvm-3.2.src/lib/Target/CppBackend/CPPBackend.cpp
Comment from lines 258-258:
  " << StrVal << " 
Lines 258-258 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 960-960:
  Global Variable Declarations"; nl(Out);

Lines 960-960 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 963-963:
  Global Variable Definitions"; nl(Out);

Lines 963-963 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 966-966:
  Constant Definitions"; nl(Out);

Lines 966-966 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1589-1589:
  Type Definitions"; nl(Out);

Lines 1589-1589 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1664-1665:
  Print the constants found
  Constant Definitions"; nl(Out);

Lines 1664-1665 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1675-1675:
  Global Variable Definitions"; nl(Out);

Lines 1675-1675 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1699-1699:
  (external, no body)" : "");

Lines 1699-1699 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1782-1782:
  Block " << BI->getName() << " (" << bbname << ")";

Lines 1782-1782 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1877-1877:
  Function: " << I->getName() << " (" << getCppName(I)

Lines 1877-1877 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/MipsSubtarget.h
../llvm-3.2.src/lib/Target/Mips/MipsMachineFunction.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsMCTargetDesc.h
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsFixupKinds.h
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsDirectObjLower.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsMCAsmInfo.h
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsBaseInfo.h
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsAsmBackend.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsDirectObjLower.h
../llvm-3.2.src/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp
../llvm-3.2.src/lib/Target/Mips/Disassembler/MipsDisassembler.cpp
../llvm-3.2.src/lib/Target/Mips/MipsSERegisterInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsDelaySlotFiller.cpp
../llvm-3.2.src/lib/Target/Mips/MipsTargetObjectFile.cpp
../llvm-3.2.src/lib/Target/Mips/MipsJITInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsInstrInfo.h
../llvm-3.2.src/lib/Target/Mips/Mips16FrameLowering.h
../llvm-3.2.src/lib/Target/Mips/MipsMCInstLower.h
../llvm-3.2.src/lib/Target/Mips/MipsSEFrameLowering.h
../llvm-3.2.src/lib/Target/Mips/MipsSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsTargetMachine.cpp
../llvm-3.2.src/lib/Target/Mips/TargetInfo/MipsTargetInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsSEInstrInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsSEFrameLowering.cpp
../llvm-3.2.src/lib/Target/Mips/MipsMCInstLower.cpp
Comment from lines 117-126:
 static void CreateMCInst(MCInst& Inst, unsigned Opc, const MCOperand &Opnd0,
                          const MCOperand &Opnd1,
                          const MCOperand &Opnd2 = MCOperand()) {
   Inst.setOpcode(Opc);
   Inst.addOperand(Opnd0);
   Inst.addOperand(Opnd1);
   if (Opnd2.isValid())
     Inst.addOperand(Opnd2);
 }
 


Lines 117-126 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/AsmParser/MipsAsmParser.cpp
Comment from lines 390-392:
 for -32768 <= j <= 65535.
 la d,j(s) => addiu d,s,j
 TODO:no ADDiu64 in td files?

Lines 390-392 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 398-401:
 for any other value of j that is representable as a 32-bit integer.
 la d,j(s) => lui d,hi16(j)
              ori d,d,lo16(j)
              addu d,d,s

Lines 398-401 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1079-1079:
 only one '.' in a string, it's a format

Lines 1079-1079 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1094-1094:
  trunc, ceil, floor ...

Lines 1094-1094 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/InstPrinter/MipsInstPrinter.cpp
../llvm-3.2.src/lib/Target/Mips/InstPrinter/MipsInstPrinter.h
../llvm-3.2.src/lib/Target/Mips/MipsSubtarget.cpp
../llvm-3.2.src/lib/Target/Mips/MipsTargetMachine.h
../llvm-3.2.src/lib/Target/Mips/MipsAsmPrinter.cpp
../llvm-3.2.src/lib/Target/Mips/MipsLongBranch.cpp
../llvm-3.2.src/lib/Target/Mips/Mips16RegisterInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsMachineFunction.h
../llvm-3.2.src/lib/Target/Mips/MipsTargetObjectFile.h
../llvm-3.2.src/lib/Target/Mips/MipsISelDAGToDAG.cpp
Comment from lines 329-329:
  if Address is FI, get the TargetFrameIndex.

Lines 329-329 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 368-375:
  When loading from constant pools, load the lower address part in
  the instruction itself. Example, instead of:
   lui $2, %hi($CPI1_0)
   addiu $2, $2, %lo($CPI1_0)
   lwc1 $f0, 0($2)
  Generate:
   lui $2, %hi($CPI1_0)
   lwc1 $f0, %lo($CPI1_0)($2)

Lines 368-375 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 440-440:
  if Address is FI, get the TargetFrameIndex.

Lines 440-440 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 478-485:
  When loading from constant pools, load the lower address part in
  the instruction itself. Example, instead of:
   lui $2, %hi($CPI1_0)
   addiu $2, $2, %lo($CPI1_0)
   lwc1 $f0, 0($2)
  Generate:
   lui $2, %hi($CPI1_0)
   lwc1 $f0, %lo($CPI1_0)($2)

Lines 478-485 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/MipsSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsJITInfo.cpp
Comment from lines 151-151:
  host != Mips

Lines 151-151 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 220-223:
  lui t9, %hi(EmittedAddr)
  addiu t9, t9, %lo(EmittedAddr)
  jalr t8, t9
  nop

Lines 220-223 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/Mips16InstrInfo.cpp
../llvm-3.2.src/lib/Target/Mips/Mips.h
../llvm-3.2.src/lib/Target/Mips/MipsFrameLowering.h
../llvm-3.2.src/lib/Target/Mips/MipsInstrInfo.cpp
../llvm-3.2.src/lib/Target/Mips/MipsRelocations.h
../llvm-3.2.src/lib/Target/Mips/MipsRegisterInfo.cpp
Comment from lines 127-127:
  Reserve RA if in mips16 mode.

Lines 127-127 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Mips/MipsSEInstrInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsFrameLowering.cpp
../llvm-3.2.src/lib/Target/Mips/MipsAnalyzeImmediate.h
../llvm-3.2.src/lib/Target/Mips/MipsRegisterInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsAnalyzeImmediate.cpp
../llvm-3.2.src/lib/Target/Mips/MipsSERegisterInfo.h
../llvm-3.2.src/lib/Target/Mips/Mips16InstrInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsCodeEmitter.cpp
../llvm-3.2.src/lib/Target/Mips/Mips16FrameLowering.cpp
../llvm-3.2.src/lib/Target/Mips/MipsISelLowering.h
../llvm-3.2.src/lib/Target/Mips/Mips16RegisterInfo.h
../llvm-3.2.src/lib/Target/Mips/MipsAsmPrinter.h
../llvm-3.2.src/lib/Target/Mips/MipsISelLowering.cpp
Comment from lines 1010-1010:
  Get fp branch code (not opcode) from condition code.

Lines 1010-1010 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1585-1587:
  loop2MBB:
    sc success, newval, 0(ptr)
    beq success, $0, loop1MBB

Lines 1585-1587 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1994-1995:
  ext  E, Y, 31, 1  ; extract bit31 of Y
  ins  X, E, 31, 1  ; insert extracted bit at bit31 of X

Lines 1994-1995 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2277-2277:
  Return if load is aligned or if MemVT is neither i32 nor i64.

Lines 2277-2277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2289-2293:
  Expand
   (set dst, (i64 (load baseptr)))
  to
   (set tmp, (ldl (add baseptr, 7), undef))
   (set dst, (ldr baseptr, tmp))

Lines 2289-2293 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2306-2312:
  Expand
   (set dst, (i32 (load baseptr))) or
   (set dst, (i64 (sextload baseptr))) or
   (set dst, (i64 (extload baseptr)))
  to
   (set tmp, (lwl (add baseptr, 3), undef))
   (set dst, (lwr baseptr, tmp))

Lines 2306-2312 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2319-2325:
  Expand
   (set dst, (i64 (zextload baseptr)))
  to
   (set tmp0, (lwl (add baseptr, 3), undef))
   (set tmp1, (lwr baseptr, tmp0))
   (set tmp2, (shl tmp1, 32))
   (set dst, (srl tmp2, 32))

Lines 2319-2325 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2355-2355:
  Return if store is aligned or if MemVT is neither i32 nor i64.

Lines 2355-2355 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2364-2369:
  Expand
   (store val, baseptr) or
   (truncstore val, baseptr)
  to
   (swl val, (add baseptr, 3))
   (swr val, baseptr)

Lines 2364-2369 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2378-2382:
  Expand
   (store val, baseptr)
  to
   (sdl val, (add baseptr, 7))
   (sdr val, baseptr)

Lines 2378-2382 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2918-2921:
  MipsJmpLink = #chain, #target_address, #opt_in_flags...
              = Chain, Callee, Reg#1, Reg#2, ...
 
  Returns a chain & a flag for retval copy to use.

Lines 2918-2921 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3596-3596:
  If Align > RegSize, the first arg register must be even.

Lines 3596-3596 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/NVPTXutil.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXFrameLowering.cpp
../llvm-3.2.src/lib/Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.h
../llvm-3.2.src/lib/Target/NVPTX/MCTargetDesc/NVPTXMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.h
../llvm-3.2.src/lib/Target/NVPTX/MCTargetDesc/NVPTXMCAsmInfo.cpp
Comment from lines 35-35:
 ";


Lines 35-35 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/MCTargetDesc/NVPTXBaseInfo.h
../llvm-3.2.src/lib/Target/NVPTX/ManagedStringPool.h
../llvm-3.2.src/lib/Target/NVPTX/cl_common_defines.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXAsmPrinter.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXFrameLowering.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXSubtarget.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXSubtarget.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXTargetMachine.cpp
Comment from lines 76-76:
 FrameInfo(TargetFrameInfo::StackGrowsUp, 8, 0)
Lines 76-76 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/TargetInfo/NVPTXTargetInfo.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXUtilities.cpp
Comment from lines 492-492:
 BasicBlock *B = getParentBlock(v);


Lines 492-492 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/NVPTXLowerAggrCopies.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXTargetMachine.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXSplitBBatBar.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTX.h
../llvm-3.2.src/lib/Target/NVPTX/VectorElementize.cpp
../llvm-3.2.src/lib/Target/NVPTX/InstPrinter/NVPTXInstPrinter.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXutil.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXAllocaHoisting.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXAllocaHoisting.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXNumRegisters.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXLowerAggrCopies.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXInstrInfo.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXSplitBBatBar.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXUtilities.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXRegisterInfo.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp
Comment from lines 277-277:
 const TargetMachine &TM = MF->getTarget();


Lines 277-277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 637-638:
  Implicit def :";
 printOperand(MI, 0);

Lines 637-638 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 916-919:
  We need to call the parent's one explicitly.
 bool Result = AsmPrinter::doInitialization(M);

  Initialize TargetLoweringObjectFile.

Lines 916-919 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 971-973:
 \n";
  Generated by LLVM NVPTX Back-End\n";
 \n";

Lines 971-973 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1179-1179:
  " << GVar->getName().str() << " has been demoted\n";

Lines 1179-1179 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1292-1292:
  demoted variable\n\t";

Lines 1292-1292 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1588-1590:
  Just print .param .b8 .align <a> .param[size];
  <a> = PAL.getparamalignment
  size = typeallocsize of element type

Lines 1588-1590 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1602-1605:
  Split the ETy into constituent parts and
  print .param .b<size> <name> for each part.
  Further, if a part is vector, print the above for
  each vector element.

Lines 1602-1605 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/NVPTXISelLowering.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXInstrInfo.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXISelLowering.cpp
Comment from lines 472-474:
  Plain scalar
  for ABI,    declare .param .b<size> .param<n>;
  for nonABI, declare .reg .b<size> .param<n>;

Lines 472-474 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 516-516:
  declare .param .align 16 .b8 .param<n>[<size>];

Lines 516-516 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/NVPTX/NVPTXISelDAGToDAG.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXRegisterInfo.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp
../llvm-3.2.src/lib/Target/NVPTX/NVPTXSection.h
../llvm-3.2.src/lib/Target/NVPTX/NVPTXTargetObjectFile.h
../llvm-3.2.src/lib/Target/TargetMachineC.cpp
../llvm-3.2.src/lib/Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/CellSPU/MCTargetDesc/SPUMCAsmInfo.h
../llvm-3.2.src/lib/Target/CellSPU/MCTargetDesc/SPUMCTargetDesc.h
../llvm-3.2.src/lib/Target/CellSPU/SPURegisterInfo.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUISelLowering.h
../llvm-3.2.src/lib/Target/CellSPU/SPUTargetMachine.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPURegisterNames.h
../llvm-3.2.src/lib/Target/CellSPU/SPUAsmPrinter.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUInstrBuilder.h
../llvm-3.2.src/lib/Target/CellSPU/SPURegisterInfo.h
../llvm-3.2.src/lib/Target/CellSPU/TargetInfo/CellSPUTargetInfo.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUHazardRecognizers.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUISelDAGToDAG.cpp
Comment from lines 474-474:
  (SPUindirect (SPUhi <arg>, 0), (SPUlo <arg>, 0))

Lines 474-474 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 786-787:
  Check if the pattern is a special form of DFNMS:
  (fneg (fsub (fmul R64FP:$rA, R64FP:$rB), R64FP:$rC))

Lines 786-787 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/CellSPU/SPUNopFiller.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUTargetMachine.h
Comment from lines 27-28:
 / SPUTargetMachine
 /

Lines 27-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/CellSPU/SPU.h
../llvm-3.2.src/lib/Target/CellSPU/SPUMachineFunction.h
../llvm-3.2.src/lib/Target/CellSPU/SPUInstrInfo.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUSubtarget.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUMachineFunction.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUFrameLowering.cpp
../llvm-3.2.src/lib/Target/CellSPU/SPUFrameLowering.h
../llvm-3.2.src/lib/Target/CellSPU/SPUHazardRecognizers.h
../llvm-3.2.src/lib/Target/CellSPU/SPUSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/CellSPU/SPUSubtarget.h
../llvm-3.2.src/lib/Target/CellSPU/SPUISelLowering.cpp
Comment from lines 924-924:
  16 - sizeof(Value)

Lines 924-924 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1447-1447:
  Now handle the return value(s)

Lines 1447-1447 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1738-1738:
  Magic constant that can be matched by IL, ILA, et. al.

Lines 1738-1738 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2529-2530:
  Take advantage of the fact that (truncate (sra arg, 32)) is efficiently
  selected to a NOP:

Lines 2529-2530 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2759-2759:
  reinterpret as a i128 (SHUFB requires it). This gets lowered away.

Lines 2759-2759 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2933-2934:
  (add (SPUindirect <arg>, <arg>), 0) ->
  (SPUindirect <arg>, <arg>)


Lines 2933-2934 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2946-2947:
  (add (SPUindirect <arg>, <const>), <const>) ->
  (SPUindirect <arg>, <const + const>)

Lines 2946-2947 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2994-2995:
  (SPUindirect (SPUaform <addr>, 0), 0) ->
  (SPUaform <addr>, 0)


Lines 2994-2995 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3008-3009:
  (SPUindirect (add <arg>, <arg>), 0) ->
  (SPUindirect <arg>, <arg>)

Lines 3008-3009 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/CellSPU/SPUInstrInfo.h
../llvm-3.2.src/lib/Target/X86/X86Relocations.h
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86BaseInfo.h
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MCAsmInfo.h
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MCTargetDesc.cpp
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp
Comment from lines 563-563:
  Classify VEX_B, VEX_4V, VEX_R, VEX_X

Lines 563-563 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 578-582:
  MRMDestMem instructions forms:
   MemAddr, src1(ModR/M)
   MemAddr, src1(VEX_4V), src2(ModR/M)
   MemAddr, src1(ModR/M), imm8
 

Lines 578-582 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1207-1208:
  FIXME: Verify.
 !Desc.isVariadic() &&
Lines 1207-1208 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MachObjectWriter.cpp
Comment from lines 91-91:
  FIXME: Remove these!!!

Lines 91-91 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 503-503:
  Get the symbol data, if any.

Lines 503-503 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 554-554:
  The index is the section ordinal (1-based).

Lines 554-554 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp
Comment from lines 333-333:
  *** 


Lines 333-333 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86WinCOFFObjectWriter.cpp
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86FixupKinds.h
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86MCAsmInfo.cpp
../llvm-3.2.src/lib/Target/X86/MCTargetDesc/X86ELFObjectWriter.cpp
../llvm-3.2.src/lib/Target/X86/X86Subtarget.cpp
../llvm-3.2.src/lib/Target/X86/X86.h
../llvm-3.2.src/lib/Target/X86/X86ISelDAGToDAG.cpp
Comment from lines 1951-1951:
  Operands of Gather: VSrc, Base, VIdx, VMask, Scale

Lines 1951-1951 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1971-1974:
  Node has 2 outputs: VDst and MVT::Other.
  ResNode has 3 outputs: VDst, VMask_wb, and MVT::Other.
  We replace VDst of Node with VDst of ResNode, and Other of Node with Other
  of ResNode.

Lines 1971-1974 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2472-2472:
  Copy the division (low) result, if it is needed.

Lines 2472-2472 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86TargetObjectFile.h
../llvm-3.2.src/lib/Target/X86/Disassembler/X86DisassemblerDecoderCommon.h
../llvm-3.2.src/lib/Target/X86/Disassembler/X86Disassembler.h
../llvm-3.2.src/lib/Target/X86/Disassembler/X86DisassemblerDecoder.h
../llvm-3.2.src/lib/Target/X86/Disassembler/X86Disassembler.cpp
Comment from lines 566-566:
  Section 2.2.1.6

Lines 566-566 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86COFFMachineModuleInfo.cpp
../llvm-3.2.src/lib/Target/X86/X86AsmPrinter.cpp
Comment from lines 543-543:
  hlt; hlt; hlt; hlt; hlt     hlt = 0xf4.

Lines 543-543 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86FrameLowering.cpp
Comment from lines 1348-1348:
  Spill the BasePtr if it's used.

Lines 1348-1348 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1454-1454:
  See pthread_machdep.h. Steal TLS slot 90.

Lines 1454-1454 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86TargetMachine.cpp
../llvm-3.2.src/lib/Target/X86/X86MachineFunctionInfo.h
../llvm-3.2.src/lib/Target/X86/X86FrameLowering.h
../llvm-3.2.src/lib/Target/X86/TargetInfo/X86TargetInfo.cpp
../llvm-3.2.src/lib/Target/X86/X86JITInfo.h
../llvm-3.2.src/lib/Target/X86/X86ISelLowering.h
../llvm-3.2.src/lib/Target/X86/AsmParser/X86AsmLexer.cpp
../llvm-3.2.src/lib/Target/X86/AsmParser/X86AsmParser.cpp
Comment from lines 101-101:
 / }


Lines 101-101 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 591-593:
  Eat 'st'

  Check to see if we have '(4)' after %st.

Lines 591-593 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 692-692:
  Handle '[' 'symbol' ']'

Lines 692-692 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 714-714:
  Handle '[' Scale*IndexReg ']'

Lines 714-714 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 872-872:
  Drop the '.'.

Lines 872-872 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1223-1223:
  FIXME: Hack to recognize cmp<comparison code>{ss,sd,ps,pd}.

Lines 1223-1223 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1371-1371:
  Transform "ins[bwl] %dx, %es:(%edi)" into "ins[bwl]"

Lines 1371-1371 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86JITInfo.cpp
Comment from lines 512-512:
  Call with 32 bit pc-rel destination...


Lines 512-512 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86RegisterInfo.cpp
Comment from lines 352-352:
  R8, R9, ...

Lines 352-352 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 360-360:
  XMM8, XMM9, ...

Lines 360-360 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86InstComments.cpp
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86ATTInstPrinter.h
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86ATTInstPrinter.cpp
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86IntelInstPrinter.h
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86IntelInstPrinter.cpp
../llvm-3.2.src/lib/Target/X86/InstPrinter/X86InstComments.h
../llvm-3.2.src/lib/Target/X86/X86AsmPrinter.h
../llvm-3.2.src/lib/Target/X86/X86TargetMachine.h
../llvm-3.2.src/lib/Target/X86/X86FloatingPoint.cpp
Comment from lines 449-450:
  fstp ST(0)
  ST(0) = fsqrt(ST(0))

Lines 449-450 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 834-836:
  Update state

  Check to see if there is a popping version of this instruction...

Lines 834-836 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1326-1326:
  ST = COPY FP. Set up a pending ST register.

Lines 1326-1326 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1673-1676:
  If RET has an FP register use operand, pass the first one in ST(0) and
  the second one in ST(1).

  Find the register operands.

Lines 1673-1676 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86RegisterInfo.h
../llvm-3.2.src/lib/Target/X86/X86VZeroUpper.cpp
../llvm-3.2.src/lib/Target/X86/X86InstrBuilder.h
../llvm-3.2.src/lib/Target/X86/X86TargetObjectFile.cpp
../llvm-3.2.src/lib/Target/X86/X86InstrInfo.h
../llvm-3.2.src/lib/Target/X86/X86COFFMachineModuleInfo.h
../llvm-3.2.src/lib/Target/X86/X86Subtarget.h
../llvm-3.2.src/lib/Target/X86/X86SelectionDAGInfo.h
../llvm-3.2.src/lib/Target/X86/X86ISelLowering.cpp
Comment from lines 2091-2091:
  Now store the XMM (fp + vector) parameter registers.

Lines 2091-2091 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3116-3116:
  X > -1   -> X == 0, jump !sign.

Lines 3116-3116 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3121-3121:
  X < 0   -> X == 0, jump on sign.

Lines 3121-3121 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3125-3125:
  X < 1   -> X <= 0

Lines 3125-3125 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3963-3965:
 / isVEXTRACTF128Index - Return true if the specified
 / EXTRACT_SUBVECTOR operand specifies a vector extract that is
 / suitable for input to VEXTRACTF128.

Lines 3963-3965 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4228-4228:
  Check for any non-constant elements.

Lines 4228-4228 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6634-6634:
  (bitcast (sclr2vec (ext_vec_elt x))) -> (bitcast x)

Lines 6634-6634 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7774-7775:
  And our return value (tls address) is in the standard call return value
  location.

Lines 7774-7775 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8483-8483:
  And if it is bigger, shrink it first.

Lines 8483-8483 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8548-8548:
  Lower ISD::FGETSIGN to (AND (X86ISD::FGETSIGNx86 ...) 1).

Lines 8548-8548 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10533-10533:
  Return { result, isValid, chain }.

Lines 10533-10533 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10865-10865:
  If src is zero (i.e. bsr sets ZF), returns NumBits.

Lines 10865-10865 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10895-10895:
  Issue a bsr (scan bits in reverse).

Lines 10895-10895 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10913-10913:
  Issue a bsf (scan bits forward) which also sets EFLAGS.

Lines 10913-10913 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10917-10917:
  If src is zero (i.e. bsf sets ZF), returns NumBits.

Lines 10917-10917 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 10983-10992:
   Ahi = psrlqi(a, 32);
   Bhi = psrlqi(b, 32);
 
   AloBlo = pmuludq(a, b);
   AloBhi = pmuludq(a, Bhi);
   AhiBlo = pmuludq(Ahi, b);

   AloBhi = psllqi(AloBhi, 32);
   AhiBlo = psllqi(AhiBlo, 32);
   return AloBlo + AloBhi + AhiBlo;


Lines 10983-10992 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 11407-11407:
  def : Pat<(membarrier (i8 0), (i8 0), (i8 0), (i8 1), (i8 1)), (SFENCE)>;

Lines 11407-11407 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 14750-14752:
  Efficiently invertible.
  setcc -> invertible.
  xor(X, C) -> invertible.

Lines 14750-14752 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 14773-14773:
  Optimize Cond ? cst+1 : cst -> zext(setcc(C)+cst.

Lines 14773-14773 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 14796-14802:
  result = add base, cond
  result = lea base(    , cond*2)
  result = lea base(cond, cond*2)
  result = lea base(    , cond*4)
  result = lea base(cond, cond*4)
  result = lea base(    , cond*8)
  result = lea base(cond, cond*8)

Lines 14796-14802 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 15082-15088:
  result = add base, cond
  result = lea base(    , cond*2)
  result = lea base(cond, cond*2)
  result = lea base(    , cond*4)
  result = lea base(cond, cond*4)
  result = lea base(    , cond*8)
  result = lea base(cond, cond*8)

Lines 15082-15088 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 15565-15565:
 ISD::isBuildVectorAllOnes(N0.getOperand(1).getNode()))

Lines 15565-15565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 15571-15571:
 ISD::isBuildVectorAllOnes(N1.getOperand(1).getNode()))

Lines 15571-15571 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 16341-16342:
  FAND(0.0, x) -> 0.0
  FAND(x, 0.0) -> 0.0

Lines 16341-16342 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 16482-16485:
  (i32 zext (and (i8  x86isd::setcc_carry), 1)) ->
            (and (i32 x86isd::setcc_carry), 1)
  This eliminates the zext. This transformation is necessary because
  ISD::SETCC is always legalized to i8.

Lines 16482-16485 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 16653-16653:
  SINT_TO_FP(v4i8) -> SINT_TO_FP(SEXT(v4i8 to v4i32))

Lines 16653-16653 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 16797-16797:
  (vzext (bitcast (vzext (x)) -> (vzext x)

Lines 16797-16797 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86MCInstLower.cpp
../llvm-3.2.src/lib/Target/X86/X86SelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/X86/X86MachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/X86/X86FastISel.cpp
Comment from lines 565-565:
  Ok, back to normal mode.

Lines 565-565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86InstrInfo.cpp
Comment from lines 2767-2770:
  SrcReg(VR128) -> DestReg(GR64)
  SrcReg(VR64)  -> DestReg(GR64)
  SrcReg(GR64)  -> DestReg(VR128)
  SrcReg(GR64)  -> DestReg(VR64)


Lines 2767-2770 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3506-3507:
  MachineInstr::addOperand() will insert explicit operands before any
  implicit operands.

Lines 3506-3507 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/Utils/X86ShuffleDecode.h
../llvm-3.2.src/lib/Target/X86/Utils/X86ShuffleDecode.cpp
Comment from lines 45-45:
  <3,1> or <6,7,2,3>

Lines 45-45 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/X86/X86CodeEmitter.cpp
Comment from lines 421-421:
  = true 
Lines 421-421 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 933-933:
  Classify VEX_B, VEX_4V, VEX_R, VEX_X

Lines 933-933 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 959-963:
  MRMDestMem instructions forms:
   MemAddr, src1(ModR/M)
   MemAddr, src1(VEX_4V), src2(ModR/M)
   MemAddr, src1(ModR/M), imm8
 

Lines 959-963 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 979-987:
  MRMSrcMem instructions forms:
   src1(ModR/M), MemAddr
   src1(ModR/M), src2(VEX_4V), MemAddr
   src1(ModR/M), MemAddr, imm8
   src1(ModR/M), MemAddr, src2(VEX_I8IMM)
 
   FMA4:
   dst(ModR/M.reg), src1(VEX_4V), src2(ModR/M), src3(VEX_I8IMM)
   dst(ModR/M.reg), src1(VEX_4V), src2(VEX_I8IMM), src3(ModR/M),

Lines 979-987 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Sparc/FPMover.cpp
Comment from lines 31-33:
 / Target machine description which we query for reg. names, data
 / layout, etc.
 /

Lines 31-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Sparc/SparcISelLowering.h
../llvm-3.2.src/lib/Target/Sparc/Sparc.h
Comment from lines 30-30:
  end namespace llvm;


Lines 30-30 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 37-52:
 ICC_A   =  8   ,  // Always
 ICC_N   =  0   ,  // Never
  Not Equal
  Equal
  Greater
  Less or Equal
  Greater or Equal
  Less
  Greater Unsigned
  Less or Equal Unsigned
  Carry Clear/Great or Equal Unsigned
  Carry Set/Less Unsigned
  Positive
  Negative
  Overflow Clear
  Overflow Set

Lines 37-52 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 54-69:
 FCC_A   =  8+16,  // Always
 FCC_N   =  0+16,  // Never
  Unordered
  Greater
  Unordered or Greater
  Less
  Unordered or Less
  Less or Greater
  Not Equal
  Equal
  Unordered or Equal
  Greater or Equal
  Unordered or Greater or Equal
  Less or Equal
  Unordered or Less or Equal
  Ordered

Lines 54-69 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Sparc/MCTargetDesc/SparcMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/MCTargetDesc/SparcMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/Sparc/MCTargetDesc/SparcMCAsmInfo.h
../llvm-3.2.src/lib/Target/Sparc/MCTargetDesc/SparcMCTargetDesc.h
../llvm-3.2.src/lib/Target/Sparc/SparcMachineFunctionInfo.h
../llvm-3.2.src/lib/Target/Sparc/SparcSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/Sparc/SparcFrameLowering.h
../llvm-3.2.src/lib/Target/Sparc/TargetInfo/SparcTargetInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcAsmPrinter.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcTargetMachine.h
../llvm-3.2.src/lib/Target/Sparc/SparcInstrInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcISelDAGToDAG.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcInstrInfo.h
../llvm-3.2.src/lib/Target/Sparc/SparcISelLowering.cpp
Comment from lines 552-552:
  Remap I0->I7 -> O0->O7.

Lines 552-552 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Sparc/SparcTargetMachine.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcRegisterInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcSubtarget.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcSubtarget.h
../llvm-3.2.src/lib/Target/Sparc/SparcMachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcFrameLowering.cpp
../llvm-3.2.src/lib/Target/Sparc/DelaySlotFiller.cpp
Comment from lines 37-39:
 / Target machine description which we query for reg. names, data
 / layout, etc.
 /

Lines 37-39 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 289-289:
  return true if the candidate is a delay filler.

Lines 289-289 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Sparc/SparcSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/Sparc/SparcRegisterInfo.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCAsmInfo.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp
Comment from lines 940-946:
  {16-13} = Rn
  {12}    = isAdd
  {11-0}  = shifter
   {3-0}  = Rm
   {4}    = 0
   {6-5}  = type
   {11-7} = imm

Lines 940-946 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1357-1362:
  VLDM/VSTM:
    {12-8} = Vd
    {7-0}  = Number of registers
 
  LDM/STM:
    {15-0}  = Bitfield of GPRs.

Lines 1357-1362 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCExpr.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMCExpr.cpp
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMAsmBackend.cpp
Comment from lines 282-285:
  inst{19-16} = Hi4;
  inst{26} = i;
  inst{14-12} = Mid3;
  inst{7-0} = Lo8;

Lines 282-285 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 322-322:
  bits {24-21}. Default to add: 0b0100

Lines 322-322 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h
Comment from lines 612-616:
  -126 to 127
  23 bits

  We can handle 4 bits of mantissa.
  mantissa = (16+UInt(e:f:g:h))/16.

Lines 612-616 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMFixupKinds.h
../llvm-3.2.src/lib/Target/ARM/MCTargetDesc/ARMMachObjectWriter.cpp
Comment from lines 382-382:
  Get the symbol data, if any.

Lines 382-382 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMInstrInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMBuildAttrs.h
../llvm-3.2.src/lib/Target/ARM/ARMBaseRegisterInfo.cpp
Comment from lines 636-638:
  If we have alloca, convert as follows:
  ADJCALLSTACKDOWN -> sub, sp, sp, amount
  ADJCALLSTACKUP   -> add, sp, sp, amount

Lines 636-638 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMBaseRegisterInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMJITInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMAsmPrinter.cpp
Comment from lines 169-169:
  String + \0

Lines 169-169 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 184-184:
  '\0'


Lines 184-184 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 201-201:
  '\0'

Lines 201-201 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 646-646:
  Switch with ".non_lazy_symbol_pointer" directive.

Lines 646-646 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMExpandPseudoInsts.cpp
Comment from lines 988-988:
  Add the source operands (D subregs).

Lines 988-988 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMMCInstLower.cpp
../llvm-3.2.src/lib/Target/ARM/Disassembler/ARMDisassembler.cpp
Comment from lines 423-423:
  Encoded as a small-endian 32-bit word in the stream.

Lines 423-423 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMConstantPoolValue.cpp
../llvm-3.2.src/lib/Target/ARM/Thumb2RegisterInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMConstantIslandPass.cpp
Comment from lines 327-327:
 / verify - check BBOffsets, BBSizes, alignment of islands

Lines 327-327 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1150-1150:
  Adjust the refcount of the clone...

Lines 1150-1150 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMRelocations.h
../llvm-3.2.src/lib/Target/ARM/ARMCallingConv.h
../llvm-3.2.src/lib/Target/ARM/ARMTargetMachine.cpp
../llvm-3.2.src/lib/Target/ARM/ARMHazardRecognizer.cpp
../llvm-3.2.src/lib/Target/ARM/ARMFrameLowering.cpp
Comment from lines 860-862:
    sub r4, sp, #numregs * 8
    bic r4, r4, #align - 1
    mov sp, r4

Lines 860-862 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 946-946:
  16-byte aligned vld1.64 with 2 d-regs.

Lines 946-946 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMISelLowering.cpp
Comment from lines 2885-2889:
  Convert:
 
    (select (cmov 1, 0, cond), t, f) -> (cmov t, f, cond)
    (select (cmov 0, 1, cond), t, f) -> (cmov f, t, cond)
 

Lines 2885-2889 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4845-4847:
 / isExtendedBUILD_VECTOR - Check if N is a constant BUILD_VECTOR where each
 / element has been zero/sign-extended, depending on the isSigned parameter,
 / from an integer type half its size.

Lines 4845-4847 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5062-5063:
  Get reciprocal estimate.
  float4 recip = vrecpeq_f32(yf);

Lines 5062-5063 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5560-5562:
   thisMBB:
    ...
    fallthrough --> loopMBB

Lines 5560-5562 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5691-5691:
  Sign extend the value, if necessary.

Lines 5691-5691 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 6575-6578:
  Generate the loop body:
    varPhi = PHI(varLoop, varEnd)
    srcPhi = PHI(srcLoop, src)
    destPhi = PHI(destLoop, dst)

Lines 6575-6578 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7934-7934:
  vmovrrd(vmovdrr x, y) -> x,y

Lines 7934-7934 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7939-7939:
  vmovrrd(load f64) -> (load i32), (load i32)

Lines 7939-7939 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7976-7976:
  N=vmovrrd(X); vmovdrr(N:0, N:1) -> bit_convert(X)

Lines 7976-7976 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 8648-8648:
 / PerformIntrinsicCombine - ARM-specific DAG combining for intrinsics.

Lines 8648-8648 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9178-9178:
  Scale == 1;

Lines 9178-9178 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9181-9181:
  Scale == 2;

Lines 9181-9181 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 9185-9185:
  Scale == 4;

Lines 9185-9185 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/TargetInfo/ARMTargetInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMFastISel.cpp
Comment from lines 733-733:
  TODO: unsigned ARMFastISel::TargetMaterializeFloatZero(const ConstantFP *CF);


Lines 733-733 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/Thumb2ITBlockPass.cpp
../llvm-3.2.src/lib/Target/ARM/ARMBaseInstrInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMSubtarget.cpp
../llvm-3.2.src/lib/Target/ARM/ARMLoadStoreOptimizer.cpp
Comment from lines 1647-1647:
  Sort by offset (in reverse order).

Lines 1647-1647 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMFrameLowering.h
../llvm-3.2.src/lib/Target/ARM/Thumb1FrameLowering.cpp
../llvm-3.2.src/lib/Target/ARM/AsmParser/ARMAsmParser.cpp
Comment from lines 149-149:
 / }


Lines 149-149 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2447-2447:
 / }


Lines 2447-2447 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2497-2497:
  If no match, return failure.

Lines 2497-2497 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2566-2568:
  Range check the immediate.
  lsl, ror: 0 <= imm <= 31
  lsr, asr: 0 <= imm <= 32

Lines 2566-2568 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2576-2577:
  shift by zero is a nop. Always send it through as lsl.
  ('as' compatibility)

Lines 2576-2577 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2854-2854:
  Eat '{' token.

Lines 2854-2854 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2931-2931:
  The register must be in the same register class as the first.

Lines 2931-2931 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3007-3007:
  Eat the ']'.

Lines 3007-3007 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3236-3236:
  Eat '}' token.


Lines 3236-3236 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3716-3716:
  The LSB must be in the range [0,31]

Lines 3716-3716 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3748-3748:
  The LSB must be in the range [1,32-lsb]

Lines 3748-3748 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4428-4430:
  Range check the immediate.
  lsl, ror: 0 <= imm <= 31
  lsr, asr: 0 <= imm <= 32

Lines 4428-4430 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5050-5050:
  Add the carry setting operand, if necessary.

Lines 5050-5050 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5057-5057:
  Add the predication code operand, if necessary.

Lines 5057-5057 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 5065-5065:
  Add the processor imod operand, if necessary.

Lines 5065-5065 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7616-7617:
 / parseDirectiveThumb
 /  ::= .thumb

Lines 7616-7617 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7629-7630:
 / parseDirectiveARM
 /  ::= .arm

Lines 7629-7630 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7683-7684:
 / parseDirectiveSyntax
 /  ::= .syntax unified | divided

Lines 7683-7684 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7701-7702:
  TODO tell the MC streamer the mode
  getParser().getStreamer().Emit???();

Lines 7701-7702 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 7706-7707:
 / parseDirectiveCode
 /  ::= .code 16 | 32

Lines 7706-7707 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/AsmParser/ARMAsmLexer.cpp
../llvm-3.2.src/lib/Target/ARM/ARMISelDAGToDAG.cpp
Comment from lines 582-582:
 -----


Lines 582-582 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1201-1201:
  Let t2LDRi8 handle (R - imm8).

Lines 1201-1201 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2293-2295:
  Pattern: (ARMcmov:i32 GPR:i32:$false, so_reg:i32:$true, (imm:i32):$cc)
  Emits: (MOVCCs:i32 GPR:i32:$false, so_reg:i32:$true, (imm:i32):$cc)
  Pattern complexity = 18  cost = 1  size = 0

Lines 2293-2295 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2339-2347:
  Pattern: (ARMcmov:i32 GPR:i32:$false, GPR:i32:$true, (imm:i32):$cc)
  Emits: (MOVCCr:i32 GPR:i32:$false, GPR:i32:$true, (imm:i32):$cc)
  Pattern complexity = 6  cost = 1  size = 0
 
  Pattern: (ARMcmov:i32 GPR:i32:$false, GPR:i32:$true, (imm:i32):$cc)
  Emits: (tMOVCCr:i32 GPR:i32:$false, GPR:i32:$true, (imm:i32):$cc)
  Pattern complexity = 6  cost = 11  size = 0
 
  Also VMOVScc and VMOVDcc.

Lines 2339-2347 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2687-2697:
  Pattern: (ARMbrcond:void (bb:Other):$dst, (imm:i32):$cc)
  Emits: (Bcc:void (bb:Other):$dst, (imm:i32):$cc)
  Pattern complexity = 6  cost = 1  size = 0

  Pattern: (ARMbrcond:void (bb:Other):$dst, (imm:i32):$cc)
  Emits: (tBcc:void (bb:Other):$dst, (imm:i32):$cc)
  Pattern complexity = 6  cost = 1  size = 0

  Pattern: (ARMbrcond:void (bb:Other):$dst, (imm:i32):$cc)
  Emits: (t2Bcc:void (bb:Other):$dst, (imm:i32):$cc)
  Pattern complexity = 6  cost = 1  size = 0


Lines 2687-2697 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMTargetObjectFile.cpp
../llvm-3.2.src/lib/Target/ARM/InstPrinter/ARMInstPrinter.h
../llvm-3.2.src/lib/Target/ARM/InstPrinter/ARMInstPrinter.cpp
../llvm-3.2.src/lib/Target/ARM/Thumb2SizeReduction.cpp
Comment from lines 67-68:
 FIXME: Disable CMN, as CCodes are backwards from compare expectations
 { ARM::t2CMNrr, ARM::tCMN,  0,             0,   0,    1,   0,  2,0, 0,0 },

Lines 67-68 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMConstantPoolValue.h
../llvm-3.2.src/lib/Target/ARM/ARMBaseInstrInfo.cpp
Comment from lines 1689-1689:
  Copy all the DefMI operands, excluding its (null) predicate.

Lines 1689-1689 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2786-2786:
  (regno / 2) + (regno % 2) + 1

Lines 2786-2786 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2861-2861:
  (regno / 2) + (regno % 2) + 1

Lines 2861-2861 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4095-4095:
  If MI defines an S-reg, find the corresponding D super-register.

Lines 4095-4095 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMRegisterInfo.h
../llvm-3.2.src/lib/Target/ARM/Thumb2InstrInfo.cpp
Comment from lines 460-460:
  Add cc_out operand if the original instruction did not have one.

Lines 460-460 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMRegisterInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMTargetObjectFile.h
../llvm-3.2.src/lib/Target/ARM/Thumb1InstrInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMMachineFunctionInfo.h
../llvm-3.2.src/lib/Target/ARM/ARM.h
../llvm-3.2.src/lib/Target/ARM/ARMHazardRecognizer.h
../llvm-3.2.src/lib/Target/ARM/ARMSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/ARM/MLxExpansionPass.cpp
../llvm-3.2.src/lib/Target/ARM/Thumb1RegisterInfo.cpp
Comment from lines 236-236:
  If both are low registers, emit DestReg = add BaseReg, max(Imm, 7)

Lines 236-236 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 277-279:
  r4 = add sp, imm
  r4 = add r4, imm
  ...

Lines 277-279 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 313-315:
  If we have alloca, convert as follows:
  ADJCALLSTACKDOWN -> sub, sp, sp, amount
  ADJCALLSTACKUP   -> add, sp, sp, amount

Lines 313-315 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 326-326:
  Replace the pseudo instruction with a new instruction...

Lines 326-326 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 339-340:
 / emitThumbConstant - Emit a series of instructions to materialize a
 / constant.

Lines 339-340 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 453-455:
  Translate r0 = add sp, imm to
  r0 = add sp, 255*4
  r0 = add r0, (imm - 255*4)

Lines 453-455 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 470-472:
  Translate r0 = add sp, -imm to
  r0 = -imm (this is then translated into a series of instructons)
  r0 = add r0, sp

Lines 470-472 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 498-498:
  Replace the FrameIndex with the frame register (e.g., sp).

Lines 498-498 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/Thumb1RegisterInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMCodeEmitter.cpp
Comment from lines 1044-1044:
  Instr{20-16} = msb, Instr{11-7} = lsb

Lines 1044-1044 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1056-1056:
  Instr{20-16} = widthm1, Instr{11-7} = lsb

Lines 1056-1056 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/ARMAsmPrinter.h
../llvm-3.2.src/lib/Target/ARM/Thumb1FrameLowering.h
../llvm-3.2.src/lib/Target/ARM/Thumb1InstrInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMTargetMachine.h
../llvm-3.2.src/lib/Target/ARM/ARMPerfectShuffle.h
../llvm-3.2.src/lib/Target/ARM/ARMSubtarget.h
../llvm-3.2.src/lib/Target/ARM/ARMISelLowering.h
../llvm-3.2.src/lib/Target/ARM/Thumb2RegisterInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMJITInfo.cpp
Comment from lines 183-186:
  ldr ip, [pc, #+4]
  L_func$scv: add ip, pc, ip
  ldr pc, [ip]
  func - (L_func$scv+8)

Lines 183-186 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/ARM/Thumb2InstrInfo.h
../llvm-3.2.src/lib/Target/ARM/ARMMachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/ARM/ARMInstrInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.cpp
../llvm-3.2.src/lib/Target/MSP430/MCTargetDesc/MSP430MCAsmInfo.h
../llvm-3.2.src/lib/Target/MSP430/MCTargetDesc/MSP430MCTargetDesc.h
../llvm-3.2.src/lib/Target/MSP430/MSP430Subtarget.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430InstrInfo.h
../llvm-3.2.src/lib/Target/MSP430/MSP430InstrInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430MCInstLower.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430MCInstLower.h
../llvm-3.2.src/lib/Target/MSP430/MSP430FrameLowering.h
../llvm-3.2.src/lib/Target/MSP430/TargetInfo/MSP430TargetInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430MachineFunctionInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430BranchSelector.cpp
../llvm-3.2.src/lib/Target/MSP430/InstPrinter/MSP430InstPrinter.cpp
../llvm-3.2.src/lib/Target/MSP430/InstPrinter/MSP430InstPrinter.h
../llvm-3.2.src/lib/Target/MSP430/MSP430SelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430ISelLowering.cpp
Comment from lines 619-620:
  Emit a special goodness here:
  srl A, 1 => clrc; rrc A

Lines 619-620 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MSP430/MSP430TargetMachine.h
../llvm-3.2.src/lib/Target/MSP430/MSP430Subtarget.h
../llvm-3.2.src/lib/Target/MSP430/MSP430MachineFunctionInfo.h
../llvm-3.2.src/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp
Comment from lines 149-149:
 AM.SymbolFlags = G->getTargetFlags();

Lines 149-149 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 154-154:
 AM.SymbolFlags = CP->getTargetFlags();

Lines 154-154 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 157-157:
 AM.SymbolFlags = S->getTargetFlags();

Lines 157-157 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 160-160:
 AM.SymbolFlags = J->getTargetFlags();

Lines 160-160 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 163-163:
 AM.SymbolFlags = cast<BlockAddressSDNode>(N0)->getTargetFlags();

Lines 163-163 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 231-231:
  Check to see if the LHS & C is zero.

Lines 231-231 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MSP430/MSP430RegisterInfo.h
../llvm-3.2.src/lib/Target/MSP430/MSP430RegisterInfo.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430.h
../llvm-3.2.src/lib/Target/MSP430/MSP430SelectionDAGInfo.h
../llvm-3.2.src/lib/Target/MSP430/MSP430TargetMachine.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430AsmPrinter.cpp
../llvm-3.2.src/lib/Target/MSP430/MSP430FrameLowering.cpp
Comment from lines 64-64:
  Save FPW into the appropriate stack slot...

Lines 64-64 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MSP430/MSP430ISelLowering.h
../llvm-3.2.src/lib/Target/Target.cpp
../llvm-3.2.src/lib/Target/Mangler.cpp
../llvm-3.2.src/lib/Target/Hexagon/Hexagon.h
../llvm-3.2.src/lib/Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp
Comment from lines 57-57:
  VirtualFP = (R30 + #0).

Lines 57-57 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h
../llvm-3.2.src/lib/Target/Hexagon/MCTargetDesc/HexagonMCAsmInfo.h
Comment from lines 27-27:
  namespace llvm


Lines 27-27 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonInstrInfo.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonAsmPrinter.cpp
Comment from lines 65-65:
  For basic block level alignment, use ".falign".

Lines 65-65 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 214-214:
 BundleMIs.push_back(&*MII);

Lines 214-214 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonMachineScheduler.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonRegisterInfo.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp
Comment from lines 2514-2514:
  return *some value* to avoid compiler warning

Lines 2514-2514 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonNewValueJump.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonMachineScheduler.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp
Comment from lines 827-831:
  Pattern: (select:i32 (setcc:i1 (sext_inreg:i32 IntRegs:i32:$src2,
  i16:Other),IntRegs:i32:$src1, SETLT:Other),IntRegs:i32:$src1,
  IntRegs:i32:$src2)
  Emits: (MAXh_rr:i32 IntRegs:i32:$src1, IntRegs:i32:$src2)
  Pattern complexity = 9  cost = 1  size = 0.

Lines 827-831 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 851-855:
  Pattern: (select:i32 (setcc:i1 (sext_inreg:i32 IntRegs:i32:$src2,
  i16:Other), IntRegs:i32:$src1, SETGT:Other), IntRegs:i32:$src1,
  IntRegs:i32:$src2)
  Emits: (MINh_rr:i32 IntRegs:i32:$src1, IntRegs:i32:$src2)
  Pattern complexity = 9  cost = 1  size = 0.

Lines 851-855 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1080-1080:
  Convert the zero_extend to Rs = Pd followed by COMBINE_rr(0,Rs).

Lines 1080-1080 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1229-1229:
  Identify nodes of the form: add(asr(...)).

Lines 1229-1229 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonSubtarget.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonFrameLowering.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonSubtarget.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonMCInst.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonRegisterInfo.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonMachineFunctionInfo.h
../llvm-3.2.src/lib/Target/Hexagon/TargetInfo/HexagonTargetInfo.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonHardwareLoops.cpp
Comment from lines 367-370:
 / isInductionOperation - return true if the operation is matches the
 / pattern that defines an induction variable:
 /    add iv, c
 /

Lines 367-370 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonAsmPrinter.h
Comment from lines 56-56:
     void printMachineInstruction(const MachineInstr *MI);

Lines 56-56 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonVarargsCallingConvention.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonInstrInfo.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonCallingConvLower.h
../llvm-3.2.src/lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.h
../llvm-3.2.src/lib/Target/Hexagon/InstPrinter/HexagonInstPrinter.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonCallingConvLower.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonTargetObjectFile.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonTargetMachine.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonExpandPredSpillCode.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonSplitTFRCondSets.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonTargetObjectFile.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonFrameLowering.cpp
Comment from lines 126-126:
  R31 = (R31 - #4)

Lines 126-126 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonTargetMachine.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonISelLowering.h
../llvm-3.2.src/lib/Target/Hexagon/HexagonMCInstLower.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonPeephole.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonCFGOptimizer.cpp
Comment from lines 108-136:
 
  (Case 1) Transform the code if the following condition occurs:
    BB1: if (p0) jump BB3
    ...falls-through to BB2 ...
    BB2: jump BB4
    ...next block in layout is BB3...
    BB3: ...
 
   Transform this to:
   BB1: if (!p0) jump BB4
   Remove BB2
   BB3: ...
 
  (Case 2) A variation occurs when BB3 contains a JMP to BB4:
    BB1: if (p0) jump BB3
    ...falls-through to BB2 ...
    BB2: jump BB4
    ...other basic blocks ...
    BB4:
    ...not a fall-thru
    BB3: ...
      jump BB4
 
  Transform this to:
    BB1: if (!p0) jump BB4
    Remove BB2
    BB3: ...
    BB4: ...
 

Lines 108-136 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/Hexagon/HexagonISelLowering.cpp
../llvm-3.2.src/lib/Target/Hexagon/HexagonRemoveSZExtArgs.cpp
../llvm-3.2.src/lib/Target/TargetIntrinsicInfo.cpp
../llvm-3.2.src/lib/Target/TargetTransformImpl.cpp
../llvm-3.2.src/lib/Target/TargetMachine.cpp
../llvm-3.2.src/lib/Target/TargetInstrInfo.cpp
../llvm-3.2.src/lib/Target/TargetSubtargetInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeTargetObjectFile.h
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeMCAsmInfo.h
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.cpp
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeELFObjectWriter.cpp
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeBaseInfo.h
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeMCTargetDesc.h
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeAsmBackend.cpp
../llvm-3.2.src/lib/Target/MBlaze/MCTargetDesc/MBlazeMCCodeEmitter.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeFrameLowering.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeMachineFunction.cpp
../llvm-3.2.src/lib/Target/MBlaze/Disassembler/MBlazeDisassembler.cpp
Comment from lines 26-27:
  #include "MBlazeGenDecoderTables.inc"
  #include "MBlazeGenRegisterNames.inc"

Lines 26-27 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MBlaze/Disassembler/MBlazeDisassembler.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeSelectionDAGInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeSelectionDAGInfo.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeTargetMachine.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlaze.h
Comment from lines 29-29:
  end namespace llvm;


Lines 29-29 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MBlaze/MBlazeFrameLowering.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeRelocations.h
../llvm-3.2.src/lib/Target/MBlaze/TargetInfo/MBlazeTargetInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeRegisterInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeIntrinsicInfo.h
../llvm-3.2.src/lib/Target/MBlaze/AsmParser/MBlazeAsmParser.cpp
Comment from lines 57-57:
 / }


Lines 57-57 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MBlaze/AsmParser/MBlazeAsmLexer.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeISelLowering.h
../llvm-3.2.src/lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.cpp
../llvm-3.2.src/lib/Target/MBlaze/InstPrinter/MBlazeInstPrinter.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeAsmPrinter.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeSubtarget.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeIntrinsicInfo.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeTargetObjectFile.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeRegisterInfo.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeInstrInfo.cpp
Comment from lines 98-98:
 .addFrameIndex(FI);

Lines 98-98 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 108-108:
 .addFrameIndex(FI);

Lines 108-108 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MBlaze/MBlazeInstrInfo.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeMCInstLower.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeTargetMachine.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeISelLowering.cpp
Comment from lines 805-808:
  MBlazeJmpLink = #chain, #target_address, #opt_in_flags...
              = Chain, Callee, Reg#1, Reg#2, ...
 
  Returns a chain & a flag for retval copy to use.

Lines 805-808 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 935-936:
  VA.isRegLoc()
  sanity check

Lines 935-936 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Target/MBlaze/MBlazeSubtarget.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeDelaySlotFiller.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeMachineFunction.h
../llvm-3.2.src/lib/Target/MBlaze/MBlazeMCInstLower.cpp
../llvm-3.2.src/lib/Target/MBlaze/MBlazeISelDAGToDAG.cpp
../llvm-3.2.src/lib/Target/TargetLibraryInfo.cpp
../llvm-3.2.src/lib/Support/Triple.cpp
../llvm-3.2.src/lib/Support/TimeValue.cpp
../llvm-3.2.src/lib/Support/TargetRegistry.cpp
../llvm-3.2.src/lib/Support/RWMutex.cpp
../llvm-3.2.src/lib/Support/raw_os_ostream.cpp
../llvm-3.2.src/lib/Support/StringMap.cpp
../llvm-3.2.src/lib/Support/APInt.cpp
Comment from lines 1403-1408:
  absolute value of nc
  initialize p
  initialize q1 = 2p/abs(nc)
  initialize r1 = rem(2p,abs(nc))
  initialize q2 = 2p/abs(d)
  initialize r2 = rem(2p,abs(d))

Lines 1403-1408 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1411-1413:
  update q1 = 2p/abs(nc)
  update r1 = rem(2p/abs(nc))
  must be unsigned comparison

Lines 1411-1413 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1449-1453:
  initialize p
  initialize q1 = 2p/nc
  initialize r1 = rem(2p,nc)
  initialize q2 = (2p-1)/d
  initialize r2 = rem((2p-1),d)

Lines 1449-1453 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1862-1862:
  X / Y ===> 0, iff X < Y

Lines 1862-1862 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1899-1899:
  X % Y ===> X, iff X < Y

Lines 1899-1899 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1902-1902:
  X % X == 0;

Lines 1902-1902 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2818-2818:
  Comparison (unsigned) of two bignums.  

Lines 2818-2818 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/FoldingSet.cpp
../llvm-3.2.src/lib/Support/Allocator.cpp
../llvm-3.2.src/lib/Support/YAMLParser.cpp
Comment from lines 1548-1548:
  TODO: Ensure version is 1.x.

Lines 1548-1548 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Debug.cpp
../llvm-3.2.src/lib/Support/DataExtractor.cpp
../llvm-3.2.src/lib/Support/IncludeFile.cpp
../llvm-3.2.src/lib/Support/GraphWriter.cpp
../llvm-3.2.src/lib/Support/Timer.cpp
../llvm-3.2.src/lib/Support/regex2.h
../llvm-3.2.src/lib/Support/SystemUtils.cpp
../llvm-3.2.src/lib/Support/Hashing.cpp
../llvm-3.2.src/lib/Support/Unix/Unix.h
../llvm-3.2.src/lib/Support/PrettyStackTrace.cpp
../llvm-3.2.src/lib/Support/Program.cpp
../llvm-3.2.src/lib/Support/Disassembler.cpp
../llvm-3.2.src/lib/Support/Statistic.cpp
Comment from lines 38-40:
 / -stats - Command line option to cause transformations to emit stats about
 / what they did.
 /

Lines 38-40 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Locale.cpp
../llvm-3.2.src/lib/Support/DynamicLibrary.cpp
Comment from lines 143-143:
 lt_ptr ptr = lt_dlsym(*I, symbolName);

Lines 143-143 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/StringPool.cpp
../llvm-3.2.src/lib/Support/MemoryBuffer.cpp
Comment from lines 128-128:
  TODO: Is sizeof(void*) enough?

Lines 128-128 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Threading.cpp
../llvm-3.2.src/lib/Support/Windows/Windows.h
Comment from lines 23-23:
  MinGW at it again.

Lines 23-23 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 49-50:
  = delete;
  = delete;

Lines 49-50 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Regex.cpp
../llvm-3.2.src/lib/Support/BranchProbability.cpp
../llvm-3.2.src/lib/Support/ThreadLocal.cpp
../llvm-3.2.src/lib/Support/regutils.h
../llvm-3.2.src/lib/Support/SmallPtrSet.cpp
../llvm-3.2.src/lib/Support/Twine.cpp
../llvm-3.2.src/lib/Support/SearchForAddressOfSpecialSymbol.cpp
Comment from lines 57-57:
  namespace llvm

Lines 57-57 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/StringRef.cpp
Comment from lines 54-54:
 / compare_numeric - Compare strings, handle embedded numbers.

Lines 54-54 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 391-391:
  Autosense radix if not specified.

Lines 391-391 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Memory.cpp
../llvm-3.2.src/lib/Support/Mutex.cpp
../llvm-3.2.src/lib/Support/IntrusiveRefCntPtr.cpp
../llvm-3.2.src/lib/Support/PluginLoader.cpp
../llvm-3.2.src/lib/Support/regcclass.h
../llvm-3.2.src/lib/Support/Path.cpp
../llvm-3.2.src/lib/Support/FormattedStream.cpp
../llvm-3.2.src/lib/Support/IntEqClasses.cpp
../llvm-3.2.src/lib/Support/DataStream.cpp
../llvm-3.2.src/lib/Support/StreamableMemoryObject.cpp
../llvm-3.2.src/lib/Support/ErrorHandling.cpp
../llvm-3.2.src/lib/Support/FileUtilities.cpp
Comment from lines 140-140:
  Nope, check the relative tolerance...

Lines 140-140 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/regcname.h
../llvm-3.2.src/lib/Support/APFloat.cpp
Comment from lines 28-29:
  Assumed in hexadecimal significand parsing, and conversion to
    hexadecimal strings.  

Lines 28-29 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2313-2313:
  Calculate pow(5, abs(exp)).  

Lines 2313-2313 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3204-3211:
  We want (in interchange format):
    sign = {Negative}
    exponent = 1..10
    significand = 1..1

  unbiased

  1-initialize all bits....

Lines 3204-3211 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3229-3234:
  We want (in interchange format):
    sign = {Negative}
    exponent = 0..0
    significand = 0..01

  unbiased

Lines 3229-3234 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3243-3246:
  We want (in interchange format):
    sign = {Negative}
    exponent = 0..0
    significand = 10..0


Lines 3243-3246 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/ConstantRange.cpp
Comment from lines 598-599:
  X smax Y is: range(smax(X_smin, Y_smin),
                     smax(X_smax, Y_smax))

Lines 598-599 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/IntervalMap.cpp
Comment from lines 59-59:
  end() may have created a height=0 path.

Lines 59-59 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/circular_raw_ostream.cpp
../llvm-3.2.src/lib/Support/DAGDeltaAlgorithm.cpp
../llvm-3.2.src/lib/Support/Process.cpp
../llvm-3.2.src/lib/Support/system_error.cpp
../llvm-3.2.src/lib/Support/SmallVector.cpp
../llvm-3.2.src/lib/Support/Errno.cpp
../llvm-3.2.src/lib/Support/SourceMgr.cpp
Comment from lines 141-145:
 / GetMessage - Return an SMDiagnostic at the specified location with the
 / specified string.
 /
 / @param Type - If non-null, the kind of message (e.g., "error") which is
 / prefixed to the message.

Lines 141-145 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/raw_ostream.cpp
Comment from lines 528-528:
  Use ::writev() where available.

Lines 528-528 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/APSInt.cpp
../llvm-3.2.src/lib/Support/LockFileManager.cpp
Comment from lines 214-214:
  Give up.

Lines 214-214 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/MemoryObject.cpp
../llvm-3.2.src/lib/Support/CrashRecoveryContext.cpp
../llvm-3.2.src/lib/Support/PathV2.cpp
Comment from lines 60-60:
  {/,\}

Lines 60-60 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 121-121:
  case "/"

Lines 121-121 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 422-422:
  Append '.' if needed.

Lines 422-422 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 733-733:
  Magic.size() > file_size(Path).

Lines 733-733 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/CommandLine.cpp
Comment from lines 198-198:
  LHS == Arg when no '=' is present.

Lines 198-198 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 487-487:
  Free all the strdup()ed strings.

Lines 487-487 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 587-590:
  This option does not "require" a value...  Make sure this option is
  not specified after an option that eats all extra arguments, or this
  one will never get any!
 

Lines 587-590 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 678-678:
  We start with a '-', must be an argument.

Lines 678-678 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 726-726:
  Check and handle positional arguments now...

Lines 726-726 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1001-1002:
  parser<unsigned long long> implementation
 

Lines 1001-1002 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1011-1012:
  parser<double>/parser<float> implementation
 

Lines 1011-1012 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1056-1056:
  Return the width of the option tag for printing...

Lines 1056-1056 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1250-1251:
  Print out the positional options.
  The cl::ConsumeAfter option, if it exists...

Lines 1250-1251 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/IsInf.cpp
Comment from lines 48-48:
  end namespace llvm;

Lines 48-48 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/Dwarf.cpp
../llvm-3.2.src/lib/Support/Host.cpp
../llvm-3.2.src/lib/Support/regex_impl.h
../llvm-3.2.src/lib/Support/DeltaAlgorithm.cpp
Comment from lines 52-52:
  Look for a passing subset.

Lines 52-52 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/ManagedStatic.cpp
../llvm-3.2.src/lib/Support/FileOutputBuffer.cpp
../llvm-3.2.src/lib/Support/Valgrind.cpp
../llvm-3.2.src/lib/Support/Signals.cpp
../llvm-3.2.src/lib/Support/IsNAN.cpp
Comment from lines 32-32:
  end namespace llvm;

Lines 32-32 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Support/BlockFrequency.cpp
../llvm-3.2.src/lib/Support/Atomic.cpp
../llvm-3.2.src/lib/Support/ToolOutputFile.cpp
../llvm-3.2.src/lib/Support/StringExtras.cpp
../llvm-3.2.src/lib/Analysis/MemoryDependenceAnalysis.cpp
../llvm-3.2.src/lib/Analysis/InstructionSimplify.cpp
Comment from lines 917-918:
  (X / Y) * Y
  Y * (X / Y)

Lines 917-918 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1242-1242:
  (X >> A) << A -> X

Lines 1242-1242 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1267-1267:
  (X << A) >> A -> X

Lines 1267-1267 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1347-1347:
  A & ~A  =  ~A & A  =  0

Lines 1347-1347 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1352-1352:
  (A | ?) & A = A

Lines 1352-1352 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1358-1358:
  A & (A | ?) = A

Lines 1358-1358 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1451-1451:
  (A & ?) | A = A

Lines 1451-1451 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1457-1457:
  A | (A & ?) = A

Lines 1457-1457 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2532-2532:
  select C, X, X -> X

Lines 2532-2532 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2617-2617:
  insertvalue x, (extractvalue y, n), n

Lines 2617-2617 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ProfileEstimatorPass.cpp
../llvm-3.2.src/lib/Analysis/LibCallAliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/Loads.cpp
../llvm-3.2.src/lib/Analysis/AliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/ProfileInfoLoader.cpp
Comment from lines 55-55:
  Read in the block of data...

Lines 55-55 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ConstantFolding.cpp
Comment from lines 648-649:
  If this is "gep i8* Ptr, (sub 0, V)", fold this as:
  "inttoptr (sub (ptrtoint Ptr), V)"

Lines 648-649 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/CFGPrinter.cpp
../llvm-3.2.src/lib/Analysis/PathProfileVerifier.cpp
../llvm-3.2.src/lib/Analysis/Trace.cpp
../llvm-3.2.src/lib/Analysis/PHITransAddr.cpp
../llvm-3.2.src/lib/Analysis/ModuleDebugInfoPrinter.cpp
../llvm-3.2.src/lib/Analysis/BranchProbabilityInfo.cpp
Comment from lines 214-217:
  p != 0   ->   isProb = true
  p == 0   ->   isProb = false
  p != q   ->   isProb = true
  p == q   ->   isProb = false;

Lines 214-217 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 356-357:
  f1 == f2 -> Unlikely
  f1 != f2 -> Likely

Lines 356-357 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/IPA/FindUsedTypes.cpp
../llvm-3.2.src/lib/Analysis/IPA/GlobalsModRef.cpp
../llvm-3.2.src/lib/Analysis/IPA/CallGraphSCCPass.cpp
../llvm-3.2.src/lib/Analysis/IPA/IPA.cpp
../llvm-3.2.src/lib/Analysis/IPA/CallGraph.cpp
../llvm-3.2.src/lib/Analysis/LazyValueInfo.cpp
Comment from lines 435-435:
  Shortcut if we have never seen this block.

Lines 435-435 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/Lint.cpp
../llvm-3.2.src/lib/Analysis/AliasAnalysisEvaluator.cpp
../llvm-3.2.src/lib/Analysis/RegionPass.cpp
../llvm-3.2.src/lib/Analysis/AliasSetTracker.cpp
Comment from lines 66-69:
  Forward across AS now...
  AS is now pointing to us...

  Merge the list of constituent pointers...

Lines 66-69 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 502-502:
  First, look up the PointerRec for this pointer.

Lines 502-502 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ProfileDataLoader.cpp
Comment from lines 60-60:
  Read in the block of data...

Lines 60-60 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 79-79:
  Read the number of entries...

Lines 79-79 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 102-102:
  Read the number of bytes ...

Lines 102-102 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/MemDepPrinter.cpp
../llvm-3.2.src/lib/Analysis/MemoryBuiltins.cpp
Comment from lines 54-61:
  new(unsigned int)
  new(unsigned int, nothrow)
  new(unsigned long)
  new(unsigned long, nothrow)
  new[](unsigned int)
  new[](unsigned int, nothrow)
  new[](unsigned long)
  new[](unsigned long, nothrow)

Lines 54-61 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/CostModel.cpp
../llvm-3.2.src/lib/Analysis/SparsePropagation.cpp
Comment from lines 222-222:
  Mark all feasible successors executable...

Lines 222-222 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/LoopPass.cpp
../llvm-3.2.src/lib/Analysis/ValueTracking.cpp
Comment from lines 479-479:
  (shl X, C1) & C2 == 0   iff   (X & C2 >>u C1) == 0

Lines 479-479 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 507-507:
  (ashr X, C1) & C2 == 0   iff  (-1 >> C1) & C2 == 0

Lines 507-507 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1256-1256:
  V == Base * (Mul0 * Op1), so return (Mul0 * Op1)

Lines 1256-1256 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1263-1263:
  V == Base * Op1, so return Op1

Lines 1263-1263 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1280-1280:
  V == Base * (Mul1 * Op0), so return (Mul1 * Op0)

Lines 1280-1280 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1699-1699:
  Skip over 'offset' bytes.

Lines 1699-1699 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1756-1756:
  Otherwise, see if we can read the string.

Lines 1756-1756 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/NoAliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/DomPrinter.cpp
../llvm-3.2.src/lib/Analysis/IntervalPartition.cpp
../llvm-3.2.src/lib/Analysis/PathNumbering.cpp
../llvm-3.2.src/lib/Analysis/DbgInfoPrinter.cpp
../llvm-3.2.src/lib/Analysis/LibCallSemantics.cpp
../llvm-3.2.src/lib/Analysis/ScalarEvolutionAliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/PostDominators.cpp
../llvm-3.2.src/lib/Analysis/AliasAnalysisCounter.cpp
../llvm-3.2.src/lib/Analysis/AliasDebugger.cpp
Comment from lines 93-95:
 ------------------------------------------------
  Implement the AliasAnalysis API
 

Lines 93-95 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ProfileInfo.cpp
Comment from lines 635-660:
   if (getExecutionCount(&(F->getEntryBlock())) == 0) {
     for (Function::const_iterator FI = F->begin(), FE = F->end();
          FI != FE; ++FI) {
       const BasicBlock* BB = &(*FI);
       {
         const_pred_iterator NBB = pred_begin(BB), End = pred_end(BB);
         if (NBB == End) {
           setEdgeWeight(getEdge(0,BB),0);
         }
         for(;NBB != End; ++NBB) {
           setEdgeWeight(getEdge(*NBB,BB),0);
         }
       }
       {
         succ_const_iterator NBB = succ_begin(BB), End = succ_end(BB);
         if (NBB == End) {
           setEdgeWeight(getEdge(0,BB),0);
         }
         for(;NBB != End; ++NBB) {
           setEdgeWeight(getEdge(*NBB,BB),0);
         }
       }
     }
     return;
   }
  The set of BasicBlocks that are still unvisited.

Lines 635-660 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/Interval.cpp
../llvm-3.2.src/lib/Analysis/ScalarEvolutionExpander.cpp
../llvm-3.2.src/lib/Analysis/CodeMetrics.cpp
../llvm-3.2.src/lib/Analysis/IVUsers.cpp
../llvm-3.2.src/lib/Analysis/ScalarEvolution.cpp
Comment from lines 1660-1660:
  Fold W + X + (X * Y * Z)  -->  W + (X * ((Y*Z)+1))

Lines 1660-1660 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1857-1858:
 / getMulExpr - Get a canonical multiply expression, or something simpler if
 / possible.

Lines 1857-1858 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2274-2274:
  {X,+,0}  -->  X

Lines 2274-2274 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/InstCount.cpp
../llvm-3.2.src/lib/Analysis/InlineCost.cpp
../llvm-3.2.src/lib/Analysis/PathProfileInfo.cpp
Comment from lines 212-216:
  ----------------------------------------------------------------------------
  PathProfileInfo implementation
 

  Pass identification

Lines 212-216 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 276-280:
  ----------------------------------------------------------------------------
  PathLoader implementation
 

  remove all generated paths

Lines 276-280 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/RegionPrinter.cpp
../llvm-3.2.src/lib/Analysis/LoopInfo.cpp
../llvm-3.2.src/lib/Analysis/DominanceFrontier.cpp
../llvm-3.2.src/lib/Analysis/RegionInfo.cpp
../llvm-3.2.src/lib/Analysis/ProfileDataLoaderPass.cpp
../llvm-3.2.src/lib/Analysis/Analysis.cpp
Comment from lines 17-17:
 / initializeAnalysis - Initialize all passes linked into the Analysis library.

Lines 17-17 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/DependenceAnalysis.cpp
Comment from lines 664-713:
  Examines the loop nesting of the Src and Dst
  instructions and establishes their shared loops. Sets the variables
  CommonLevels, SrcLevels, and MaxLevels.
  The source and destination instructions needn't be contained in the same
  loop. The routine establishNestingLevels finds the level of most deeply
  nested loop that contains them both, CommonLevels. An instruction that's
  not contained in a loop is at level = 0. MaxLevels is equal to the level
  of the source plus the level of the destination, minus CommonLevels.
  This lets us allocate vectors MaxLevels in length, with room for every
  distinct loop referenced in both the source and destination subscripts.
  The variable SrcLevels is the nesting depth of the source instruction.
  It's used to help calculate distinct loops referenced by the destination.
  Here's the map from loops to levels:
             0 - unused
             1 - outermost common loop
           ... - other common loops
  CommonLevels - innermost common loop
           ... - loops containing Src but not Dst
     SrcLevels - innermost loop containing Src but not Dst
           ... - loops containing Dst but not Src
     MaxLevels - innermost loops containing Dst but not Src
  Consider the follow code fragment:
    for (a = ...) {
      for (b = ...) {
        for (c = ...) {
          for (d = ...) {
            A[] = ...;
          }
        }
        for (e = ...) {
          for (f = ...) {
            for (g = ...) {
              ... = A[];
            }
          }
        }
      }
    }
  If we're looking at the possibility of a dependence between the store
  to A (the Src) and the load from A (the Dst), we'll note that they
  have 2 loops in common, so CommonLevels will equal 2 and the direction
  vector for Result will have 2 entries. SrcLevels = 4 and MaxLevels = 7.
  A map from loop names to loop numbers would look like
      a - 1
      b - 2 = CommonLevels
      c - 3
      d - 4 = SrcLevels
      e - 5
      f - 6
      g - 7 = MaxLevels

Lines 664-713 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1967-1967:
  make sure that c2 - c1 <= a1*N1 - a2*N2

Lines 1967-1967 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1988-1988:
  make sure that a1*N1 - a2*N2 <= c2 - c1

Lines 1988-1988 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2281-2282:
  Search for constant operand to participate in GCD;
  If none found; return false.

Lines 2281-2282 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2468-2468:
  Test the *, *, *, ... case.

Lines 2468-2468 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2552-2552:
  compute bounds for <, =, > at current level

Lines 2552-2552 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2806-2806:
  X^+ = max(X, 0)

Lines 2806-2806 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2818-2820:
  Walks through the subscript,
  collecting each coefficient, the associated loop bounds,
  and recording its positive and negative parts for later use.

Lines 2818-2820 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3048-3048:
     Src = SE->getAddExpr(Src, SE->getMulExpr(AP_K, SE->getConstant(CdivB)));

Lines 3048-3048 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3674-3674:
  SIV, RDIV, or MIV, so check for coupled group

Lines 3674-3674 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ProfileVerifierPass.cpp
Comment from lines 247-247:
  If there are none, check for (0,BB) edge.

Lines 247-247 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Analysis/ProfileInfoLoaderPass.cpp
../llvm-3.2.src/lib/Analysis/BasicAliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/BlockFrequencyInfo.cpp
../llvm-3.2.src/lib/Analysis/TypeBasedAliasAnalysis.cpp
../llvm-3.2.src/lib/Analysis/CaptureTracking.cpp
../llvm-3.2.src/lib/Analysis/ScalarEvolutionNormalization.cpp
../llvm-3.2.src/lib/Bitcode/Writer/BitcodeWriter.cpp
Comment from lines 484-486:
  GLOBALVAR: [type, isconst, initid,
              linkage, alignment, section, visibility, threadlocal,
              unnamed_addr]

Lines 484-486 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 510-511:
  FUNCTION:  [type, callingconv, isproto, linkage, paramattrs, alignment,
              section, visibility, gc, unnamed_addr]

Lines 510-511 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1725-1725:
  Make a copy of the in-memory use-list for sorting.

Lines 1725-1725 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1817-1817:
  Analyze the module, enumerating globals, functions, etc.

Lines 1817-1817 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Bitcode/Writer/BitcodeWriterPass.cpp
../llvm-3.2.src/lib/Bitcode/Writer/ValueEnumerator.cpp
Comment from lines 30-30:
 / ValueEnumerator - Enumerate module-level information.

Lines 30-30 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 279-279:
  Check to see if it's already in!

Lines 279-279 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Bitcode/Writer/BitWriter.cpp
../llvm-3.2.src/lib/Bitcode/Writer/ValueEnumerator.h
../llvm-3.2.src/lib/Bitcode/Reader/BitReader.cpp
../llvm-3.2.src/lib/Bitcode/Reader/BitcodeReader.h
../llvm-3.2.src/lib/Bitcode/Reader/BitcodeReader.cpp
Comment from lines 219-220:
 / Provide fast operand accessors
 DECLARE_TRANSPARENT_OPERAND_ACCESSORS(Value);

Lines 219-220 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 472-472:
  ENTRY: [paramidx0, attr0, ...]

Lines 472-472 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 656-656:
  STRUCT: [ispacked, eltty x N]

Lines 656-656 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 762-762:
  VST_ENTRY: [valueid, namechar x N]

Lines 762-762 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1124-1124:
  CE_BINOP: [opcode, opval, opval]

Lines 1124-1124 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1272-1273:
  This version adds support for the asm dialect keywords (e.g.,
  inteldialect).

Lines 1272-1273 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1525-1526:
  Default behavior, ignore unknown content.
  VERSION: [version#]

Lines 1525-1526 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1584-1586:
  GLOBALVAR: [pointer type, isconst, initid,
              linkage, alignment, section, visibility, threadlocal,
              unnamed_addr]

Lines 1584-1586 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1634-1635:
  FUNCTION:  [type, callingconv, isproto, linkage, paramattr,
              alignment, section, visibility, gc, unnamed_addr]

Lines 1634-1635 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2047-2047:
  CAST: [opval, opty, destty, castopc]

Lines 2047-2047 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2129-2131:
  SELECT: [opval, ty, opval, opval]
  obsolete form of select
  handles select i1 ... in old bitcode

Lines 2129-2131 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2273-2274:
  SWITCH: [opty, op0, op1, ...]
  Check magic 

Lines 2273-2274 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2356-2356:
  INDIRECTBR: [opty, op0, op1, ...]

Lines 2356-2356 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2440-2440:
  PHI: [ty, val0,bb0, ...]

Lines 2440-2440 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2467-2467:
  LANDINGPAD: [ty, val, val, num, (id0,val0 ...)?]

Lines 2467-2467 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2505-2505:
  ALLOCA: [instty, opty, op, align]

Lines 2505-2505 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2530-2530:
  LOADATOMIC: [opty, op, align, vol, ordering, synchscope]

Lines 2530-2530 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2551-2551:
  STORE2:[ptrty, ptr, val, align, vol]

Lines 2551-2551 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2565-2565:
  STOREATOMIC: [ptrty, ptr, val, align, vol, ordering, synchscope]

Lines 2565-2565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2588-2588:
  CMPXCHG:[ptrty, ptr, cmp, new, vol, ordering, synchscope]

Lines 2588-2588 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2608-2608:
  ATOMICRMW:[ptrty, ptr, val, op, vol, ordering, synchscope]

Lines 2608-2608 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2642-2642:
  CALL: [paramattrs, cc, fnty, fnid, arg0, arg1...]

Lines 2642-2642 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LoopRotation.cpp
../llvm-3.2.src/lib/Transforms/Scalar/CodeGenPrepare.cpp
../llvm-3.2.src/lib/Transforms/Scalar/LoopIdiomRecognize.cpp
../llvm-3.2.src/lib/Transforms/Scalar/SROA.cpp
Comment from lines 1287-1287:
  Remember which alloca we're promoting (for isInstInList).

Lines 1287-1287 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/SCCP.cpp
Comment from lines 144-144:
  end anonymous namespace.



Lines 144-144 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LoopUnswitch.cpp
Comment from lines 354-356:
  TODO: Handle: br (VARIANT|INVARIANT).

  Hoist simple values out.

Lines 354-356 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1067-1075:
  FIXME: Support correlated properties, like:
   for (...)
     if (li1 < li2)
       ...
     if (li1 > li2)
       ...

  FOLD boolean conditions (X|LIC), (X&LIC).  Fold conditional branches,
  selects, switches.

Lines 1067-1075 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1156-1156:
  Create an "unreachable" destination.

Lines 1156-1156 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/DCE.cpp
Comment from lines 32-34:
 ===--------------------------------------------------------------------===//
  DeadInstElimination pass implementation
 

Lines 32-34 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LoopStrengthReduce.cpp
Comment from lines 565-565:
  FIXME: AR->getNoWrapFlags(SCEV::FlagNW)

Lines 565-565 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 592-592:
  FIXME: AR->getNoWrapFlags(SCEV::FlagNW)

Lines 592-592 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1322-1322:
  Special case Basic to handle -1 scales.

Lines 1322-1322 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3060-3060:
 FIXME: AR->getNoWrapFlags(SCEV::FlagNW)

Lines 3060-3060 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3064-3064:
  Break (C * (a + b + c)) into C*a + C*b + C*c.

Lines 3064-3064 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3371-3371:
  For each addrec base reg, apply the scale, if possible.

Lines 3371-3371 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3486-3486:
  It's not worthwhile looking for reuse if there's only one offset.

Lines 3486-3486 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3556-3556:
  Don't create 50 + reg(-50).

Lines 3556-3556 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/JumpThreading.cpp
Comment from lines 388-389:
  X | true -> true
  X & false -> false

Lines 388-389 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/BasicBlockPlacement.cpp
../llvm-3.2.src/lib/Transforms/Scalar/DeadStoreElimination.cpp
../llvm-3.2.src/lib/Transforms/Scalar/MemCpyOptimizer.cpp
../llvm-3.2.src/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp
../llvm-3.2.src/lib/Transforms/Scalar/ObjCARC.cpp
Comment from lines 1109-1111:
 / ProvenanceAnalysis - This is similar to BasicAliasAnalysis, and it
 / uses many of the same techniques, except it uses special ObjC-specific
 / reasoning about pointer relationships.

Lines 1109-1111 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3149-3149:
  Attach a clang.imprecise_release metadata tag, if appropriate.

Lines 3149-3149 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 4130-4130:
  objc_initWeak(p, null) => *p = null

Lines 4130-4130 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/ScalarReplAggregates.cpp
Comment from lines 1914-1921:
  Replace:
    %res = load { i32, i32 }* %alloc
  with:
    %load.0 = load i32* %alloc.0
    %insert.0 insertvalue { i32, i32 } zeroinitializer, i32 %load.0, 0
    %load.1 = load i32* %alloc.1
    %insert = insertvalue { i32, i32 } %insert.0, i32 %load.1, 1
  (Also works for arrays instead of structs)

Lines 1914-1921 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1943-1950:
  Replace:
    store { i32, i32 } %val, { i32, i32 }* %alloc
  with:
    %val.0 = extractvalue { i32, i32 } %val, 0
    store i32 %val.0, i32* %alloc.0
    %val.1 = extractvalue { i32, i32 } %val, 1
    store i32 %val.1, i32* %alloc.1
  (Also works for arrays instead of structs)

Lines 1943-1950 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2377-2377:
  Ignore zero sized fields like {}, they obviously contain no data.

Lines 2377-2377 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2483-2483:
  Ignore zero sized fields like {}, they obviously contain no data.

Lines 2483-2483 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/ConstantProp.cpp
Comment from lines 74-76:
  Get an element from the worklist...

  Don't muck with dead instructions...

Lines 74-76 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/Reassociate.cpp
Comment from lines 1019-1019:
  ...&X&~X = 0

Lines 1019-1019 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LoopDeletion.cpp
../llvm-3.2.src/lib/Transforms/Scalar/LoopUnrollPass.cpp
../llvm-3.2.src/lib/Transforms/Scalar/SimplifyLibCalls.cpp
Comment from lines 158-158:
  cos(-x) -> cos(x)

Lines 158-158 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 190-190:
  pow(1.0, x) -> 1.0

Lines 190-190 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 192-192:
  pow(2.0, x) -> exp2(x)

Lines 192-192 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 199-199:
  pow(x, 0.0) -> 1.0

Lines 199-199 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 219-219:
  pow(x, 1.0) -> x

Lines 219-219 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 221-221:
  pow(x, 2.0) -> x*x

Lines 221-221 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 309-309:
  ffs(0) -> 0.

Lines 309-309 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 311-311:
  ffs(c) -> cttz(c)+1

Lines 311-311 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 339-339:
  isdigit(c) -> (c-'0') <u 10

Lines 339-339 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 358-358:
  isascii(c) -> c <u 128

Lines 358-358 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 376-376:
  abs(x) -> x >s -1 ? x : -x

Lines 376-376 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 397-397:
  isascii(c) -> c & 0x7f

Lines 397-397 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 449-450:
  Optimize specific format strings.
  printf("%c", chr) --> putchar(chr)

Lines 449-450 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 459-459:
  printf("%s\n", str) --> puts(str)

Lines 459-459 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 479-480:
  printf(format, ...) -> iprintf(format, ...) if no floating point
  arguments.

Lines 479-480 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 575-576:
  sprintf(str, format, ...) -> siprintf(str, format, ...) if no floating
  point arguments.

Lines 575-576 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 714-715:
  fprintf(stream, format, ...) -> fiprintf(stream, format, ...) if no
  floating point arguments.

Lines 714-715 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LoopInstSimplify.cpp
../llvm-3.2.src/lib/Transforms/Scalar/TailRecursionElimination.cpp
../llvm-3.2.src/lib/Transforms/Scalar/LICM.cpp
Comment from lines 77-79:
 / This transformation requires natural loop information & requires that
 / loop preheaders be inserted into the CFG...
 /

Lines 77-79 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/LowerAtomic.cpp
../llvm-3.2.src/lib/Transforms/Scalar/Scalar.cpp
Comment from lines 26-27:
 / initializeScalarOptsPasses - Initialize all passes linked into the
 / ScalarOpts library.

Lines 26-27 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/ADCE.cpp
../llvm-3.2.src/lib/Transforms/Scalar/IndVarSimplify.cpp
../llvm-3.2.src/lib/Transforms/Scalar/SimplifyCFGPass.cpp
../llvm-3.2.src/lib/Transforms/Scalar/Sink.cpp
../llvm-3.2.src/lib/Transforms/Scalar/GlobalMerge.cpp
../llvm-3.2.src/lib/Transforms/Scalar/Reg2Mem.cpp
../llvm-3.2.src/lib/Transforms/Scalar/GVN.cpp
Comment from lines 1436-1436:
  DepInfo.isDef() here


Lines 1436-1436 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1533-1533:
  Infinite (unreachable) loop.

Lines 1533-1533 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2048-2049:
  For speed, compute a conservative fast approximation to
  DT->dominates(Root, Root.getEnd());

Lines 2048-2049 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Scalar/EarlyCSE.cpp
Comment from lines 492-492:
  Otherwise, remember that we have this instruction.

Lines 492-492 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Instrumentation/BoundsChecking.cpp
../llvm-3.2.src/lib/Transforms/Instrumentation/Instrumentation.cpp
../llvm-3.2.src/lib/Transforms/Instrumentation/OptimalEdgeProfiling.cpp
Comment from lines 92-92:
  Reserve space for (0,entry) edge.

Lines 92-92 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Instrumentation/GCOVProfiling.cpp
Comment from lines 717-718:
  uint32_t pred = *predecessor;
  if (pred == 0xffffffff) return;

Lines 717-718 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Instrumentation/BlackList.cpp
../llvm-3.2.src/lib/Transforms/Instrumentation/ThreadSanitizer.cpp
../llvm-3.2.src/lib/Transforms/Instrumentation/BlackList.h
../llvm-3.2.src/lib/Transforms/Instrumentation/AddressSanitizer.cpp
Comment from lines 418-418:
  Addr & (Granularity - 1)

Lines 418-418 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1017-1018:
  Filter out Alloca instructions we want (and can) handle.
  Collect Ret instructions.

Lines 1017-1018 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Instrumentation/ProfilingUtils.h
../llvm-3.2.src/lib/Transforms/Instrumentation/ProfilingUtils.cpp
../llvm-3.2.src/lib/Transforms/Instrumentation/MaximumSpanningTree.h
../llvm-3.2.src/lib/Transforms/Instrumentation/EdgeProfiling.cpp
Comment from lines 65-65:
  Reserve space for (0,entry) edge.

Lines 65-65 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 86-86:
  Create counter for (0,entry) edge.

Lines 86-86 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Instrumentation/PathProfiling.cpp
Comment from lines 1111-1111:
  ... otherwise we'll just keep splitting

Lines 1111-1111 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Vectorize/BBVectorize.cpp
Comment from lines 1110-1110:
  Look for an instruction with which to pair instruction *I...

Lines 1110-1110 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1118-1118:
  Determine if J uses I, if so, exit the loop.

Lines 1118-1118 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1223-1223:
  Look for <I, J>:

Lines 1223-1223 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1486-1486:
  Visit each child, pruning as necessary...

Lines 1486-1486 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Vectorize/Vectorize.cpp
Comment from lines 25-26:
 / initializeVectorizationPasses - Initialize all passes linked into the
 / Vectorization library.

Lines 25-26 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Vectorize/LoopVectorize.cpp
Comment from lines 169-169:
  Loop Pass Manager;

Lines 169-169 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 715-715:
  Count holds the overall loop count (N).

Lines 715-715 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1409-1409:
  Holds the Load and Store *instructions*.

Lines 1409-1409 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/ConstantMerge.cpp
../llvm-3.2.src/lib/Transforms/IPO/InlineSimple.cpp
../llvm-3.2.src/lib/Transforms/IPO/Inliner.cpp
Comment from lines 52-52:
  Threshold to use when optsize is specified (and there is no -inline-limit).

Lines 52-52 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/InlineAlways.cpp
../llvm-3.2.src/lib/Transforms/IPO/DeadArgumentElimination.cpp
Comment from lines 47-48:
 / DAE - The dead argument elimination pass.
 /

Lines 47-48 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/StripDeadPrototypes.cpp
../llvm-3.2.src/lib/Transforms/IPO/PassManagerBuilder.cpp
../llvm-3.2.src/lib/Transforms/IPO/PartialInlining.cpp
../llvm-3.2.src/lib/Transforms/IPO/MergeFunctions.cpp
Comment from lines 74-76:
 / Creates a hash-code for the function which is the same for any two
 / functions that will compare equal, without looking at the instructions
 / inside the function.

Lines 74-76 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/IPO.cpp
../llvm-3.2.src/lib/Transforms/IPO/ExtractGV.cpp
../llvm-3.2.src/lib/Transforms/IPO/Internalize.cpp
../llvm-3.2.src/lib/Transforms/IPO/BarrierNoopPass.cpp
../llvm-3.2.src/lib/Transforms/IPO/LoopExtractor.cpp
Comment from lines 196-196:
  Load the BlockFile...

Lines 196-196 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/ArgumentPromotion.cpp
Comment from lines 580-580:
  not allowed to dereference ->begin() if size() is 0

Lines 580-580 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/FunctionAttrs.cpp
../llvm-3.2.src/lib/Transforms/IPO/GlobalDCE.cpp
../llvm-3.2.src/lib/Transforms/IPO/StripSymbols.cpp
Comment from lines 377-377:
  llvm.dbg.sp keeps track of debug info for subprograms.

Lines 377-377 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/IPConstantPropagation.cpp
../llvm-3.2.src/lib/Transforms/IPO/PruneEH.cpp
Comment from lines 221-221:
  Delete the new BB.

Lines 221-221 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/IPO/GlobalOpt.cpp
../llvm-3.2.src/lib/Transforms/Hello/Hello.cpp
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombinePHI.cpp
Comment from lines 725-725:
  If we already have a value for this predecessor, reuse it.

Lines 725-725 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineSelect.cpp
Comment from lines 390-390:
  (Pred == ICmpInst::ICMP_ULT || Pred == ICmpInst::ICMP_SLT)

Lines 390-390 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 732-732:
  Transform (X == Y) ? X : Y  -> Y

Lines 732-732 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineVectorOps.cpp
Comment from lines 438-438:
  shuffle(undef,undef,mask) -> undef.

Lines 438-438 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp
Comment from lines 387-387:
  load(gep null, ...) -> unreachable

Lines 387-387 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 414-414:
  Instcombine load (constantexpr_cast global) -> cast (load global)

Lines 414-414 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 445-445:
  load (select (cond, null, P)) -> load P

Lines 445-445 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 452-452:
  load (select (cond, P, null)) -> load P

Lines 452-452 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstructionCombining.cpp
Comment from lines 922-922:
  Op = LHS << Amt.


Lines 922-922 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1185-1185:
  -> GEP i8* X, ...

Lines 1185-1185 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1226-1229:
  Transform things like:
  %V = mul i64 %N, 4
  %t = getelementptr i8* bitcast (i32* %arr to i8*), i32 %V
  into:  %t1 = getelementptr i32* %arr, i32 %N; bitcast

Lines 1226-1229 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineCalls.cpp
Comment from lines 249-249:
  memmove(x,x,size) -> noop.

Lines 249-249 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 276-276:
  bswap(bswap(x)) -> x

Lines 276-276 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 281-281:
  bswap(trunc(bswap(x))) -> trunc(lshr(x, c))

Lines 281-281 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 296-296:
  powi(x, 0) -> 1.0

Lines 296-296 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 299-299:
  powi(x, 1) -> x

Lines 299-299 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 405-405:
  X + 0 -> {X, false}

Lines 405-405 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 426-426:
  X - 0 -> {X, false}

Lines 426-426 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 486-486:
  X * 1 -> {X, false}

Lines 486-486 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 990-992:
  TODO: Handle multiple return values.

  Check to see if we are changing the return type...

Lines 990-992 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineCompares.cpp
Comment from lines 1045-1045:
  (icmp pred (xor X, XorCST), CI)

Lines 1045-1045 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1265-1265:
  (icmp pred (shl X, ShAmt), CI)

Lines 1265-1265 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1326-1326:
  (icmp pred (shr X, ShAmt), CI)

Lines 1326-1326 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1358-1358:
  Fold: icmp pred (add X, C1), C2

Lines 1358-1358 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1507-1507:
  Handle icmp {eq|ne} <intrinsic>, intcst.

Lines 1507-1507 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1645-1645:
  Finally, return the value computed.

Lines 1645-1645 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2078-2078:
  A <u B -> false if min(A) >= max(B)

Lines 2078-2078 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2080-2080:
  A <u B -> A != B if max(A) == min(B)

Lines 2080-2080 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2083-2083:
  A <u C -> A == C-1 if min(A)+1 == C

Lines 2083-2083 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2087-2087:
  (x <u 2147483648) -> (x >s -1)  -> true if sign bit clear

Lines 2087-2087 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2094-2094:
  A >u B -> true if min(A) > max(B)

Lines 2094-2094 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2096-2096:
  A >u B -> false if max(A) <= max(B)

Lines 2096-2096 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2099-2099:
  A >u B -> A != B if min(A) == max(B)

Lines 2099-2099 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2102-2102:
  A >u C -> A == C+1 if max(a)-1 == C

Lines 2102-2102 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2106-2106:
  (x >u 2147483647) -> (x <s 0)  -> true if sign bit set

Lines 2106-2106 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2113-2113:
  A <s B -> true if max(A) < min(C)

Lines 2113-2113 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2115-2115:
  A <s B -> false if min(A) >= max(C)

Lines 2115-2115 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2117-2117:
  A <s B -> A != B if max(A) == min(B)

Lines 2117-2117 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2120-2120:
  A <s C -> A == C-1 if min(A)+1 == C

Lines 2120-2120 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2126-2126:
  A >s B -> true if min(A) > max(B)

Lines 2126-2126 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2128-2128:
  A >s B -> false if max(A) <= min(B)

Lines 2128-2128 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2131-2131:
  A >s B -> A != B if min(A) == max(B)

Lines 2131-2131 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2134-2134:
  A >s C -> A == C+1 if max(A)-1 == C

Lines 2134-2134 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2141-2141:
  A >=s B -> true if min(A) >= max(B)

Lines 2141-2141 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2248-2248:
  icmp pred inttoptr(X), null -> icmp pred X, 0

Lines 2248-2248 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2360-2360:
  C + B == C + D  ->  B == D

Lines 2360-2360 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2409-2409:
  icmp (srem X, Y), Y

Lines 2409-2409 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2413-2413:
  icmp Y, (srem X, Y)

Lines 2413-2413 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2543-2543:
  (A^B) == A  ->  B == 0

Lines 2543-2543 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2570-2570:
  A == (A^B)  ->  B == 0

Lines 2570-2570 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2576-2576:
  (X&Z) == (Y&Z) -> (X^Y) & Z == 0

Lines 2576-2576 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 3049-3049:
  fcmp (fpext x), (fpext y) -> fcmp x, y

Lines 3049-3049 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp
Comment from lines 129-129:
  Canonicalize (X+C1)*CI -> X*CI+C1*CI.

Lines 129-129 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 603-603:
  Handle cases involving: rem X, (select Cond, Y, Z)

Lines 603-603 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineWorklist.h
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp
Comment from lines 284-284:
  V >= Min && V < Hi --> V < Hi

Lines 284-284 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 726-726:
  handle (roughly):  (icmp eq (A & B), C) & (icmp eq (A & D), E)

Lines 726-726 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1148-1148:
  (A|B) & ~(A&B) -> A^B

Lines 1148-1148 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1302-1302:
  X << 2 -> collect(X, +2)

Lines 1302-1302 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1306-1306:
  X >>u 2 -> collect(X, -2)

Lines 1306-1306 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1454-1455:
  handle (roughly):
  (icmp ne (A & B), C) | (icmp ne (A & D), E)

Lines 1454-1455 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1799-1799:
  (A & C)|(B & D)

Lines 1799-1799 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1936-1938:
  A | ( A ^ B) -> A |  B
  A | (~A ^ B) -> A | ~B
  (A & B) | (A ^ B)

Lines 1936-1938 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1957-1958:
  A | ~(A | B) -> A | ~B
  A | ~(A ^ B) -> A | ~B

Lines 1957-1958 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2210-2210:
  (A&B)^A -> (B&A)^A

Lines 2210-2210 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2233-2233:
  (A & B)^(A | B) -> A ^ B

Lines 2233-2233 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineAddSub.cpp
Comment from lines 25-25:
 / SubOne - Subtract one from a ConstantInt.

Lines 25-25 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombine.h
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineShifts.cpp
Comment from lines 370-370:
  (shift2 (shift1 & 0x00FF), c2)

Lines 370-370 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/InstCombine/InstCombineCasts.cpp
Comment from lines 399-399:
  trunc(trunc(x)) -> trunc(x)

Lines 399-399 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 844-844:
  zext(trunc(t) & C) -> (t & zext(C)).

Lines 844-844 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1018-1019:
 case Instruction::Shl:   TODO
 case Instruction::LShr:  TODO

Lines 1018-1019 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1208-1208:
  Fold (fptrunc (sqrt (fpext x))) -> (sqrtf x)

Lines 1208-1208 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1597-1597:
  bitcast(trunc(bitcast(somevector)))

Lines 1597-1597 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1616-1616:
  bitcast(trunc(lshr(bitcast(somevector), cst))

Lines 1616-1616 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1678-1678:
  not "{}" 
Lines 1678-1678 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1700-1700:
  FIXME: Canonicalize bitcast(insertelement) -> insertelement(bitcast)

Lines 1700-1700 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/UnifyFunctionExitNodes.cpp
../llvm-3.2.src/lib/Transforms/Utils/MetaRenamer.cpp
../llvm-3.2.src/lib/Transforms/Utils/LoopUnroll.cpp
../llvm-3.2.src/lib/Transforms/Utils/LowerExpectIntrinsic.cpp
Comment from lines 74-74:
  +1 for default case.

Lines 74-74 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/Utils.cpp
../llvm-3.2.src/lib/Transforms/Utils/Mem2Reg.cpp
../llvm-3.2.src/lib/Transforms/Utils/CodeExtractor.cpp
Comment from lines 769-773:
 cerr << "NEW FUNCTION: " << *newFunction;
   verifyFunction(*newFunction);

   cerr << "OLD FUNCTION: " << *oldFunction;
   verifyFunction(*oldFunction);


Lines 769-773 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/CmpInstAnalysis.cpp
../llvm-3.2.src/lib/Transforms/Utils/SimplifyCFG.cpp
Comment from lines 1464-1465:
  Make the PHI node use the select for all incoming values for "then" and
  "if" blocks.

Lines 1464-1465 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2128-2130:
  Create (PBI_Cond and PBI_C) or (!PBI_Cond and BI_Value)
  PBI_C is true: PBI_Cond or (!PBI_Cond and BI_Value)
        is false: !PBI_Cond and BI_Value

Lines 2128-2130 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2339-2341:
  The weight to CommonDest should be PredCommon * SuccTotal +
                                     PredOther * SuccCommon.
  The weight to OtherDest should be PredOther * SuccOther.

Lines 2339-2341 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2486-2490:
  SimplifyIndirectBrOnSelect - Replaces
    (indirectbr (select cond, blockaddress(@fn, BlockA),
                              blockaddress(@fn, BlockB)))
  with
    (br cond, BlockA, BlockB).

Lines 2486-2490 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/LowerSwitch.cpp
Comment from lines 30-31:
 / LowerSwitch Pass - Replace all SwitchInst instructions with chained branch
 / instructions.

Lines 30-31 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 96-97:
  operator<< - Used for debugging purposes.
 

Lines 96-97 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 261-261:
  The value we are switching on...

Lines 261-261 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/InlineFunction.cpp
Comment from lines 45-48:
 /< Destination of the invoke's unwind.
 /< Destination for the callee's resume.
 /< LandingPadInst associated with the invoke.
 /< PHI for EH values from landingpad insts.

Lines 45-48 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 609-609:
  Update the callgraph if requested.

Lines 609-609 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/DemoteRegToStack.cpp
../llvm-3.2.src/lib/Transforms/Utils/LowerInvoke.cpp
../llvm-3.2.src/lib/Transforms/Utils/InstructionNamer.cpp
../llvm-3.2.src/lib/Transforms/Utils/ValueMapper.cpp
../llvm-3.2.src/lib/Transforms/Utils/BuildLibCalls.cpp
../llvm-3.2.src/lib/Transforms/Utils/IntegerDivision.cpp
Comment from lines 144-175:
  Our CFG is going to look like:
  +---------------------+
  | special-cases       |
  |   ...               |
  +---------------------+
   |       |
   |   +----------+
   |   |  bb1     |
   |   |  ...     |
   |   +----------+
   |    |      |
   |    |  +------------+
   |    |  |  preheader |
   |    |  |  ...       |
   |    |  +------------+
   |    |      |
   |    |      |      +---+
   |    |      |      |   |
   |    |  +------------+ |
   |    |  |  do-while  | |
   |    |  |  ...       | |
   |    |  +------------+ |
   |    |      |      |   |
   |   +-----------+  +---+
   |   | loop-exit |
   |   |  ...      |
   |   +-----------+
   |     |
  +-------+
  | ...   |
  | end   |
  +-------+

Lines 144-175 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/BasicBlockUtils.cpp
Comment from lines 32-33:
 / DeleteDeadBlock - Delete the specified block, which must have no
 / predecessors.

Lines 32-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/Local.cpp
Comment from lines 226-226:
  indirectbr blockaddress(@F, @BB) -> br label @BB

Lines 226-226 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/SimplifyIndVar.cpp
../llvm-3.2.src/lib/Transforms/Utils/BypassSlowDivision.cpp
../llvm-3.2.src/lib/Transforms/Utils/SimplifyInstructions.cpp
../llvm-3.2.src/lib/Transforms/Utils/BreakCriticalEdges.cpp
../llvm-3.2.src/lib/Transforms/Utils/PromoteMemoryToRegister.cpp
Comment from lines 171-171:
  If we already have this instruction number, return it.

Lines 171-171 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/CloneFunction.cpp
../llvm-3.2.src/lib/Transforms/Utils/ModuleUtils.cpp
../llvm-3.2.src/lib/Transforms/Utils/SimplifyLibCalls.cpp
Comment from lines 223-223:
  __strcpy_chk(x,x)  -> x

Lines 223-223 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 490-490:
  strrchr(s, 0) -> strchr(s, 0)

Lines 490-490 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 536-536:
  strcmp(P, "x") -> memcmp(P, "x", 2)

Lines 536-536 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 564-564:
  strncmp(x,x,n)  -> 0

Lines 564-564 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 574-574:
  strncmp(x,y,0)   -> 0

Lines 574-574 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 577-577:
  strncmp(x,y,1) -> memcmp(x,y,1)

Lines 577-577 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 613-613:
  strcpy(x,x)  -> x

Lines 613-613 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 697-699:
  strncpy(x, y, 0) -> x

  These optimizations require DataLayout.

Lines 697-699 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 724-724:
  Constant folding: strlen("xyz") -> 3

Lines 724-724 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 865-865:
  fold strstr(a, b) == a -> strncmp(a, b, strlen(b)) == 0

Lines 865-865 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 898-898:
  strstr("foo", "bar") -> null

Lines 898-898 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 926-926:
  memcmp(s,s,x) -> 0

Lines 926-926 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 934-934:
  memcmp(s1,s2,0) -> 0

Lines 934-934 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 946-946:
  Constant folding: memcmp(x, y, l) -> cnst (all arguments are constant)

Lines 946-946 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 973-973:
  memcpy(x, y, n) -> llvm.memcpy(x, y, n, 1)

Lines 973-973 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 992-992:
  memmove(x, y, n) -> llvm.memmove(x, y, n, 1)

Lines 992-992 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1011-1011:
  memset(p, v, n) -> llvm.memset(p, v, n, 1)

Lines 1011-1011 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/SSAUpdater.cpp
Comment from lines 177-177:
  Ok, we have no way out, insert a new one now.

Lines 177-177 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 402-402:
  If this block has already been processed, ignore this repeat use.

Lines 402-402 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/LoopUnrollRuntime.cpp
Comment from lines 340-340:
  Add the new block to the parent loop, if needed

Lines 340-340 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/LCSSA.cpp
../llvm-3.2.src/lib/Transforms/Utils/CloneModule.cpp
../llvm-3.2.src/lib/Transforms/Utils/AddrModeMatcher.cpp
Comment from lines 207-207:
  Can only handle X*C and X << C.

Lines 207-207 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 313-313:
  Fold in immediates if legal for the target.

Lines 313-313 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/lib/Transforms/Utils/LoopSimplify.cpp
Comment from lines 83-83:
  We need loop information to identify the loops...

Lines 83-83 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Disassembler.h
Comment from lines 175-177:
 *
  * @}
  


Lines 175-177 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Core.h
Comment from lines 353-355:
 *
  * @}
  


Lines 353-355 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2724-2726:
  !defined(__cplusplus) 

  !defined(LLVM_C_CORE_H) 

Lines 2724-2726 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/BitReader.h
Comment from lines 67-69:
 *
  * @}
  


Lines 67-69 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/TargetMachine.h
../llvm-3.2.src/include/llvm-c/Object.h
Comment from lines 145-145:
  defined(__cplusplus) 


Lines 145-145 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Initialization.h
../llvm-3.2.src/include/llvm-c/Linker.h
../llvm-3.2.src/include/llvm-c/EnhancedDisassembly.h
Comment from lines 519-521:
 *
  * @}
  


Lines 519-521 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/ExecutionEngine.h
Comment from lines 28-33:
 *
  * @defgroup LLVMCExecutionEngine Execution Engine
  * @ingroup LLVMC
  *
  * @{
  


Lines 28-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/lto.h
Comment from lines 297-299:
 *
  * @}
  


Lines 297-299 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Analysis.h
Comment from lines 27-32:
 *
  * @defgroup LLVMCAnalysis Analysis
  * @ingroup LLVMC
  *
  * @{
  


Lines 27-32 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 56-58:
 *
  * @}
  


Lines 56-58 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/BitWriter.h
Comment from lines 47-49:
 *
  * @}
  


Lines 47-49 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Target.h
Comment from lines 28-33:
 *
  * @defgroup LLVMCTarget Target information
  * @ingroup LLVMC
  *
  * @{
  


Lines 28-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 260-260:
  defined(__cplusplus) 


Lines 260-260 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/Transforms/Scalar.h
../llvm-3.2.src/include/llvm-c/Transforms/IPO.h
../llvm-3.2.src/include/llvm-c/Transforms/Vectorize.h
../llvm-3.2.src/include/llvm-c/Transforms/PassManagerBuilder.h
Comment from lines 82-84:
 *
  * @}
  


Lines 82-84 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm-c/LinkTimeOptimizer.h
Comment from lines 60-62:
 *
  * @}
  


Lines 60-62 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/SymbolTableListTraits.h
../llvm-3.2.src/include/llvm/CodeGen/MachineModuleInfoImpls.h
../llvm-3.2.src/include/llvm/CodeGen/CallingConvLower.h
../llvm-3.2.src/include/llvm/CodeGen/GCs.h
../llvm-3.2.src/include/llvm/CodeGen/MachineModuleInfo.h
Comment from lines 66-71:
  Landing pad block.
  Labels prior to invoke.
  Labels after invoke.
  Label at beginning of landing pad.
  Personality function.
  List of type ids (filters negative)


Lines 66-71 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/RuntimeLibcalls.h
../llvm-3.2.src/include/llvm/CodeGen/CalcSpillWeights.h
../llvm-3.2.src/include/llvm/CodeGen/MachineOperand.h
../llvm-3.2.src/include/llvm/CodeGen/MachineLoopRanges.h
../llvm-3.2.src/include/llvm/CodeGen/ScoreboardHazardRecognizer.h
../llvm-3.2.src/include/llvm/CodeGen/LiveVariables.h
../llvm-3.2.src/include/llvm/CodeGen/MachineMemOperand.h
../llvm-3.2.src/include/llvm/CodeGen/SelectionDAGNodes.h
../llvm-3.2.src/include/llvm/CodeGen/GCMetadata.h
../llvm-3.2.src/include/llvm/CodeGen/MachineFunctionPass.h
../llvm-3.2.src/include/llvm/CodeGen/MachineInstrBundle.h
../llvm-3.2.src/include/llvm/CodeGen/ScheduleDAGILP.h
../llvm-3.2.src/include/llvm/CodeGen/JITCodeEmitter.h
../llvm-3.2.src/include/llvm/CodeGen/ScheduleHazardRecognizer.h
../llvm-3.2.src/include/llvm/CodeGen/IntrinsicLowering.h
../llvm-3.2.src/include/llvm/CodeGen/RegisterPressure.h
../llvm-3.2.src/include/llvm/CodeGen/LinkAllCodegenComponents.h
../llvm-3.2.src/include/llvm/CodeGen/MachineJumpTableInfo.h
../llvm-3.2.src/include/llvm/CodeGen/EdgeBundles.h
../llvm-3.2.src/include/llvm/CodeGen/MachineLoopInfo.h
../llvm-3.2.src/include/llvm/CodeGen/SelectionDAG.h
../llvm-3.2.src/include/llvm/CodeGen/MachineSSAUpdater.h
../llvm-3.2.src/include/llvm/CodeGen/RegisterScavenging.h
../llvm-3.2.src/include/llvm/CodeGen/Passes.h
../llvm-3.2.src/include/llvm/CodeGen/ValueTypes.h
../llvm-3.2.src/include/llvm/CodeGen/MachineScheduler.h
Comment from lines 68-68:
  RegisterPassParser requires a (misnamed) FunctionPassCtor type.

Lines 68-68 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/TargetSchedule.h
../llvm-3.2.src/include/llvm/CodeGen/AsmPrinter.h
../llvm-3.2.src/include/llvm/CodeGen/SchedulerRegistry.h
../llvm-3.2.src/include/llvm/CodeGen/MachinePassRegistry.h
../llvm-3.2.src/include/llvm/CodeGen/LinkAllAsmWriterComponents.h
../llvm-3.2.src/include/llvm/CodeGen/ScheduleDAGInstrs.h
../llvm-3.2.src/include/llvm/CodeGen/FunctionLoweringInfo.h
../llvm-3.2.src/include/llvm/CodeGen/SlotIndexes.h
Comment from lines 305-307:
 / SlotIndexes pass.
 /
 / This pass assigns indexes to each instruction.

Lines 305-307 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/RegAllocPBQP.h
../llvm-3.2.src/include/llvm/CodeGen/MachineCodeEmitter.h
../llvm-3.2.src/include/llvm/CodeGen/MachineCodeInfo.h
../llvm-3.2.src/include/llvm/CodeGen/GCStrategy.h
../llvm-3.2.src/include/llvm/CodeGen/MachineBlockFrequencyInfo.h
../llvm-3.2.src/include/llvm/CodeGen/MachineFrameInfo.h
Comment from lines 285-286:
 / getNumObjects - Return the number of objects.
 /

Lines 285-286 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/MachineFunction.h
../llvm-3.2.src/include/llvm/CodeGen/MachineInstrBuilder.h
../llvm-3.2.src/include/llvm/CodeGen/TargetLoweringObjectFileImpl.h
../llvm-3.2.src/include/llvm/CodeGen/LexicalScopes.h
../llvm-3.2.src/include/llvm/CodeGen/RegAllocRegistry.h
../llvm-3.2.src/include/llvm/CodeGen/LiveRangeEdit.h
../llvm-3.2.src/include/llvm/CodeGen/MachineDominators.h
../llvm-3.2.src/include/llvm/CodeGen/SelectionDAGISel.h
../llvm-3.2.src/include/llvm/CodeGen/CommandFlags.h
../llvm-3.2.src/include/llvm/CodeGen/PseudoSourceValue.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/Graph.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/Solution.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/HeuristicSolver.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/Math.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/HeuristicBase.h
../llvm-3.2.src/include/llvm/CodeGen/PBQP/Heuristics/Briggs.h
Comment from lines 276-276:
  If the node has gone optimal...

Lines 276-276 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/LiveStackAnalysis.h
../llvm-3.2.src/include/llvm/CodeGen/GCMetadataPrinter.h
../llvm-3.2.src/include/llvm/CodeGen/FastISel.h
../llvm-3.2.src/include/llvm/CodeGen/MachineConstantPool.h
../llvm-3.2.src/include/llvm/CodeGen/MachinePostDominators.h
../llvm-3.2.src/include/llvm/CodeGen/LiveInterval.h
../llvm-3.2.src/include/llvm/CodeGen/MachineRegisterInfo.h
../llvm-3.2.src/include/llvm/CodeGen/ISDOpcodes.h
../llvm-3.2.src/include/llvm/CodeGen/MachineBranchProbabilityInfo.h
../llvm-3.2.src/include/llvm/CodeGen/MachineRelocation.h
../llvm-3.2.src/include/llvm/CodeGen/ResourcePriorityQueue.h
Comment from lines 29-29:
 / Sorting functions for the Available queue.

Lines 29-29 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/LiveIntervalAnalysis.h
../llvm-3.2.src/include/llvm/CodeGen/MachineFunctionAnalysis.h
../llvm-3.2.src/include/llvm/CodeGen/Analysis.h
../llvm-3.2.src/include/llvm/CodeGen/MachORelocation.h
../llvm-3.2.src/include/llvm/CodeGen/MachineBasicBlock.h
../llvm-3.2.src/include/llvm/CodeGen/RegisterClassInfo.h
../llvm-3.2.src/include/llvm/CodeGen/MachineInstr.h
../llvm-3.2.src/include/llvm/CodeGen/DFAPacketizer.h
Comment from lines 120-120:
  getResourceTracker - return ResourceTracker

Lines 120-120 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/LatencyPriorityQueue.h
Comment from lines 23-23:
 / Sorting functions for the Available queue.

Lines 23-23 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/CodeGen/ScheduleDAG.h
../llvm-3.2.src/include/llvm/OperandTraits.h
../llvm-3.2.src/include/llvm/DefaultPasses.h
../llvm-3.2.src/include/llvm/Module.h
../llvm-3.2.src/include/llvm/Intrinsics.h
../llvm-3.2.src/include/llvm/Use.h
../llvm-3.2.src/include/llvm/TypeBuilder.h
../llvm-3.2.src/include/llvm/PassSupport.h
../llvm-3.2.src/include/llvm/DebugInfo/DIContext.h
../llvm-3.2.src/include/llvm/MDBuilder.h
Comment from lines 86-86:
  Return the range [Lo, Hi).

Lines 86-86 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ValueSymbolTable.h
../llvm-3.2.src/include/llvm/Linker.h
../llvm-3.2.src/include/llvm/Function.h
../llvm-3.2.src/include/llvm/Operator.h
../llvm-3.2.src/include/llvm/IRBuilder.h
../llvm-3.2.src/include/llvm/Instruction.h
../llvm-3.2.src/include/llvm/DIBuilder.h
../llvm-3.2.src/include/llvm/Constants.h
../llvm-3.2.src/include/llvm/Value.h
../llvm-3.2.src/include/llvm/Config/config.h
../llvm-3.2.src/include/llvm/Config/llvm-config.h
../llvm-3.2.src/include/llvm/IntrinsicInst.h
../llvm-3.2.src/include/llvm/Metadata.h
Comment from lines 199-199:
  SmallVector<TrackingVH<MDNode>, 4>


Lines 199-199 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/TableGen/StringMatcher.h
../llvm-3.2.src/include/llvm/TableGen/Main.h
../llvm-3.2.src/include/llvm/TableGen/Error.h
../llvm-3.2.src/include/llvm/TableGen/Record.h
../llvm-3.2.src/include/llvm/TableGen/TableGenBackend.h
../llvm-3.2.src/include/llvm/ADT/SmallSet.h
../llvm-3.2.src/include/llvm/ADT/STLExtras.h
../llvm-3.2.src/include/llvm/ADT/DenseSet.h
../llvm-3.2.src/include/llvm/ADT/IndexedMap.h
../llvm-3.2.src/include/llvm/ADT/IntEqClasses.h
../llvm-3.2.src/include/llvm/ADT/APFloat.h
../llvm-3.2.src/include/llvm/ADT/PackedVector.h
../llvm-3.2.src/include/llvm/ADT/edit_distance.h
../llvm-3.2.src/include/llvm/ADT/StringExtras.h
../llvm-3.2.src/include/llvm/ADT/IntervalMap.h
Comment from lines 477-477:
 / operator bool - Detect a null ref.

Lines 477-477 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1431-1432:
 / pathFillFind - Complete path by searching for x.
 / @param x Key to search for.

Lines 1431-1432 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 2020-2035:
 ===----------------------------------------------------------------------===//
 ---                       IntervalMapOverlaps                           ----//
 ===----------------------------------------------------------------------===//

 / IntervalMapOverlaps - Iterate over the overlaps of mapped intervals in two
 / IntervalMaps. The maps may be different, but the KeyT and Traits types
 / should be the same.
 /
 / Typical uses:
 /
 / 1. Test for overlap:
 /    bool overlap = IntervalMapOverlaps(a, b).valid();
 /
 / 2. Enumerate overlaps:
 /    for (IntervalMapOverlaps I(a, b); I.valid() ; ++I) { ... }
 /

Lines 2020-2035 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/FoldingSet.h
../llvm-3.2.src/include/llvm/ADT/DAGDeltaAlgorithm.h
../llvm-3.2.src/include/llvm/ADT/Twine.h
../llvm-3.2.src/include/llvm/ADT/VariadicFunction.h
../llvm-3.2.src/include/llvm/ADT/ilist_node.h
../llvm-3.2.src/include/llvm/ADT/PointerUnion.h
../llvm-3.2.src/include/llvm/ADT/ImmutableList.h
../llvm-3.2.src/include/llvm/ADT/PriorityQueue.h
Comment from lines 51-51:
  Logarithmic-time heap bubble-up.

Lines 51-51 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/UniqueVector.h
../llvm-3.2.src/include/llvm/ADT/SmallVector.h
../llvm-3.2.src/include/llvm/ADT/SCCIterator.h
../llvm-3.2.src/include/llvm/ADT/ImmutableMap.h
../llvm-3.2.src/include/llvm/ADT/SetVector.h
../llvm-3.2.src/include/llvm/ADT/StringRef.h
Comment from lines 186-188:
 / @}
 / @name Operator Overloads
 / @{


Lines 186-188 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 195-197:
 / @}
 / @name Type Conversions
 / @{


Lines 195-197 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/OwningPtr.h
../llvm-3.2.src/include/llvm/ADT/SmallPtrSet.h
../llvm-3.2.src/include/llvm/ADT/GraphTraits.h
../llvm-3.2.src/include/llvm/ADT/APInt.h
Comment from lines 501-501:
  For small values, return quickly.

Lines 501-501 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/APSInt.h
../llvm-3.2.src/include/llvm/ADT/ArrayRef.h
Comment from lines 137-139:
 / @}
 / @name Expensive Operations
 / @{

Lines 137-139 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 281-283:
 / @}
 / @name ArrayRef Comparison Operators
 / @{


Lines 281-283 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/SmallString.h
../llvm-3.2.src/include/llvm/ADT/StringSwitch.h
../llvm-3.2.src/include/llvm/ADT/DenseMap.h
Comment from lines 465-465:
  Found Val's bucket?  If so, return it.

Lines 465-465 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/Hashing.h
../llvm-3.2.src/include/llvm/ADT/PointerIntPair.h
../llvm-3.2.src/include/llvm/ADT/Triple.h
../llvm-3.2.src/include/llvm/ADT/ImmutableIntervalMap.h
../llvm-3.2.src/include/llvm/ADT/IntrusiveRefCntPtr.h
../llvm-3.2.src/include/llvm/ADT/InMemoryStruct.h
../llvm-3.2.src/include/llvm/ADT/DeltaAlgorithm.h
../llvm-3.2.src/include/llvm/ADT/MapVector.h
../llvm-3.2.src/include/llvm/ADT/ImmutableSet.h
Comment from lines 622-622:
  Compare the Contents('T') with Contents('TNew')

Lines 622-622 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1176-1178:
 ===--------------------------------------------------===//
  Iterators.
 ===--------------------------------------------------===//


Lines 1176-1178 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/StringMap.h
../llvm-3.2.src/include/llvm/ADT/SetOperations.h
../llvm-3.2.src/include/llvm/ADT/ilist.h
Comment from lines 193-193:
  Accessors...

Lines 193-193 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 496-496:
  Fix head of list...

Lines 496-496 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 551-551:
  Splice members - defined in terms of transfer...

Lines 551-551 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/TinyPtrVector.h
../llvm-3.2.src/include/llvm/ADT/StringSet.h
../llvm-3.2.src/include/llvm/ADT/ScopedHashTable.h
../llvm-3.2.src/include/llvm/ADT/NullablePtr.h
../llvm-3.2.src/include/llvm/ADT/ValueMap.h
Comment from lines 218-219:
  May destroy *this.
  Definitely destroys *this.

Lines 218-219 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/Statistic.h
../llvm-3.2.src/include/llvm/ADT/SparseBitVector.h
../llvm-3.2.src/include/llvm/ADT/BitVector.h
../llvm-3.2.src/include/llvm/ADT/SmallBitVector.h
Comment from lines 413-413:
  Intersection, union, disjoint union.

Lines 413-413 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/DepthFirstIterator.h
../llvm-3.2.src/include/llvm/ADT/Optional.h
../llvm-3.2.src/include/llvm/ADT/SparseSet.h
Comment from lines 209-209:
  Stride is 0 when SparseT >= unsigned.  We don't need to loop.

Lines 209-209 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/ADT/EquivalenceClasses.h
../llvm-3.2.src/include/llvm/ADT/PostOrderIterator.h
../llvm-3.2.src/include/llvm/ADT/DenseMapInfo.h
../llvm-3.2.src/include/llvm/Pass.h
Comment from lines 56-61:
 /< MPPassManager
 /< CGPassManager
 /< FPPassManager
 /< LPPassManager
 /< RGPassManager
 /< BBPassManager

Lines 56-61 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Object/Archive.h
../llvm-3.2.src/include/llvm/Object/Error.h
../llvm-3.2.src/include/llvm/Object/COFF.h
../llvm-3.2.src/include/llvm/Object/RelocVisitor.h
../llvm-3.2.src/include/llvm/Object/MachOObject.h
Comment from lines 107-109:
 / @}
 / @name String Table Data
 / @{


Lines 107-109 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Object/Binary.h
../llvm-3.2.src/include/llvm/Object/ELF.h
../llvm-3.2.src/include/llvm/Object/ObjectFile.h
../llvm-3.2.src/include/llvm/Object/MachOFormat.h
../llvm-3.2.src/include/llvm/Object/MachO.h
../llvm-3.2.src/include/llvm/InitializePasses.h
../llvm-3.2.src/include/llvm/User.h
../llvm-3.2.src/include/llvm/GVMaterializer.h
../llvm-3.2.src/include/llvm/Attributes.h
../llvm-3.2.src/include/llvm/GlobalAlias.h
../llvm-3.2.src/include/llvm/Argument.h
../llvm-3.2.src/include/llvm/LinkAllPasses.h
../llvm-3.2.src/include/llvm/CallingConv.h
../llvm-3.2.src/include/llvm/Constant.h
../llvm-3.2.src/include/llvm/LLVMContext.h
Comment from lines 43-48:
  "dbg"
  "tbaa"
  "prof"
  "fpmath"
  "range"
  "tbaa.struct"

Lines 43-48 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/AutoUpgrade.h
../llvm-3.2.src/include/llvm/LinkAllVMCore.h
../llvm-3.2.src/include/llvm/ExecutionEngine/MCJIT.h
../llvm-3.2.src/include/llvm/ExecutionEngine/JITEventListener.h
../llvm-3.2.src/include/llvm/ExecutionEngine/ObjectBuffer.h
../llvm-3.2.src/include/llvm/ExecutionEngine/RuntimeDyld.h
../llvm-3.2.src/include/llvm/ExecutionEngine/JIT.h
../llvm-3.2.src/include/llvm/ExecutionEngine/ObjectImage.h
../llvm-3.2.src/include/llvm/ExecutionEngine/Interpreter.h
../llvm-3.2.src/include/llvm/ExecutionEngine/ExecutionEngine.h
../llvm-3.2.src/include/llvm/ExecutionEngine/GenericValue.h
../llvm-3.2.src/include/llvm/ExecutionEngine/JITMemoryManager.h
../llvm-3.2.src/include/llvm/ExecutionEngine/OProfileWrapper.h
../llvm-3.2.src/include/llvm/InstrTypes.h
../llvm-3.2.src/include/llvm/PassRegistry.h
../llvm-3.2.src/include/llvm/TargetTransformInfo.h
../llvm-3.2.src/include/llvm/DerivedTypes.h
../llvm-3.2.src/include/llvm/MC/MCInstrItineraries.h
../llvm-3.2.src/include/llvm/MC/MCAsmInfoCOFF.h
../llvm-3.2.src/include/llvm/MC/MCAsmLayout.h
../llvm-3.2.src/include/llvm/MC/MCCodeGenInfo.h
../llvm-3.2.src/include/llvm/MC/MCInstrInfo.h
../llvm-3.2.src/include/llvm/MC/SubtargetFeature.h
../llvm-3.2.src/include/llvm/MC/MCExpr.h
Comment from lines 33-37:
 /< Binary expressions.
 /< Constant expressions.
 /< References to labels and assigned expressions.
 /< Unary expressions.
 /< Target specific expression.

Lines 33-37 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/MC/MCLabel.h
../llvm-3.2.src/include/llvm/MC/MCFixupKindInfo.h
../llvm-3.2.src/include/llvm/MC/MCObjectStreamer.h
../llvm-3.2.src/include/llvm/MC/MCSection.h
../llvm-3.2.src/include/llvm/MC/MCObjectFileInfo.h
../llvm-3.2.src/include/llvm/MC/MCELFObjectWriter.h
../llvm-3.2.src/include/llvm/MC/MCInst.h
../llvm-3.2.src/include/llvm/MC/MCSubtargetInfo.h
../llvm-3.2.src/include/llvm/MC/MCInstrDesc.h
../llvm-3.2.src/include/llvm/MC/MCValue.h
../llvm-3.2.src/include/llvm/MC/MCSchedule.h
../llvm-3.2.src/include/llvm/MC/MCFixup.h
../llvm-3.2.src/include/llvm/MC/MCContext.h
../llvm-3.2.src/include/llvm/MC/MCModule.h
../llvm-3.2.src/include/llvm/MC/MCAsmInfo.h
../llvm-3.2.src/include/llvm/MC/MCSectionMachO.h
../llvm-3.2.src/include/llvm/MC/MachineLocation.h
../llvm-3.2.src/include/llvm/MC/MCELFSymbolFlags.h
../llvm-3.2.src/include/llvm/MC/MCInstrAnalysis.h
../llvm-3.2.src/include/llvm/MC/SectionKind.h
../llvm-3.2.src/include/llvm/MC/MCAsmBackend.h
../llvm-3.2.src/include/llvm/MC/MCObjectWriter.h
../llvm-3.2.src/include/llvm/MC/EDInstInfo.h
../llvm-3.2.src/include/llvm/MC/MCParser/MCAsmParserExtension.h
../llvm-3.2.src/include/llvm/MC/MCParser/MCParsedAsmOperand.h
../llvm-3.2.src/include/llvm/MC/MCParser/AsmLexer.h
../llvm-3.2.src/include/llvm/MC/MCParser/MCAsmParser.h
../llvm-3.2.src/include/llvm/MC/MCParser/MCAsmLexer.h
../llvm-3.2.src/include/llvm/MC/MCParser/AsmCond.h
../llvm-3.2.src/include/llvm/MC/MCFixedLenDisassembler.h
../llvm-3.2.src/include/llvm/MC/MCInstPrinter.h
../llvm-3.2.src/include/llvm/MC/MCSectionELF.h
../llvm-3.2.src/include/llvm/MC/MCDisassembler.h
../llvm-3.2.src/include/llvm/MC/MCAtom.h
../llvm-3.2.src/include/llvm/MC/MCRegisterInfo.h
../llvm-3.2.src/include/llvm/MC/MCWinCOFFObjectWriter.h
../llvm-3.2.src/include/llvm/MC/MCCodeEmitter.h
../llvm-3.2.src/include/llvm/MC/MCTargetAsmLexer.h
../llvm-3.2.src/include/llvm/MC/MCTargetAsmParser.h
../llvm-3.2.src/include/llvm/MC/MCAssembler.h
../llvm-3.2.src/include/llvm/MC/MCSectionCOFF.h
../llvm-3.2.src/include/llvm/MC/MCDwarf.h
../llvm-3.2.src/include/llvm/MC/MCMachOSymbolFlags.h
../llvm-3.2.src/include/llvm/MC/MCStreamer.h
../llvm-3.2.src/include/llvm/MC/MCMachObjectWriter.h
Comment from lines 71-71:
 / @}

Lines 71-71 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/MC/MCDirectives.h
../llvm-3.2.src/include/llvm/MC/MCSymbol.h
../llvm-3.2.src/include/llvm/MC/MCAsmInfoDarwin.h
../llvm-3.2.src/include/llvm/MC/MCWin64EH.h
../llvm-3.2.src/include/llvm/Assembly/Parser.h
../llvm-3.2.src/include/llvm/Assembly/Writer.h
../llvm-3.2.src/include/llvm/Assembly/AssemblyAnnotationWriter.h
../llvm-3.2.src/include/llvm/Assembly/PrintModulePass.h
../llvm-3.2.src/include/llvm/TypeFinder.h
../llvm-3.2.src/include/llvm/BasicBlock.h
../llvm-3.2.src/include/llvm/PassManagers.h
../llvm-3.2.src/include/llvm/Target/TargetInstrInfo.h
../llvm-3.2.src/include/llvm/Target/TargetRegisterInfo.h
../llvm-3.2.src/include/llvm/Target/TargetMachine.h
../llvm-3.2.src/include/llvm/Target/TargetCallingConv.h
../llvm-3.2.src/include/llvm/Target/TargetTransformImpl.h
../llvm-3.2.src/include/llvm/Target/TargetJITInfo.h
../llvm-3.2.src/include/llvm/Target/TargetSelectionDAGInfo.h
../llvm-3.2.src/include/llvm/Target/TargetLoweringObjectFile.h
../llvm-3.2.src/include/llvm/Target/TargetLowering.h
Comment from lines 537-537:
  See if this has an explicit type specified.

Lines 537-537 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Target/TargetOpcodes.h
../llvm-3.2.src/include/llvm/Target/TargetLibraryInfo.h
../llvm-3.2.src/include/llvm/Target/TargetOptions.h
../llvm-3.2.src/include/llvm/Target/TargetIntrinsicInfo.h
../llvm-3.2.src/include/llvm/Target/Mangler.h
../llvm-3.2.src/include/llvm/Target/TargetFrameLowering.h
../llvm-3.2.src/include/llvm/Target/TargetSubtargetInfo.h
../llvm-3.2.src/include/llvm/InlineAsm.h
../llvm-3.2.src/include/llvm/Support/Path.h
../llvm-3.2.src/include/llvm/Support/Disassembler.h
../llvm-3.2.src/include/llvm/Support/YAMLParser.h
Comment from lines 322-328:
 / @brief Represents a YAML map created from either a block map for a flow map.
 /
 / This parses the YAML stream as increment() is called.
 /
 / Example:
 /   Name: _main
 /   Scope: Global

Lines 322-328 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/DataFlow.h
../llvm-3.2.src/include/llvm/Support/MutexGuard.h
../llvm-3.2.src/include/llvm/Support/GetElementPtrTypeIterator.h
../llvm-3.2.src/include/llvm/Support/DataStream.h
../llvm-3.2.src/include/llvm/Support/IncludeFile.h
../llvm-3.2.src/include/llvm/Support/CodeGen.h
../llvm-3.2.src/include/llvm/Support/LeakDetector.h
../llvm-3.2.src/include/llvm/Support/Format.h
../llvm-3.2.src/include/llvm/Support/Allocator.h
../llvm-3.2.src/include/llvm/Support/Win64EH.h
../llvm-3.2.src/include/llvm/Support/CrashRecoveryContext.h
../llvm-3.2.src/include/llvm/Support/MemoryObject.h
../llvm-3.2.src/include/llvm/Support/RecyclingAllocator.h
../llvm-3.2.src/include/llvm/Support/DOTGraphTraits.h
../llvm-3.2.src/include/llvm/Support/IRReader.h
../llvm-3.2.src/include/llvm/Support/Timer.h
Comment from lines 103-103:
  Create an uninitialized timer, client must use 'init'.

Lines 103-103 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/Locale.h
../llvm-3.2.src/include/llvm/Support/InstVisitor.h
Comment from lines 120-120:
  Build the switch statement using the Instruction.def file...

Lines 120-120 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/PluginLoader.h
../llvm-3.2.src/include/llvm/Support/FileSystem.h
../llvm-3.2.src/include/llvm/Support/Threading.h
../llvm-3.2.src/include/llvm/Support/PointerLikeTypeTraits.h
../llvm-3.2.src/include/llvm/Support/Dwarf.h
../llvm-3.2.src/include/llvm/Support/ThreadLocal.h
../llvm-3.2.src/include/llvm/Support/FileOutputBuffer.h
../llvm-3.2.src/include/llvm/Support/IntegersSubset.h
../llvm-3.2.src/include/llvm/Support/CFG.h
Comment from lines 35-35:
  Loop to ignore non terminator uses (for example BlockAddresses).

Lines 35-35 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/GCOV.h
../llvm-3.2.src/include/llvm/Support/MathExtras.h
../llvm-3.2.src/include/llvm/Support/FormattedStream.h
../llvm-3.2.src/include/llvm/Support/Errno.h
Comment from lines 30-33:
  namespace sys
  namespace llvm

  LLVM_SYSTEM_ERRNO_H

Lines 30-33 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/TargetFolder.h
../llvm-3.2.src/include/llvm/Support/DataExtractor.h
../llvm-3.2.src/include/llvm/Support/SMLoc.h
../llvm-3.2.src/include/llvm/Support/ManagedStatic.h
../llvm-3.2.src/include/llvm/Support/RegistryParser.h
../llvm-3.2.src/include/llvm/Support/FEnv.h
../llvm-3.2.src/include/llvm/Support/AlignOf.h
../llvm-3.2.src/include/llvm/Support/ConstantRange.h
../llvm-3.2.src/include/llvm/Support/COFF.h
../llvm-3.2.src/include/llvm/Support/TargetRegistry.h
../llvm-3.2.src/include/llvm/Support/raw_os_ostream.h
../llvm-3.2.src/include/llvm/Support/TargetSelect.h
../llvm-3.2.src/include/llvm/Support/SystemUtils.h
../llvm-3.2.src/include/llvm/Support/Endian.h
../llvm-3.2.src/include/llvm/Support/Program.h
../llvm-3.2.src/include/llvm/Support/ToolOutputFile.h
../llvm-3.2.src/include/llvm/Support/AIXDataTypesFix.h
../llvm-3.2.src/include/llvm/Support/Host.h
../llvm-3.2.src/include/llvm/Support/Valgrind.h
../llvm-3.2.src/include/llvm/Support/Process.h
../llvm-3.2.src/include/llvm/Support/DataTypes.h
../llvm-3.2.src/include/llvm/Support/BlockFrequency.h
../llvm-3.2.src/include/llvm/Support/ConstantFolder.h
../llvm-3.2.src/include/llvm/Support/Signals.h
../llvm-3.2.src/include/llvm/Support/SaveAndRestore.h
../llvm-3.2.src/include/llvm/Support/system_error.h
../llvm-3.2.src/include/llvm/Support/Registry.h
../llvm-3.2.src/include/llvm/Support/CommandLine.h
Comment from lines 764-766:
 --------------------------------------------------
  parser<int>
 

Lines 764-766 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 786-788:
 --------------------------------------------------
  parser<unsigned>
 

Lines 786-788 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 807-809:
 --------------------------------------------------
  parser<unsigned long long>
 

Lines 807-809 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 829-831:
 --------------------------------------------------
  parser<double>
 

Lines 829-831 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 850-852:
 --------------------------------------------------
  parser<float>
 

Lines 850-852 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 978-978:
  Handle const char* as a special case...

Lines 978-978 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1025-1025:
  Where to store the object...

Lines 1025-1025 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1253-1253:
  Where to store the object...


Lines 1253-1253 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1338-1338:
  One option...

Lines 1338-1338 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1536-1536:
  One option...

Lines 1536-1536 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 1633-1633:
  One option...

Lines 1633-1633 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/type_traits.h
../llvm-3.2.src/include/llvm/Support/TimeValue.h
Comment from lines 107-109:
 / @}
 / @name Operators
 / @{

Lines 107-109 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 343-345:
 / @}
 / @name Implementation
 / @{

Lines 343-345 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 352-354:
 / @}
 / @name Data
 / @{

Lines 352-354 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/PrettyStackTrace.h
../llvm-3.2.src/include/llvm/Support/MemoryBuffer.h
../llvm-3.2.src/include/llvm/Support/PathV1.h
Comment from lines 678-680:
 / @}
 / @name Methods
 / @{

Lines 678-680 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/InstIterator.h
../llvm-3.2.src/include/llvm/Support/GraphWriter.h
Comment from lines 34-34:
  Private functions...

Lines 34-34 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 246-246:
 / emitSimpleNode - Outputs a simple (non-record) node

Lines 246-246 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 299-299:
  Start the graph emission process...

Lines 299-299 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/Debug.h
../llvm-3.2.src/include/llvm/Support/PassNameParser.h
../llvm-3.2.src/include/llvm/Support/Memory.h
../llvm-3.2.src/include/llvm/Support/PredIteratorCache.h
../llvm-3.2.src/include/llvm/Support/SourceMgr.h
../llvm-3.2.src/include/llvm/Support/OutputBuffer.h
../llvm-3.2.src/include/llvm/Support/Compiler.h
Comment from lines 184-184:
  LLVM_ATTRIBUTE_DEPRECATED(decl, "message")

Lines 184-184 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/ELF.h
Comment from lines 48-58:
  File identification index.
  File identification index.
  File identification index.
  File identification index.
  File class.
  Data encoding.
  File version.
  OS/ABI identification.
  ABI version.
  Start of padding bytes.
  Number of bytes in e_ident.

Lines 48-58 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/Regex.h
../llvm-3.2.src/include/llvm/Support/RWMutex.h
Comment from lines 27-28:
 / @name Constructors
 / @{

Lines 27-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/IntegersSubsetMapping.h
../llvm-3.2.src/include/llvm/Support/PatternMatch.h
../llvm-3.2.src/include/llvm/Support/DebugLoc.h
../llvm-3.2.src/include/llvm/Support/LockFileManager.h
../llvm-3.2.src/include/llvm/Support/CallSite.h
../llvm-3.2.src/include/llvm/Support/ValueHandle.h
../llvm-3.2.src/include/llvm/Support/Mutex.h
Comment from lines 27-28:
 / @name Constructors
 / @{

Lines 27-28 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/SwapByteOrder.h
../llvm-3.2.src/include/llvm/Support/raw_ostream.h
../llvm-3.2.src/include/llvm/Support/circular_raw_ostream.h
../llvm-3.2.src/include/llvm/Support/FileUtilities.h
../llvm-3.2.src/include/llvm/Support/Recycler.h
../llvm-3.2.src/include/llvm/Support/NoFolder.h
../llvm-3.2.src/include/llvm/Support/ErrorHandling.h
Comment from lines 24-24:
 / An error handler callback.

Lines 24-24 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Support/Atomic.h
../llvm-3.2.src/include/llvm/Support/StreamableMemoryObject.h
../llvm-3.2.src/include/llvm/Support/LEB128.h
../llvm-3.2.src/include/llvm/Support/BranchProbability.h
../llvm-3.2.src/include/llvm/Support/PathV2.h
../llvm-3.2.src/include/llvm/Support/MachO.h
../llvm-3.2.src/include/llvm/Support/StringPool.h
../llvm-3.2.src/include/llvm/Support/Casting.h
../llvm-3.2.src/include/llvm/Support/Solaris.h
../llvm-3.2.src/include/llvm/Support/DynamicLibrary.h
../llvm-3.2.src/include/llvm/Support/Capacity.h
../llvm-3.2.src/include/llvm/Instructions.h
Comment from lines 2724-2725:
  Check index correctness after increment.
  Note: Index == getNumCases() means end().

Lines 2724-2725 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/PassManager.h
../llvm-3.2.src/include/llvm/PassAnalysisSupport.h
../llvm-3.2.src/include/llvm/GlobalVariable.h
../llvm-3.2.src/include/llvm/Analysis/ProfileDataLoader.h
Comment from lines 91-94:
 typedef ProfileDataT<MachineFunction, MachineBasicBlock> MachineProfileData;

 / The ProfileDataLoader class is used to load raw profiling data from the
 / dump file.

Lines 91-94 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/MemoryDependenceAnalysis.h
../llvm-3.2.src/include/llvm/Analysis/ProfileInfoLoader.h
../llvm-3.2.src/include/llvm/Analysis/Verifier.h
../llvm-3.2.src/include/llvm/Analysis/ValueTracking.h
../llvm-3.2.src/include/llvm/Analysis/AliasSetTracker.h
../llvm-3.2.src/include/llvm/Analysis/IntervalPartition.h
Comment from lines 87-87:
  Interface to Intervals vector...

Lines 87-87 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/ProfileDataTypes.h
../llvm-3.2.src/include/llvm/Analysis/ScalarEvolution.h
../llvm-3.2.src/include/llvm/Analysis/PostDominators.h
../llvm-3.2.src/include/llvm/Analysis/LoopInfoImpl.h
../llvm-3.2.src/include/llvm/Analysis/BranchProbabilityInfo.h
../llvm-3.2.src/include/llvm/Analysis/AliasAnalysis.h
../llvm-3.2.src/include/llvm/Analysis/ConstantsScanner.h
../llvm-3.2.src/include/llvm/Analysis/LibCallAliasAnalysis.h
../llvm-3.2.src/include/llvm/Analysis/DominatorInternals.h
Comment from lines 43-43:
  Vertex[n] = V;


Lines 43-43 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 70-70:
  Vertex[n] = V;


Lines 70-70 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 162-162:
  Vertex[n] = V;

Lines 162-162 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/PathProfileInfo.h
../llvm-3.2.src/include/llvm/Analysis/RegionInfo.h
../llvm-3.2.src/include/llvm/Analysis/ProfileInfoTypes.h
../llvm-3.2.src/include/llvm/Analysis/RegionPass.h
Comment from lines 111-111:
 / @brief Get passes contained by this manager.

Lines 111-111 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/PHITransAddr.h
../llvm-3.2.src/include/llvm/Analysis/PathNumbering.h
../llvm-3.2.src/include/llvm/Analysis/LazyValueInfo.h
../llvm-3.2.src/include/llvm/Analysis/LoopPass.h
../llvm-3.2.src/include/llvm/Analysis/CaptureTracking.h
../llvm-3.2.src/include/llvm/Analysis/DependenceAnalysis.h
../llvm-3.2.src/include/llvm/Analysis/Interval.h
../llvm-3.2.src/include/llvm/Analysis/Passes.h
../llvm-3.2.src/include/llvm/Analysis/LoopIterator.h
../llvm-3.2.src/include/llvm/Analysis/Trace.h
../llvm-3.2.src/include/llvm/Analysis/CallGraph.h
../llvm-3.2.src/include/llvm/Analysis/DominanceFrontier.h
../llvm-3.2.src/include/llvm/Analysis/LibCallSemantics.h
../llvm-3.2.src/include/llvm/Analysis/Lint.h
../llvm-3.2.src/include/llvm/Analysis/ConstantFolding.h
../llvm-3.2.src/include/llvm/Analysis/BlockFrequencyInfo.h
../llvm-3.2.src/include/llvm/Analysis/RegionIterator.h
../llvm-3.2.src/include/llvm/Analysis/ScalarEvolutionNormalization.h
../llvm-3.2.src/include/llvm/Analysis/CodeMetrics.h
../llvm-3.2.src/include/llvm/Analysis/DomPrinter.h
../llvm-3.2.src/include/llvm/Analysis/IVUsers.h
../llvm-3.2.src/include/llvm/Analysis/MemoryBuiltins.h
../llvm-3.2.src/include/llvm/Analysis/IntervalIterator.h
Comment from lines 143-143:
  Free interval memory... if necessary

Lines 143-143 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/CFGPrinter.h
Comment from lines 84-84:
  Label source of conditional branches with "T" or "F"

Lines 84-84 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Analysis/InlineCost.h
../llvm-3.2.src/include/llvm/Analysis/FindUsedTypes.h
../llvm-3.2.src/include/llvm/Analysis/BlockFrequencyImpl.h
../llvm-3.2.src/include/llvm/Analysis/RegionPrinter.h
../llvm-3.2.src/include/llvm/Analysis/ScalarEvolutionExpander.h
../llvm-3.2.src/include/llvm/Analysis/ScalarEvolutionExpressions.h
../llvm-3.2.src/include/llvm/Analysis/ProfileInfo.h
../llvm-3.2.src/include/llvm/Analysis/SparsePropagation.h
../llvm-3.2.src/include/llvm/Analysis/Loads.h
../llvm-3.2.src/include/llvm/Analysis/InstructionSimplify.h
../llvm-3.2.src/include/llvm/Analysis/Dominators.h
../llvm-3.2.src/include/llvm/Analysis/LoopInfo.h
../llvm-3.2.src/include/llvm/Analysis/DOTGraphTraitsPass.h
../llvm-3.2.src/include/llvm/AddressingMode.h
../llvm-3.2.src/include/llvm/DebugInfo.h
../llvm-3.2.src/include/llvm/Bitcode/Archive.h
../llvm-3.2.src/include/llvm/Bitcode/BitCodes.h
../llvm-3.2.src/include/llvm/Bitcode/LLVMBitCodes.h
../llvm-3.2.src/include/llvm/Bitcode/BitstreamWriter.h
Comment from lines 210-211:
  Block header:
     [ENTER_SUBBLOCK, blockid, newcodelen, <align4bytes>, blocklen]

Lines 210-211 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 251-252:
  Block tail:
     [END_BLOCK, <align4bytes>]

Lines 251-252 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/include/llvm/Bitcode/BitstreamReader.h
../llvm-3.2.src/include/llvm/Bitcode/ReaderWriter.h
../llvm-3.2.src/include/llvm/CallGraphSCCPass.h
../llvm-3.2.src/include/llvm/GlobalValue.h
../llvm-3.2.src/include/llvm/DataLayout.h
../llvm-3.2.src/include/llvm/Type.h
../llvm-3.2.src/include/llvm/Transforms/Scalar.h
../llvm-3.2.src/include/llvm/Transforms/IPO.h
../llvm-3.2.src/include/llvm/Transforms/Vectorize.h
../llvm-3.2.src/include/llvm/Transforms/Instrumentation.h
../llvm-3.2.src/include/llvm/Transforms/IPO/InlinerPass.h
../llvm-3.2.src/include/llvm/Transforms/IPO/PassManagerBuilder.h
../llvm-3.2.src/include/llvm/Transforms/Utils/BuildLibCalls.h
../llvm-3.2.src/include/llvm/Transforms/Utils/IntegerDivision.h
../llvm-3.2.src/include/llvm/Transforms/Utils/ModuleUtils.h
../llvm-3.2.src/include/llvm/Transforms/Utils/CmpInstAnalysis.h
../llvm-3.2.src/include/llvm/Transforms/Utils/SimplifyIndVar.h
../llvm-3.2.src/include/llvm/Transforms/Utils/UnifyFunctionExitNodes.h
../llvm-3.2.src/include/llvm/Transforms/Utils/CodeExtractor.h
../llvm-3.2.src/include/llvm/Transforms/Utils/PromoteMemToReg.h
../llvm-3.2.src/include/llvm/Transforms/Utils/SimplifyLibCalls.h
../llvm-3.2.src/include/llvm/Transforms/Utils/AddrModeMatcher.h
../llvm-3.2.src/include/llvm/Transforms/Utils/Local.h
../llvm-3.2.src/include/llvm/Transforms/Utils/SSAUpdater.h
../llvm-3.2.src/include/llvm/Transforms/Utils/Cloning.h
../llvm-3.2.src/include/llvm/Transforms/Utils/UnrollLoop.h
../llvm-3.2.src/include/llvm/Transforms/Utils/BasicBlockUtils.h
../llvm-3.2.src/include/llvm/Transforms/Utils/BypassSlowDivision.h
../llvm-3.2.src/include/llvm/Transforms/Utils/SSAUpdaterImpl.h
../llvm-3.2.src/include/llvm/Transforms/Utils/ValueMapper.h
../llvm-3.2.src/tools/llvm-bcanalyzer/llvm-bcanalyzer.cpp
../llvm-3.2.src/tools/llvm-mcmarkup/llvm-mcmarkup.cpp
Comment from lines 212-212:
  Call llvm_shutdown() on exit.

Lines 212-212 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/lto/LTOCodeGenerator.h
../llvm-3.2.src/tools/lto/LTOModule.h
../llvm-3.2.src/tools/lto/LTOModule.cpp
Comment from lines 610-610:
  ignore all llvm.* symbols

Lines 610-610 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/lto/LTOCodeGenerator.cpp
Comment from lines 194-194:
  remove old buffer if compile() called twice

Lines 194-194 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/lto/lto.cpp
../llvm-3.2.src/tools/macho-dump/macho-dump.cpp
Comment from lines 403-403:
  Call llvm_shutdown() on exit.


Lines 403-403 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint/ExecutionDriver.cpp
Comment from lines 266-266:
  Emit the program to a bitcode file...

Lines 266-266 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint/ToolRunner.cpp
Comment from lines 52-54:
 / RunProgramWithTimeout - This function provides an alternate interface
 / to the sys::Program::ExecuteAndWait interface.
 / @see sys::Program::ExecuteAndWait

Lines 52-54 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 699-700:
  Hard-code the math library...
  Optimize the program a bit...

Lines 699-700 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint/FindBugs.cpp
../llvm-3.2.src/tools/bugpoint/bugpoint.cpp
../llvm-3.2.src/tools/bugpoint/ExtractFunction.cpp
../llvm-3.2.src/tools/bugpoint/OptimizerDriver.cpp
../llvm-3.2.src/tools/bugpoint/BugDriver.cpp
Comment from lines 33-34:
  Anonymous namespace to define command line options for debugging.
 

Lines 33-34 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint/ToolRunner.h
../llvm-3.2.src/tools/bugpoint/ListReducer.h
../llvm-3.2.src/tools/bugpoint/BugDriver.h
../llvm-3.2.src/tools/bugpoint/CrashDebugger.cpp
Comment from lines 89-89:
  The suffix crashes alone...

Lines 89-89 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 93-93:
  Nothing failed, restore state...

Lines 93-93 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 135-135:
  Convert list to set for fast lookup...

Lines 135-135 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 272-272:
  Clone the program to try hacking it apart...

Lines 272-272 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 276-276:
  Convert list to set for fast lookup...

Lines 276-276 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 333-333:
  Try running on the hacked up program...

Lines 333-333 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 382-382:
  Clone the program to try hacking it apart...

Lines 382-382 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 386-386:
  Convert list to set for fast lookup...

Lines 386-386 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 458-458:
  See if the program still causes a crash...

Lines 458-458 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 614-614:
  Yup, it does, keep the reduced version...

Lines 614-614 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint/Miscompilation.cpp
Comment from lines 646-646:
  Do the reduction...

Lines 646-646 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 718-718:
  Make sure something was miscompiled...

Lines 718-718 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 983-984:
 / debugCodeGenerator - debug errors in LLC, LLI, or CBE.
 /

Lines 983-984 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-cov/llvm-cov.cpp
../llvm-3.2.src/tools/llvm-diff/llvm-diff.cpp
../llvm-3.2.src/tools/llvm-diff/DiffConsumer.cpp
../llvm-3.2.src/tools/llvm-diff/DiffLog.h
../llvm-3.2.src/tools/llvm-diff/DifferenceEngine.h
../llvm-3.2.src/tools/llvm-diff/DifferenceEngine.cpp
../llvm-3.2.src/tools/llvm-diff/DiffConsumer.h
../llvm-3.2.src/tools/llvm-diff/DiffLog.cpp
../llvm-3.2.src/tools/llvm-extract/llvm-extract.cpp
Comment from lines 96-96:
  Call llvm_shutdown() on exit.

Lines 96-96 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/bugpoint-passes/TestPasses.cpp
../llvm-3.2.src/tools/llvm-prof/llvm-prof.cpp
Comment from lines 264-264:
  Read in the bitcode file...

Lines 264-264 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/lli/RecordingMemoryManager.h
../llvm-3.2.src/tools/lli/RemoteTarget.h
../llvm-3.2.src/tools/lli/lli.cpp
Comment from lines 523-523:
  Load the bitcode...

Lines 523-523 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/lli/RecordingMemoryManager.cpp
../llvm-3.2.src/tools/lli/RemoteTarget.cpp
../llvm-3.2.src/tools/llvm-size/llvm-size.cpp
Comment from lines 289-289:
  Call llvm_shutdown() on exit.

Lines 289-289 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-nm/llvm-nm.cpp
../llvm-3.2.src/tools/llvm-ar/llvm-ar.cpp
Comment from lines 88-107:
  Modifiers to follow operation to vary behavior
 /< 'a' modifier
 /< 'b' modifier
 /< 'c' modifier
 /< 'f' modifier
 /< 'i' modifier
 /< 'k' modifier
 /< 'N' modifier
 /< 'o' modifier
 /< 'P' modifier
 /< 'R' modifier
 /< 's' & 'S' modifiers
 /< 'u' modifier
 /< 'v' modifier
 /< 'V' modifier

  Relative Positional Argument (for insert/move). This variable holds
  the name of the archive member to which the 'a', 'b' or 'i' modifier
  refers. Only one of 'a', 'b' or 'i' can be specified so we only need
  one variable.

Lines 88-107 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-as/llvm-as.cpp
../llvm-3.2.src/tools/llvm-link/llvm-link.cpp
../llvm-3.2.src/tools/llvm-stress/llvm-stress.cpp
Comment from lines 683-683:
  Init LLVM, call llvm_shutdown() on exit, parse args, etc.

Lines 683-683 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-ranlib/llvm-ranlib.cpp
../llvm-3.2.src/tools/llvm-dis/llvm-dis.cpp
Comment from lines 119-119:
  Call llvm_shutdown() on exit.



Lines 119-119 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-mc/Disassembler.h
../llvm-3.2.src/tools/llvm-mc/Disassembler.cpp
../llvm-3.2.src/tools/llvm-mc/llvm-mc.cpp
../llvm-3.2.src/tools/llvm-objdump/MCFunction.h
../llvm-3.2.src/tools/llvm-objdump/llvm-objdump.h
../llvm-3.2.src/tools/llvm-objdump/MCFunction.cpp
../llvm-3.2.src/tools/llvm-objdump/MachODump.cpp
Comment from lines 586-586:
  No predecessors, this is a data block. Print as .byte directives.

Lines 586-586 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-objdump/llvm-objdump.cpp
Comment from lines 542-548:
  Local -> 'l', Global -> 'g', Neither -> ' '
  Weak?
  Constructor. Not supported yet.
  Warning. Not supported yet.
  Indirect reference to another symbol.
  Debugging (d) or dynamic (D) symbol.
  Name of function (F), file (f) or object (O).

Lines 542-548 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 653-653:
  Defaults to a.out if no filenames specified.

Lines 653-653 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-rtdyld/llvm-rtdyld.cpp
Comment from lines 111-111:
  *** 


Lines 111-111 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 172-172:
  Call llvm_shutdown() on exit.


Lines 172-172 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/opt/AnalysisWrappers.cpp
../llvm-3.2.src/tools/opt/PrintSCC.cpp
../llvm-3.2.src/tools/opt/opt.cpp
Comment from lines 213-213:
  Get and print pass...

Lines 213-213 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 244-244:
  Get and print pass...

Lines 244-244 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 277-277:
  Get and print pass...

Lines 277-277 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 344-344:
  Get and print pass...

Lines 344-344 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 593-593:
  Load the input module...

Lines 593-593 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/opt/GraphPrinters.cpp
../llvm-3.2.src/tools/llvm-readobj/llvm-readobj.cpp
../llvm-3.2.src/tools/llvm-dwarfdump/llvm-dwarfdump.cpp
Comment from lines 200-200:
  Call llvm_shutdown() on exit.


Lines 200-200 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 204-204:
  Defaults to a.out if no filenames specified.

Lines 204-204 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llc/llc.cpp
Comment from lines 183-183:
  Load the module to be compiled...

Lines 183-183 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/llvm-config/llvm-config.cpp
Comment from lines 125-125:
  *** 


Lines 125-125 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/tools/gold/gold-plugin.cpp
../llvm-3.2.src/test/CodeGen/CellSPU/useful-harnesses/i64operations.h
../llvm-3.2.src/unittests/VMCore/MDBuilderTest.cpp
../llvm-3.2.src/unittests/VMCore/IRBuilderTest.cpp
../llvm-3.2.src/unittests/VMCore/ConstantsTest.cpp
Comment from lines 93-94:
  @u = constant i1 srem(i1  1, i1 -1) ; overflow
  @u = constant i1 false

Lines 93-94 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/VMCore/InstructionsTest.cpp
../llvm-3.2.src/unittests/VMCore/MetadataTest.cpp
../llvm-3.2.src/unittests/VMCore/TypesTest.cpp
../llvm-3.2.src/unittests/VMCore/TypeBuilderTest.cpp
../llvm-3.2.src/unittests/VMCore/VerifierTest.cpp
../llvm-3.2.src/unittests/VMCore/PassManagerTest.cpp
Comment from lines 178-179:
  FIXME: PR4112
  EXPECT_TRUE(getAnalysisIfAvailable<DataLayout>());

Lines 178-179 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 529-529:
  Block return (label_return)

Lines 529-529 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/VMCore/ValueMapTest.cpp
../llvm-3.2.src/unittests/VMCore/DominatorTreeTest.cpp
../llvm-3.2.src/unittests/ADT/APFloatTest.cpp
../llvm-3.2.src/unittests/ADT/FoldingSet.cpp
../llvm-3.2.src/unittests/ADT/ilistTest.cpp
../llvm-3.2.src/unittests/ADT/SmallStringTest.cpp
../llvm-3.2.src/unittests/ADT/DAGDeltaAlgorithmTest.cpp
../llvm-3.2.src/unittests/ADT/DenseSetTest.cpp
../llvm-3.2.src/unittests/ADT/IntrusiveRefCntPtrTest.cpp
../llvm-3.2.src/unittests/ADT/IntervalMapTest.cpp
Comment from lines 536-536:
  Test clear() on branched map.

Lines 536-536 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/ADT/SCCIteratorTest.cpp
Comment from lines 207-207:
 / Dereference operator.

Lines 207-207 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/ADT/StringMapTest.cpp
Comment from lines 107-107:
  Test clear() method.

Lines 107-107 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 114-114:
  Test erase(iterator) method.

Lines 114-114 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 121-121:
  Test erase(value) method.

Lines 121-121 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 202-202:
  Test StringMapEntry::Create() method.

Lines 202-202 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/ADT/SmallVectorTest.cpp
../llvm-3.2.src/unittests/ADT/SmallPtrSetTest.cpp
../llvm-3.2.src/unittests/ADT/HashingTest.cpp
../llvm-3.2.src/unittests/ADT/ImmutableMapTest.cpp
../llvm-3.2.src/unittests/ADT/DeltaAlgorithmTest.cpp
../llvm-3.2.src/unittests/ADT/ImmutableSetTest.cpp
../llvm-3.2.src/unittests/ADT/BitVectorTest.cpp
../llvm-3.2.src/unittests/ADT/DenseMapTest.cpp
../llvm-3.2.src/unittests/ADT/TripleTest.cpp
../llvm-3.2.src/unittests/ADT/IntEqClassesTest.cpp
../llvm-3.2.src/unittests/ADT/StringRefTest.cpp
../llvm-3.2.src/unittests/ADT/TwineTest.cpp
../llvm-3.2.src/unittests/ADT/SparseBitVectorTest.cpp
../llvm-3.2.src/unittests/ADT/TinyPtrVectorTest.cpp
../llvm-3.2.src/unittests/ADT/VariadicFunctionTest.cpp
../llvm-3.2.src/unittests/ADT/APIntTest.cpp
../llvm-3.2.src/unittests/ADT/PackedVectorTest.cpp
../llvm-3.2.src/unittests/ADT/SparseSetTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/MCJIT/MCJITTestBase.h
Comment from lines 140-142:
  Inserts a function named 'main' that returns a uint32_t:
     int32_t main() { return X; }
  where X is given by returnCode

Lines 140-142 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 218-218:
 .setMAttrs(MAttrs)

Lines 218-218 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/ExecutionEngine/MCJIT/SectionMemoryManager.cpp
../llvm-3.2.src/unittests/ExecutionEngine/MCJIT/SectionMemoryManager.h
../llvm-3.2.src/unittests/ExecutionEngine/MCJIT/MCJITTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/JIT/JITEventListenerTestCommon.h
../llvm-3.2.src/unittests/ExecutionEngine/JIT/JITMemoryManagerTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/JIT/MultiJITTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/JIT/OProfileJITEventListenerTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/JIT/JITTest.cpp
Comment from lines 468-469:
  If JITEmitDebugInfo is off, we'll "deallocate" NULL, which doesn't
  appear in startExceptionTableCalls.

Lines 468-469 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/ExecutionEngine/JIT/IntelJITEventListenerTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/JIT/JITEventListenerTest.cpp
../llvm-3.2.src/unittests/ExecutionEngine/ExecutionEngineTest.cpp
Comment from lines 62-62:
  Check that update...() can be called before add...().

Lines 62-62 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/Support/TimeValue.cpp
../llvm-3.2.src/unittests/Support/formatted_raw_ostream_test.cpp
../llvm-3.2.src/unittests/Support/YAMLParserTest.cpp
../llvm-3.2.src/unittests/Support/MemoryTest.cpp
../llvm-3.2.src/unittests/Support/MathExtrasTest.cpp
../llvm-3.2.src/unittests/Support/AllocatorTest.cpp
../llvm-3.2.src/unittests/Support/EndianTest.cpp
../llvm-3.2.src/unittests/Support/LeakDetectorTest.cpp
../llvm-3.2.src/unittests/Support/ValueHandleTest.cpp
../llvm-3.2.src/unittests/Support/Casting.cpp
Comment from lines 32-35:
   static bool classof(const bar *X) {
     cerr << "Classof: " << X << "\n";
     return true;
     }

Lines 32-35 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Comment from lines 152-152:
  anonymous namespace


Lines 152-152 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/Support/DataExtractorTest.cpp
../llvm-3.2.src/unittests/Support/BlockFrequencyTest.cpp
../llvm-3.2.src/unittests/Support/SwapByteOrderTest.cpp
../llvm-3.2.src/unittests/Support/Path.cpp
Comment from lines 56-59:
 net");
 net/foo");
 /foo///");
 /foo///bar");

Lines 56-59 seems to be commented code.

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
../llvm-3.2.src/unittests/Support/ConstantRangeTest.cpp
../llvm-3.2.src/unittests/Support/raw_ostream_test.cpp
../llvm-3.2.src/unittests/Support/FileOutputBufferTest.cpp
../llvm-3.2.src/unittests/Support/AlignOfTest.cpp
../llvm-3.2.src/unittests/Support/MemoryBufferTest.cpp
../llvm-3.2.src/unittests/Support/CommandLineTest.cpp
../llvm-3.2.src/unittests/Support/IntegersSubsetTest.cpp
../llvm-3.2.src/unittests/Support/ManagedStatic.cpp
../llvm-3.2.src/unittests/Support/RegexTest.cpp
../llvm-3.2.src/unittests/Analysis/ScalarEvolutionTest.cpp
../llvm-3.2.src/unittests/Bitcode/BitReaderTest.cpp
../llvm-3.2.src/unittests/Transforms/Utils/Cloning.cpp
../llvm-3.2.src/unittests/Transforms/Utils/IntegerDivision.cpp
../llvm-3.2.src/unittests/Transforms/Utils/Local.cpp
